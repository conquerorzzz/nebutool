{"version":3,"file":"js/app.0cd7ccfa.js","mappings":"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","sources":["webpack://Nebu/./src/lib/index.ts","webpack://Nebu/./src/lib/index.ts?fb2b","webpack://Nebu/./src/lib/online.ts","webpack://Nebu/./src/lib/online.ts?2fe3","webpack://Nebu/./src/lib/value.ts","webpack://Nebu/./src/main.ts","webpack://Nebu/./src/registerServiceWorker.ts","webpack://Nebu/./src/views/HomeView/index.vue","webpack://Nebu/./src/views/HomeView/bannerView.vue","webpack://Nebu/./src/views/HomeView/bannerView.vue?8305","webpack://Nebu/./src/views/HomeView/lending.vue","webpack://Nebu/./src/views/HomeView/lending.vue?b9ff","webpack://Nebu/./src/views/HomeView/rwa.vue","webpack://Nebu/./src/views/HomeView/rwa.vue?424b","webpack://Nebu/./src/views/HomeView/profit.vue","webpack://Nebu/./src/views/HomeView/profit.vue?5017","webpack://Nebu/./src/views/HomeView/power.vue","webpack://Nebu/./src/views/HomeView/power.vue?1466","webpack://Nebu/./src/views/HomeView/index.vue?3c42","webpack://Nebu/./src/router/index.ts","webpack://Nebu/./src/store/pendingtx.ts","webpack://Nebu/./src/store/reserve.ts","webpack://Nebu/./src/store/profit.ts","webpack://Nebu/./src/store/account.ts","webpack://Nebu/./src/store/ogscore.ts","webpack://Nebu/./src/store/allaccounts.ts","webpack://Nebu/./src/store/index.ts","webpack://Nebu/./src/utils/common/index.ts","webpack://Nebu/./src/utils/common/index.ts?878d","webpack://Nebu/./src/utils/convertors.ts","webpack://Nebu/./src/utils/pyth/index.ts","webpack://Nebu/./src/App.vue","webpack://Nebu/./src/components/HeadView.vue","webpack://Nebu/./src/App.vue?7ccd","webpack://Nebu/./src/components/FootView.vue","webpack://Nebu/./src/components/FootView.vue?137a","webpack://Nebu/./src/components/HeadView.vue?b2e0","webpack://Nebu/./src/components/LoadingView.vue?9c20","webpack://Nebu/./src/components/LoadingView.vue","webpack://Nebu/./src/components/LoadingView.vue?2329","webpack://Nebu/./src/components/MobileView.vue","webpack://Nebu/./src/components/MobileView.vue?3f66","webpack://Nebu/webpack/bootstrap","webpack://Nebu/webpack/runtime/amd options","webpack://Nebu/webpack/runtime/async module","webpack://Nebu/webpack/runtime/chunk loaded","webpack://Nebu/webpack/runtime/compat get default export","webpack://Nebu/webpack/runtime/define property getters","webpack://Nebu/webpack/runtime/ensure chunk","webpack://Nebu/webpack/runtime/get javascript chunk filename","webpack://Nebu/webpack/runtime/get mini-css chunk filename","webpack://Nebu/webpack/runtime/global","webpack://Nebu/webpack/runtime/hasOwnProperty shorthand","webpack://Nebu/webpack/runtime/load script","webpack://Nebu/webpack/runtime/make namespace object","webpack://Nebu/webpack/runtime/node module decorator","webpack://Nebu/webpack/runtime/publicPath","webpack://Nebu/webpack/runtime/css loading","webpack://Nebu/webpack/runtime/jsonp chunk loading","webpack://Nebu/webpack/startup"],"sourcesContent":["/* eslint-disable */\r\nimport { getKeypairFromEnvironment } from \"@solana-developers/node-helpers\"\r\nimport * as web3 from \"@solana/web3.js\"\r\nimport Dotenv from \"dotenv\"\r\nimport * as borsh from '@coral-xyz/borsh'\r\nimport { Wallet, BorshAccountsCoder,BorshCoder } from \"@coral-xyz/anchor\"\r\nimport { u64 } from '@solana/buffer-layout-utils';\r\nimport BigNumber from 'bignumber.js';\r\nimport { initWallet, useWallet, useAnchorWallet, AnchorWallet } from 'solana-wallets-vue'\r\nimport * as solanaWallet from '@solana/wallet-adapter-react'\r\nimport * as token from '@solana/spl-token'\r\nimport * as anchor from \"@project-serum/anchor\";\r\nimport { Program } from \"@project-serum/anchor\";\r\nimport  * as pythTool from \"../utils/pyth/index\"\r\nimport * as I80F48Tool from './I80F48';\r\nimport { ElMessage } from 'element-plus'\r\nimport {getReserveList}  from './online'\r\nimport {fireworks} from '@tsparticles/fireworks'\r\nimport {confetti} from '@tsparticles/confetti'\r\nimport { PriceServiceConnection } from \"@pythnetwork/price-service-client\";\r\nimport { useRoute, useRouter, RouteRecordRaw } from 'vue-router'\r\nimport * as bs58 from 'bs58'\r\nimport { chunkedGetRawMultipleAccountInfos } from \"./chunks\";\r\nimport {\r\n  InstructionWithEphemeralSigners,\r\n  PythSolanaReceiver,\r\n} from \"@pythnetwork/pyth-solana-receiver\";\r\n\r\nimport { Connection,PublicKey } from '@solana/web3.js'\r\nimport NodeWallet from \"@project-serum/anchor/dist/cjs/nodewallet\";\r\nimport type { WalletName } from \"@solana/wallet-adapter-base\";\r\nimport { decodeUTF8 } from \"tweetnacl-util\";\r\nimport {\r\n  integerToDecimal,\r\n  decimalToInteger,\r\n} from '../utils/convertors'\r\n// import { commonTool } from '../utils/common'\r\nimport { \r\n  NATIVE_MINT,\r\n  createAssociatedTokenAccountIdempotentInstruction,\r\n  createSyncNativeInstruction,\r\n  createCloseAccountInstruction,\r\n  getAssociatedTokenAddressSync,\r\n  wrappedI80F48toBigNumber\r\n} from '../utils/common'\r\nimport idl  from './nxlend.json'\r\nimport {\r\n  programLendingIdStr,\r\n  marketAccKey,\r\n  needUpdate,\r\n  node_rpc,\r\n  HOURS_PER_YEAR,\r\n  look_up_address,\r\n  SOL_WRAP_FACTOR } from './value'\r\nimport appStore from '../store'\r\nimport { el } from \"element-plus/es/locale\"\r\n\r\ninitWallet({autoConnect:true});\r\n\r\nconst PYTH_PRICE_CONF_INTERVALS = new BigNumber(2.12);\r\nconst { sendTransaction,signTransaction,signAllTransactions,wallet,wallets,select: selectWallet } = useWallet()\r\nDotenv.config()\r\n\r\nlet programLendingId = new web3.PublicKey(\r\n  programLendingIdStr\r\n)\r\n\r\nlet marketAcc = new web3.PublicKey(\r\n  marketAccKey\r\n)\r\nconst connection = new web3.Connection(node_rpc!, \"confirmed\");\r\nconst lookUpTable = new web3.PublicKey(look_up_address)\r\n// const connection = new web3.Connection(web3.clusterApiUrl(\"devnet\"), \"confirmed\");\r\n \r\n\r\nexport function delay(ms: number) {\r\n  return new Promise( resolve => setTimeout(resolve, ms) );\r\n}\r\n\r\nexport async function createNxlendAccount(\r\n  needNew: boolean = true,\r\n  noWallet?: Number\r\n){\r\n  const { publicKey } = useWallet()\r\n  if(!publicKey.value && !noWallet) {\r\n    await delay(200)\r\n    return await createNxlendAccount(needNew,1)\r\n  }\r\n  if(!publicKey.value && noWallet) {\r\n    return null\r\n  }\r\n  const userAccSeed = new anchor.BN(50);\r\n  const [userAcc, userAccBump] = web3.PublicKey.findProgramAddressSync(\r\n    [marketAcc.toBuffer(), publicKey.value!.toBuffer(), userAccSeed.toArrayLike(Buffer, \"le\", 8)],\r\n    programLendingId\r\n  );\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  let nxlendAccData\r\n  try {\r\n    nxlendAccData = await program.account.nxlendAccount.fetch(userAcc)\r\n    return {\r\n      isExist: true,\r\n      key: userAcc.toBase58(),\r\n      data: nxlendAccData,\r\n      createAccountIx: null\r\n    }\r\n  } catch (error) {\r\n    console.log('nxlendAccount.fetch',error)\r\n    const ix = await program.methods.createUserAccount(userAccSeed\r\n      ).accounts({\r\n        nxlendMarket: marketAcc,\r\n        nxlendAccount: userAcc,\r\n        owner: publicKey.value!,\r\n        feePayer: publicKey.value!,\r\n        systemProgram: web3.SystemProgram.programId\r\n      })\r\n      .signers([])\r\n      .instruction()\r\n      if(!needNew) return null\r\n      return {\r\n        isExist: false,\r\n        key: userAcc.toBase58(),\r\n        data: null,\r\n        createAccountIx: ix\r\n      }\r\n  }\r\n}\r\nasync function getNativeBalance (address: any) {\r\n  const pbk = new web3.PublicKey(address)\r\n  try {\r\n    const amount = await connection.getBalance(pbk)\r\n    return integerToDecimal(amount,9)\r\n  } catch (error) {\r\n    console.log('connection.getBalance',error)\r\n    return 0\r\n  }\r\n}\r\nexport async function getReserveListOwner (getBalanceFlag: boolean = true,clearBalanceFlag: boolean = false) {\r\n  // const onLineReserveList = await getReserveList()\r\n  let onLineReserveList\r\n  //const onLineReserveList  = localOnlineReserveList\r\n  if(appStore.reserve.state.onlineReserveList.length > 0) {\r\n    onLineReserveList = JSON.parse(JSON.stringify(appStore.reserve.state.onlineReserveList))\r\n  } else {\r\n    onLineReserveList = await getReserveList()\r\n    appStore.reserve.state.onlineReserveList = onLineReserveList\r\n  }\r\n  //let reserveList = JSON.parse(JSON.stringify(reserve_list))\r\n  let sliderList = onLineReserveList.map((e:any)=>{\r\n    e.reserve_mint_key = e.tokenMint\r\n    e.reserve_key = e.reserveAddress\r\n    e.slider = 50\r\n    return e\r\n  })\r\n  appStore.profit.state.sliderList = sliderList\r\n  appStore.account.state.sliderChange = appStore.account.state.sliderChange + 1\r\n  let reserveList = onLineReserveList.map((e:any)=>{\r\n    //e.token_img = require(e.logoURI) ? require(e.logoURI) : require('@/assets/token/sol.webp')\r\n    e.token_img = e.logoURI\r\n    e.token_name = e.tokenSymbol\r\n    e.reserve_mint_key = e.tokenMint\r\n    e.reserve_key = e.reserveAddress\r\n    e.priceFeedID = e.priceFeedID ? e.priceFeedID : null\r\n    e.reserveAta = '',\r\n    e.total_supply = 0,\r\n    e.total_borrow = 0,\r\n    e.supply_apr = 0,\r\n    e.borrow_apr = 0,\r\n    e.supply_apy = 0,\r\n    e.borrow_apy = 0,\r\n    e.ltv = 0,\r\n    e.asset_ntoken_ratio = 0,\r\n    e.debit_ntoken_ratio = 0,\r\n    e.my_supply = 0,\r\n    e.my_borrow = 0,\r\n    e.amount = 0,\r\n    e.capacity = 0,\r\n    e.maxBorrow = 0,\r\n    e.usd_price = 0,\r\n    e.usd_price_low = 0,\r\n    e.usd_price_high = 0,\r\n    e.usd_price_weighted= 0,\r\n    e.usd_price_weighted_low= 0,\r\n    e.usd_price_weighted_high= 0,\r\n    e.decimals=0,\r\n    e.asset_ratio= 0,\r\n    e.asset_liq_ratio= 0,\r\n    e.debit_set_ratio= 0,\r\n    e.debit_high_ratio= 0,\r\n    e.debit_mid_ratio= 0,\r\n    e.debit_low_ratio= 0,\r\n    e.debit_liq_ratio= 0,\r\n    e.type=1,\r\n    e.interestSetting={}\r\n    return e\r\n  })\r\n  const { publicKey } = useWallet()\r\n  // let reserveList = JSON.parse(JSON.stringify(reserve_list))\r\n  let autoRepay\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const reserves = reserveList.map((e)=>{\r\n    console.log('e.reserve_key',e.reserve_key)\r\n    return new web3.PublicKey(e.reserve_key)\r\n    //return new web3.PublicKey()\r\n  })\r\n  let nxlendReserveDatas = await getOnchainReserveData(program,reserves)\r\n  // try {\r\n  //   nxlendReserveDatas = await program.account.reserve.fetchMultiple(reserves)\r\n  // } catch (error) {\r\n  //   console.log('fetchMultiple reserve datas',error)\r\n  //   return\r\n  // }\r\n  console.log('nxlendReserveDatas',nxlendReserveDatas)\r\n  //const nxlendReserveDatas = await program.account.reserve.fetchMultiple(reserves)\r\n  let i = 0\r\n  while (i < reserveList.length) {\r\n    const tokenMint = new web3.PublicKey(reserveList[i].reserve_mint_key)\r\n    let nxlendReserveData:any\r\n    nxlendReserveDatas.forEach((e:any) => {\r\n      if(e.tokenMint.equals(tokenMint)) {\r\n        nxlendReserveData = e\r\n      }\r\n    });\r\n    if(!nxlendReserveData) {\r\n      i = i + 1\r\n      continue\r\n    }\r\n    reserveList[i].type = 0\r\n    if(JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('collateral') > -1) {\r\n      reserveList[i].type = 1\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('noCollaAddup') > -1) {\r\n      reserveList[i].type = 2\r\n    }\r\n    if(reserveList[i].type === 0) {\r\n      ElMessage({\r\n        message: 'error collateral type',\r\n        type: 'warning',\r\n      })\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythEma') > -1) {\r\n      reserveList[i].oracleType = 'pythV1'\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythV2') > -1) {\r\n      reserveList[i].oracleType = 'pythV2'\r\n    }\r\n    reserveList[i].pythOracle = nxlendReserveData.setting.oracleKeys[0].toBase58()\r\n    reserveList[i].capacity = integerToDecimal(nxlendReserveData.setting.capacity,nxlendReserveData.tokenDecimals)\r\n    reserveList[i].maxBorrow = integerToDecimal(nxlendReserveData.setting.maxBorrowable,nxlendReserveData.tokenDecimals)\r\n    reserveList[i].reserveAta = nxlendReserveData.tokenInfo.tokenAccount\r\n    reserveList[i].asset_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio).toNumber()\r\n    reserveList[i].asset_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueLiqRatio).toNumber()\r\n    reserveList[i].debit_low_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioLowRisk).toNumber()\r\n    reserveList[i].debit_mid_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioMidRisk).toNumber()\r\n    reserveList[i].debit_high_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioHighRisk).toNumber()\r\n    reserveList[i].debit_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueLiqRatio).toNumber()\r\n    const totalAssetQuantity = getTotalAssetQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveAssetNtokenAmount),wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio))\r\n    const totalLiabilityQuantity = getTotalLiabilityQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveDebtNtokenAmount),wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio))\r\n    reserveList[i].decimals = nxlendReserveData.tokenDecimals\r\n    // const ltv = new BigNumber(1).div(wrappedI80F48toBigNumber(debitValueRatioRisk)).times(wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio)).times(100).toFixed(2)\r\n    // reserveList[i].ltv = ltv\r\n    const interestSetting = {\r\n      rateChangeUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr1).toString(),\r\n      rateChangeUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr2).toString(),\r\n      irUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr1).toString(),\r\n      irUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr2).toString(),\r\n      maxIr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.maxIr).toString(),\r\n      treasuryBaseApr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryBaseApr).toString(),\r\n      treasuryAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryAdditionRatio).toString(),\r\n      marketFeeBase: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketFeeBase).toString(),\r\n      marketAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketAdditionRatio).toString()\r\n    }\r\n    reserveList[i].interestSetting = interestSetting\r\n    reserveList[i].asset_ntoken_ratio = nxlendReserveData.creditDebit.assetNtokenRatio\r\n    reserveList[i].debit_ntoken_ratio = nxlendReserveData.creditDebit.debtNtokenRatio\r\n    reserveList[i].total_supply = integerToDecimal(totalAssetQuantity.toFixed(0),nxlendReserveData.tokenDecimals)\r\n    reserveList[i].total_borrow = integerToDecimal(totalLiabilityQuantity.toFixed(0),nxlendReserveData.tokenDecimals)\r\n    const apy = getApyNew(reserveList[i].total_supply,reserveList[i].total_borrow,reserveList[i].interestSetting)\r\n    reserveList[i].supply_apr = Number.isNaN(apy.supplyAPR.toNumber()) ? 0: new BigNumber(apy.supplyAPR).multipliedBy(100).toFixed(2)\r\n    reserveList[i].supply_apy = Number.isNaN(apy.supplyAPY) ? 0:new BigNumber(apy.supplyAPY).multipliedBy(100).toFixed(2)\r\n    reserveList[i].borrow_apr = new BigNumber(apy.borrowAPR).multipliedBy(100).toFixed(2)\r\n    reserveList[i].borrow_apy = new BigNumber(apy.borrowAPY).multipliedBy(100).toFixed(2)\r\n    i = i + 1\r\n  }\r\n  console.log('reserveList',reserveList)\r\n  const pythOracleList = reserveList.map((e)=>{\r\n    return {type: e.oracleType, pythOracle:new web3.PublicKey(e.pythOracle), reserveAddress:e.reserve_key, priceFeed: e.priceFeedID}\r\n  })\r\n  let price_data = await getOnchainPriceData(pythOracleList)\r\n  // try {\r\n  //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\r\n  // } catch (error) {\r\n  //   console.log('getMultipleAccountsInfo pythOracleList',error)\r\n  // }\r\n  reserveList.forEach(r => {\r\n    price_data.forEach(p => {\r\n      if(p.reserveAddress === r.reserve_key) {\r\n        const priceRes = p.priceData\r\n        r.usd_price = priceRes.priceRealtime.price\r\n        r.usd_price_low = priceRes.priceRealtime.lowestPrice\r\n        r.usd_price_high = priceRes.priceRealtime.highestPrice\r\n        r.usd_price_weighted = priceRes.priceWeighted.price\r\n        r.usd_price_weighted_low = priceRes.priceWeighted.lowestPrice\r\n        r.usd_price_weighted_high = priceRes.priceWeighted.highestPrice\r\n      }\r\n    });\r\n  });\r\n  let risk_level = 1\r\n  let nxlend_acc\r\n  try {\r\n    nxlend_acc = await createNxlendAccount(false)\r\n  } catch (error) {\r\n    console.log('createNxlendAccount',error)\r\n  }\r\n  if(nxlend_acc) {\r\n  //if(nxlend_acc_key && !nxlend_acc_key ) {\r\n    //const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc_key)\r\n    let nxlendAccData = nxlend_acc.data\r\n    // try {\r\n    //   nxlendAccData = await program.account.nxlendAccount.fetch(nxlend_acc_pbk)\r\n    // } catch (error) {\r\n    //   console.log('nxlendAccount.fetch',error)\r\n    // }\r\n    console.log('nxlendAccData',nxlendAccData)\r\n    autoRepay = wrappedI80F48toBigNumber(nxlendAccData.repayLtv).toString()\r\n    const self_risk = JSON.stringify(nxlendAccData.riskPreference)\r\n    if(self_risk.indexOf('low') > -1){\r\n      risk_level = 0\r\n    }\r\n    if(self_risk.indexOf('middle') > -1){\r\n      risk_level = 1\r\n    }\r\n    if(self_risk.indexOf('high') > -1){\r\n      risk_level = 2\r\n    }\r\n    const mybalance = nxlendAccData.userMarketInfo.userReserves\r\n    let balanceActive:any = []\r\n    mybalance.forEach(e => {\r\n      if(e.active) {\r\n        balanceActive.push(e)\r\n      }\r\n    });\r\n    balanceActive.forEach(e => {\r\n      reserveList.forEach(r => {\r\n        if(e.active && e.reservePk.toBase58() === r.reserve_key ) {\r\n          r.my_supply = integerToDecimal(getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount),wrappedI80F48toBigNumber(r.asset_ntoken_ratio)).toFixed(0),r.decimals)\r\n          r.my_borrow = integerToDecimal(getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount),wrappedI80F48toBigNumber(r.debit_ntoken_ratio)).toFixed(0),r.decimals)\r\n          //console.log('supply',getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount),wrappedI80F48toBigNumber(r.asset_ntoken_ratio)).toString(10))\r\n          //console.log('borrow',getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount),wrappedI80F48toBigNumber(r.debit_ntoken_ratio)).toString(10))\r\n        }\r\n      });\r\n    });\r\n    reserveList.forEach(r => {\r\n      switch (risk_level) {\r\n        case 0:\r\n          r.debit_set_ratio = r.debit_low_ratio\r\n          break;\r\n        case 1:\r\n          r.debit_set_ratio = r.debit_mid_ratio\r\n          break;\r\n        case 2:\r\n          r.debit_set_ratio = r.debit_high_ratio\r\n          break;\r\n      }\r\n    });\r\n  } else {\r\n    reserveList.forEach(r => {\r\n      r.my_supply = 0\r\n      r.my_borrow = 0\r\n      r.debit_set_ratio = r.debit_mid_ratio\r\n    });\r\n  }\r\n  reserveList.forEach(e => {\r\n    e.ltv = new BigNumber(1).div(e.debit_set_ratio).times(100).toFixed(2)\r\n  });\r\n  appStore.reserve.state.reserveList = reserveList\r\n  appStore.account.state.riskLevel = risk_level\r\n  appStore.account.state.autoRepayLtv = autoRepay\r\n  appStore.account.state.reserveChange = appStore.account.state.reserveChange + 1\r\n  if(publicKey.value && getBalanceFlag) {\r\n    let j = 0\r\n    while(j < reserveList.length) {\r\n      const r = reserveList[j]\r\n      let amount\r\n      if(r.reserve_mint_key === NATIVE_MINT.toBase58()) {\r\n        amount = await getNativeBalance(publicKey.value)\r\n      } else {\r\n        try {\r\n          const user_token_acc_key = await createTokenAccount(\r\n            connection,\r\n            publicKey.value!,\r\n            new web3.PublicKey(r.reserve_mint_key),\r\n            publicKey.value!,\r\n            true,\r\n            false\r\n          )\r\n          amount = user_token_acc_key? integerToDecimal(user_token_acc_key.amount,r.decimals) : 0\r\n        } catch (error) {\r\n          amount = 0\r\n        }\r\n                \r\n      }\r\n      const balance = {\r\n        mintKey: r.reserve_mint_key,\r\n        amount: amount\r\n      }\r\n      if(appStore.account.state.balanceList.length < reserveList.length) {\r\n        appStore.account.state.balanceList[j]= balance\r\n      } else {\r\n        appStore.account.state.balanceList.forEach(e => {\r\n          if(e.mintKey === balance.mintKey) {\r\n            e.amount = balance.amount\r\n          }\r\n        });\r\n      }\r\n      appStore.account.state.change = appStore.account.state.change + 1\r\n      j= j + 1\r\n    }\r\n  } \r\n  else if(clearBalanceFlag) {\r\n    let j = 0\r\n    while(j < reserveList.length) {\r\n      const r = reserveList[j]\r\n      const amount = 0\r\n      const balance = {\r\n        mintKey: r.reserve_mint_key,\r\n        amount: amount\r\n      }\r\n      appStore.account.state.balanceList.push(balance)\r\n      appStore.account.state.change = appStore.account.state.change + 1\r\n      j= j + 1\r\n    } \r\n  }\r\n  appStore.account.state.change = appStore.account.state.change + 1\r\n  appStore.account.state.reserveChange = appStore.account.state.reserveChange + 1\r\n  // return reserveList\r\n  console.log('reserveList',reserveList)\r\n}\r\nasync function getOnchainPriceData(priceList:any) {\r\n  console.log('priceList',priceList)\r\n  let priceData\r\n  let v1list:any[] = []\r\n  let v2list:any[] = []\r\n  priceList.forEach(e => {\r\n    if(e.type === 'pythV1') {\r\n      v1list.push(e)\r\n    }\r\n    if(e.type === 'pythV2') {\r\n      v2list.push(e)\r\n    }\r\n  });\r\n  console.log('v1list',v1list)\r\n  console.log('v2list',v2list)\r\n  try {\r\n    const priceAccount = v1list.map(p=>{\r\n      return p.pythOracle\r\n    })\r\n    const res = await connection.getMultipleAccountsInfo(priceAccount)\r\n    let priceDataList:any[] = []\r\n    for(let i = 0; i < v1list.length; i++) {\r\n      const priceData1 = pythTool.parsePriceData(res[i]!.data)\r\n      const priceData = getPrice(priceData1)\r\n      const item = {type:v1list[i].type,priceData:priceData,reserveAddress:v1list[i].reserveAddress,time:priceData.time}\r\n      priceDataList.push(item)\r\n    }\r\n    const priceAccountList = v2list.map(p=>{\r\n      return p.pythOracle\r\n    })\r\n    console.log('priceAccountList',priceAccountList)\r\n    const v2PriceData = await getPriceV2FromAccount(priceAccountList)\r\n    //const v2PriceData = await getPriceV2(priceFeedList)\r\n    console.log('v2PriceData',v2PriceData)\r\n    for(let i = 0; i < v2list.length; i++) {\r\n      const priceData = v2PriceData && v2PriceData[i]\r\n      const item = {type:v2list[i].type,priceData:priceData,reserveAddress:v2list[i].reserveAddress,time:priceData!.time}\r\n      priceDataList.push(item)\r\n    }\r\n    let time = new Date().getTime()\r\n    priceDataList.forEach(p=>{\r\n      const cut = new BigNumber(p.time).times(1000).minus(Number(time)).toString()\r\n      console.log(p.reserveAddress)\r\n      console.log('cut',cut)\r\n    })\r\n    console.log('priceDataList',priceDataList)\r\n    return priceDataList\r\n  } catch (error) {\r\n    await delay(5000)\r\n    console.log('getMultipleAccountsInfo pythOracleList',error)\r\n    priceData = await getOnchainPriceData(priceList)\r\n    return priceData\r\n  }\r\n}\r\nasync function getOnchainReserveData(program: any,reserveList:any) {\r\n  let reserveListData\r\n  try {\r\n    reserveListData = await program.account.reserve.fetchMultiple(reserveList)\r\n    return reserveListData\r\n  } catch (error) {\r\n    console.log('getOnchain reserve Data failed',error)\r\n    await delay(500)\r\n    reserveListData = await getOnchainReserveData(program,reserveList)\r\n    return reserveListData\r\n  }\r\n}\r\nasync function getPriceV2 ($priceFeedList) {\r\n  const priceServiceConnection = new PriceServiceConnection(\r\n    \"https://hermes.pyth.network/\",\r\n    { priceFeedRequestConfig: { binary: true } }\r\n  );\r\n  const price_data = await priceServiceConnection.getLatestPriceFeeds($priceFeedList)\r\n  console.log('price_data',price_data)\r\n  const v2PriceData = price_data?.map(e=>{\r\n    const data = e.toJson()  \r\n    const pythPriceRealtime = new BigNumber(data.price.price).shiftedBy(data.price.expo);\r\n    const pythConfidenceRealtime = new BigNumber(data.price.conf).shiftedBy(data.price.expo);\r\n    const pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n  \r\n    const pythPrice = new BigNumber(data.ema_price.price).shiftedBy(data.ema_price.expo);\r\n    const pythConfInterval = new BigNumber(data.ema_price.conf).shiftedBy(data.ema_price.expo);\r\n    const pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const time = data.price.publish_time\r\n    console.log(pythPriceRealtime.toString())\r\n    console.log(pythPrice.toString())\r\n    const priceRealtime = {\r\n      price: pythPriceRealtime,\r\n      confidence: pythConfidenceRealtime,\r\n      lowestPrice: pythLowestPriceRealtime,\r\n      highestPrice: pythHighestPriceRealtime,\r\n    }\r\n    const priceWeighted = {\r\n      price: pythPrice,\r\n      confidence: pythConfInterval,\r\n      lowestPrice: pythLowestPrice,\r\n      highestPrice: pythHighestPrice,\r\n    }\r\n    const priceData = {\r\n        time:time,\r\n        priceRealtime: priceRealtime,\r\n        priceWeighted: priceWeighted\r\n      }\r\n    return priceData\r\n  })\r\n  return v2PriceData\r\n}\r\nasync function getPriceV2FromAccount ($priceAccountList) {\r\n  const wallet = useAnchorWallet();\r\n  const pythSolanaReceiver = new PythSolanaReceiver({\r\n    connection,\r\n    wallet: wallet.value! as Wallet,\r\n  });\r\n  let priceDataList:any[] = []\r\n  let i = 0\r\n  while(i<$priceAccountList.length) {\r\n    const data = await pythSolanaReceiver.fetchPriceUpdateAccount($priceAccountList[i])\r\n    priceDataList.push(data?.priceMessage)\r\n    i = i + 1\r\n  }\r\n  const v2PriceData = priceDataList?.map(e=>{\r\n    const data = e\r\n    const pythPriceRealtime = new BigNumber(data.price).shiftedBy(data.exponent);\r\n    const pythConfidenceRealtime = new BigNumber(data.conf).shiftedBy(data.exponent);\r\n    const pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n  \r\n    const pythPrice = new BigNumber(data.emaPrice).shiftedBy(data.exponent);\r\n    const pythConfInterval = new BigNumber(data.emaConf).shiftedBy(data.exponent);\r\n    const pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n    const time = data.publishTime\r\n    console.log(pythPriceRealtime.toString())\r\n    console.log(pythPrice.toString())\r\n    const priceRealtime = {\r\n      price: pythPriceRealtime,\r\n      confidence: pythConfidenceRealtime,\r\n      lowestPrice: pythLowestPriceRealtime,\r\n      highestPrice: pythHighestPriceRealtime,\r\n    }\r\n    const priceWeighted = {\r\n      price: pythPrice,\r\n      confidence: pythConfInterval,\r\n      lowestPrice: pythLowestPrice,\r\n      highestPrice: pythHighestPrice,\r\n    }\r\n    const priceData = {\r\n        time:time,\r\n        priceRealtime: priceRealtime,\r\n        priceWeighted: priceWeighted\r\n      }\r\n    return priceData\r\n  })\r\n  return v2PriceData\r\n}\r\nfunction getPrice(pythPriceData:any) {\r\n  let priceData = pythPriceData.price;\r\n  if (priceData === undefined) {\r\n    priceData = pythPriceData.previousPrice;\r\n  }\r\n\r\n  let confidenceData = pythPriceData.confidence;\r\n  if (confidenceData === undefined) {\r\n    confidenceData = pythPriceData.previousConfidence;\r\n  }\r\n  const time = pythPriceData.timestamp\r\n  const pythPriceRealtime = new BigNumber(priceData!);\r\n  const pythConfidenceRealtime = new BigNumber(confidenceData!);\r\n  const pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n  const pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\r\n\r\n  const pythPrice = new BigNumber(pythPriceData.emaPrice.value);\r\n  const pythConfInterval = new BigNumber(pythPriceData.emaConfidence.value);\r\n  const pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n  const pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\r\n  return {\r\n    time:time,\r\n    priceRealtime: {\r\n      price: pythPriceRealtime,\r\n      confidence: pythConfidenceRealtime,\r\n      lowestPrice: pythLowestPriceRealtime,\r\n      highestPrice: pythHighestPriceRealtime,\r\n    },\r\n    priceWeighted: {\r\n      price: pythPrice,\r\n      confidence: pythConfInterval,\r\n      lowestPrice: pythLowestPrice,\r\n      highestPrice: pythHighestPrice,\r\n    },\r\n  };\r\n}\r\nexport function getApy(\r\n  supply: any,\r\n  borrow: any,\r\n  interestSetting: any\r\n){\r\n  const ONE = new BigNumber(1)\r\n  const supplyBN = new BigNumber(supply)\r\n  const borrowBN = new BigNumber(borrow)\r\n  const use = borrowBN.dividedBy(supplyBN)\r\n  const rateChangeUr1 = wrappedI80F48toBigNumber(interestSetting.rateChangeUr1)\r\n  const rateChangeUr2 = wrappedI80F48toBigNumber(interestSetting.rateChangeUr2)\r\n  const irUr1 = wrappedI80F48toBigNumber(interestSetting.irUr1)\r\n  const irUr2 = wrappedI80F48toBigNumber(interestSetting.irUr2)\r\n  const maxIr  = wrappedI80F48toBigNumber(interestSetting.maxIr)\r\n  const treasuryBaseApr = wrappedI80F48toBigNumber(interestSetting.treasuryBaseApr)\r\n  const treasuryAdditionRatio = wrappedI80F48toBigNumber(interestSetting.treasuryAdditionRatio)\r\n  const marketFeeBase = wrappedI80F48toBigNumber(interestSetting.marketFeeBase)\r\n  const marketAdditionRatio = wrappedI80F48toBigNumber(interestSetting.marketAdditionRatio)\r\n  let borrowBaseAPY = new BigNumber(0)\r\n  if(use.lte(rateChangeUr1)) {\r\n    borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1)\r\n  }\r\n  if(use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1)\r\n  }\r\n  if(use.gt(rateChangeUr2)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2)\r\n  }\r\n  const supplyAPY = (borrowBaseAPY.multipliedBy(use))\r\n  const borrowAPY = (borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase)))\r\n  const apy = {\r\n    supplyAPY: supplyAPY,\r\n    borrowAPY: borrowAPY,\r\n  }\r\n  return apy\r\n}\r\nexport function getApyNew(\r\n  supply: any,\r\n  borrow: any,\r\n  interestSetting: any\r\n){\r\n  const ONE = new BigNumber(1)\r\n  const supplyBN = new BigNumber(supply)\r\n  const borrowBN = new BigNumber(borrow)\r\n  const use = borrowBN.dividedBy(supplyBN)\r\n  const rateChangeUr1 = new BigNumber(interestSetting.rateChangeUr1)\r\n  const rateChangeUr2 = new BigNumber(interestSetting.rateChangeUr2)\r\n  const irUr1 = new BigNumber(interestSetting.irUr1)\r\n  const irUr2 = new BigNumber(interestSetting.irUr2)\r\n  const maxIr  = new BigNumber(interestSetting.maxIr)\r\n  const treasuryBaseApr = new BigNumber(interestSetting.treasuryBaseApr)\r\n  const treasuryAdditionRatio = new BigNumber(interestSetting.treasuryAdditionRatio)\r\n  const marketFeeBase = new BigNumber(interestSetting.marketFeeBase)\r\n  const marketAdditionRatio = new BigNumber(interestSetting.marketAdditionRatio)\r\n  let borrowBaseAPY = new BigNumber(0)\r\n  if(use.lte(rateChangeUr1)) {\r\n    borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1)\r\n  }\r\n  if(use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1)\r\n  }\r\n  if(use.gt(rateChangeUr2)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2)\r\n  }\r\n  const supplyAPR = borrowBaseAPY.multipliedBy(use)\r\n  const supplyAPY = aprToApy((borrowBaseAPY.multipliedBy(use)).toNumber())\r\n  const borrowAPR = borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase))\r\n  const borrowAPY = aprToApy((borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase))).toNumber())\r\n  const apy = {\r\n    supplyAPR: supplyAPR,\r\n    supplyAPY: supplyAPY,\r\n    borrowAPR: borrowAPR,\r\n    borrowAPY: borrowAPY,\r\n  }\r\n  return apy\r\n}\r\nexport function getAprNew(\r\n  supply: any,\r\n  borrow: any,\r\n  interestSetting: any\r\n){\r\n  const ONE = new BigNumber(1)\r\n  const supplyBN = new BigNumber(supply)\r\n  const borrowBN = new BigNumber(borrow)\r\n  const use = borrowBN.dividedBy(supplyBN)\r\n  const rateChangeUr1 = new BigNumber(interestSetting.rateChangeUr1)\r\n  const rateChangeUr2 = new BigNumber(interestSetting.rateChangeUr2)\r\n  const irUr1 = new BigNumber(interestSetting.irUr1)\r\n  const irUr2 = new BigNumber(interestSetting.irUr2)\r\n  const maxIr  = new BigNumber(interestSetting.maxIr)\r\n  const treasuryBaseApr = new BigNumber(interestSetting.treasuryBaseApr)\r\n  const treasuryAdditionRatio = new BigNumber(interestSetting.treasuryAdditionRatio)\r\n  const marketFeeBase = new BigNumber(interestSetting.marketFeeBase)\r\n  const marketAdditionRatio = new BigNumber(interestSetting.marketAdditionRatio)\r\n  let borrowBaseAPY = new BigNumber(0)\r\n  if(use.lte(rateChangeUr1)) {\r\n    borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1)\r\n  }\r\n  if(use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1)\r\n  }\r\n  if(use.gt(rateChangeUr2)) {\r\n    borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2)\r\n  }\r\n  const supplyAPR = borrowBaseAPY.multipliedBy(use)\r\n  const borrowAPR = borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase))\r\n  const apy = {\r\n    supplyAPR: supplyAPR,\r\n    borrowAPR: borrowAPR,\r\n  }\r\n  return apy\r\n}\r\nexport async function getAccData(\r\n  nxlend_acc_key:any\r\n){\r\n  const wallet = useAnchorWallet();\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc_key)\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const nxlendAccData = await program.account.nxlendAccount.fetch(nxlend_acc_pbk)\r\n  return nxlendAccData\r\n}\r\n\r\nexport async function checkHealth(\r\n\r\n){}\r\n\r\nexport async function lendSetAccountRiskPreference(\r\n  nxlend_acc:any,\r\n  risk_level:any\r\n){\r\n  const { publicKey } = useWallet()\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  let riskParams\r\n  switch (risk_level) {\r\n    case 0:\r\n      riskParams = {\r\n        low:{}\r\n      }\r\n      break;\r\n    case 1:\r\n      riskParams = {\r\n        middle:{}\r\n      }\r\n      break;\r\n    case 2:\r\n      riskParams = {\r\n        high:{}\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const ix = await program.methods.setAccountRiskPreference(\r\n    riskParams\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    owner: publicKey.value!,\r\n  })\r\n  .signers([])\r\n  .instruction()\r\n  const Ixs = [ix];\r\n  let risk\r\n  switch (risk_level) {\r\n    case 0:\r\n      risk = 'Low'\r\n      break;\r\n    case 1:\r\n      risk = 'Medium'\r\n      break;\r\n    case 2:\r\n      risk = 'High'\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const data = {\r\n    type: 'Set Risk',\r\n    text: `Set risk to ${risk}`,\r\n    typed: 'Set Risk',\r\n    textd: `Set risk to ${risk}`,\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc);\r\n  return signature\r\n}\r\n\r\nexport async function lendingAccountDeposit(\r\n  amount:any,\r\n  nxlend_acc:any,\r\n  reserve_str:any,\r\n  reserve_mint_str:any,\r\n  decimals: any,\r\n  reserveData: any\r\n){\r\n  const reserve = new web3.PublicKey(reserve_str)\r\n  const reserve_mint = new web3.PublicKey(reserve_mint_str)\r\n  const [liquidity_vault, liquidity_vault_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_g = liquidity_vault;\r\n  const { publicKey } = useWallet()\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const user_token_data = await makeTokenAccountIx(\r\n    connection,\r\n    publicKey.value!,\r\n    reserve_mint,\r\n    publicKey.value!,\r\n    true\r\n  )\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  const amountInt = decimalToInteger(amount, decimals)\r\n  const deposit_amount = new anchor.BN(amountInt);\r\n  const ix = await program.methods.depositIntoReserve(\r\n    deposit_amount\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    signer: publicKey.value!,\r\n    reserve: reserve,\r\n    // signerTokenAccount: user_token_acc_key.address,\r\n    signerTokenAccount: user_token_data.AssociatedTokenAddress,\r\n    reserveAssetTokenAccount: reserve_l_v_g,\r\n    tokenProgram: token.TOKEN_PROGRAM_ID\r\n  })\r\n  .signers([])\r\n  .instruction()\r\n  const Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value!,ix,amountInt) : [ix];\r\n  const data = {\r\n    type: 'Depositing',\r\n    text: `Depositing ${amount} ${reserveData.token_name} into the market`,\r\n    typed: 'Depositing',\r\n    textd: `Depositing ${amount} ${reserveData.token_name} into the market`,\r\n  }\r\n  let priceFeeds:any = []\r\n  if(reserveData.priceFeedID) {\r\n    priceFeeds.push(reserveData.priceFeedID)\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc,priceFeeds);\r\n  return signature\r\n}\r\nfunction getBorrowRemindingAccountList(\r\n  nxlend_acc_data:any,\r\n  reserve_str: any\r\n){\r\n  const reserve_list = JSON.parse(JSON.stringify(appStore.reserve.state.reserveList))\r\n  const nxlendAccData = nxlend_acc_data\r\n  const mybalance = nxlendAccData.userMarketInfo.userReserves\r\n  let activeBalanceList:any = []\r\n  let newBorrow = true\r\n  mybalance.forEach(e => {\r\n    if(e.active) {\r\n      if(e.reservePk.toBase58() === reserve_str )\r\n      newBorrow = false\r\n    }\r\n  });\r\n  let newBorrowAdded = false\r\n  mybalance.forEach(e => {\r\n    if(e.active) {\r\n      activeBalanceList.push(e.reservePk)\r\n    } else {\r\n      if(!newBorrowAdded && newBorrow) {\r\n        activeBalanceList.push(new web3.PublicKey(reserve_str))\r\n        newBorrowAdded = true\r\n      }\r\n    }\r\n  });\r\n  let arr:any = []\r\n  let priceFeeds:any = []\r\n  activeBalanceList.forEach(r => {\r\n    reserve_list.forEach(e => {\r\n      if(e.reserve_key === r.toBase58()) {\r\n        const reserve = new web3.PublicKey(e.reserve_key)\r\n        arr.push({\r\n          isSigner: false,\r\n          isWritable: true,\r\n          pubkey: reserve\r\n        })\r\n        const pythOracleReserve = new web3.PublicKey(e.pythOracle)\r\n        arr.push({\r\n          isSigner: false,\r\n          isWritable: true,\r\n          pubkey: pythOracleReserve\r\n        })\r\n        const priceFeed = e.priceFeedID\r\n        if(priceFeed) {\r\n          priceFeeds.push(priceFeed)\r\n        }\r\n      }\r\n    });\r\n  });\r\n  return {borrowRemindingAccountList:arr,priceFeeds:priceFeeds}\r\n}\r\nexport async function lendingAccountBorrow(\r\n  amount:any,\r\n  nxlend_acc:any,\r\n  reserve_str:any,\r\n  reserve_mint_str:any,\r\n  decimals: any,\r\n  reserveData: any\r\n){\r\n  const reserve = new web3.PublicKey(reserve_str)\r\n  const reserve_mint = new web3.PublicKey(reserve_mint_str)\r\n  const [liquidity_vault, liquidity_vault_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_g = liquidity_vault;\r\n  const [liquidity_vault_authority, liquidity_vault_authority_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_a_g = liquidity_vault_authority;\r\n  const { publicKey } = useWallet()\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n\r\n  const user_token_data = await makeTokenAccountIx(\r\n    connection,\r\n    publicKey.value!,\r\n    reserve_mint,\r\n    publicKey.value!,\r\n    true\r\n  )\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  const amountInt = decimalToInteger(amount, decimals)\r\n  const borrow_amount = new anchor.BN(amountInt);\r\n  const {borrowRemindingAccountList,priceFeeds} = getBorrowRemindingAccountList(nxlend_acc.data,reserve_str)\r\n  const ix = await program.methods.borrowFromReserve(\r\n    borrow_amount\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    signer: publicKey.value!,\r\n    reserve: reserve,\r\n    destinationTokenAccount: user_token_data.AssociatedTokenAddress,\r\n    tokenAccountAuthority:reserve_l_v_a_g,\r\n    reserveTokenAccount:reserve_l_v_g,\r\n    tokenProgram: token.TOKEN_PROGRAM_ID\r\n  })\r\n  .remainingAccounts(borrowRemindingAccountList)\r\n  .signers([]).instruction()\r\n  let Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value!,ix,0) : [ix];\r\n\r\n  Ixs = [user_token_data.ix].concat(Ixs)\r\n\r\n  const data = {\r\n    type: 'Borrowing',\r\n    text: `Borrowing ${amount} ${reserveData.token_name} from the market`,\r\n    typed: 'Borrowing',\r\n    textd: `Borrowing ${amount} ${reserveData.token_name} from the market`,\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc,priceFeeds);\r\n  \r\n  return signature\r\n}\r\n\r\nexport async function lendingAccountRepay(\r\n  amount:any,\r\n  nxlend_acc:any,\r\n  reserve_str:any,\r\n  reserve_mint_str:any,\r\n  decimals: any,\r\n  all: boolean,\r\n  reserveData: any\r\n){\r\n  const reserve = new web3.PublicKey(reserve_str)\r\n  const reserve_mint = new web3.PublicKey(reserve_mint_str)\r\n  const [liquidity_vault, liquidity_vault_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_g = liquidity_vault;\r\n  const [liquidity_vault_authority, liquidity_vault_authority_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_a_g = liquidity_vault_authority;\r\n  const { publicKey } = useWallet()\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n\r\n  const user_token_data = await makeTokenAccountIx(\r\n    connection,\r\n    publicKey.value!,\r\n    reserve_mint,\r\n    publicKey.value!,\r\n    true\r\n  )\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  const amountInt = decimalToInteger(amount, decimals)\r\n  const repay_amount = new anchor.BN(amountInt);\r\n  const ix = await program.methods.repayToReserve(\r\n    repay_amount,all\r\n     //repay_amount,false\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    signer: publicKey.value!,\r\n    reserve: reserve,\r\n    signerTokenAccount: user_token_data.AssociatedTokenAddress,\r\n    reserveTokenAccount:reserve_l_v_g,\r\n    tokenProgram: token.TOKEN_PROGRAM_ID\r\n  })\r\n  .signers([])\r\n  .instruction()\r\n  const Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value!,ix,amountInt) : [ix];\r\n  \r\n  const data = {\r\n    type: 'Repaying',\r\n    text: `Repaying ${amount} ${reserveData.token_name} into the market`,\r\n    typed: 'Repaying',\r\n    textd: `Repaying ${amount} ${reserveData.token_name} into the market`,\r\n  }\r\n  let priceFeeds:any = []\r\n  if(reserveData.priceFeedID) {\r\n    priceFeeds.push(reserveData.priceFeedID)\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc,priceFeeds);\r\n  \r\n  return signature\r\n}\r\n\r\nfunction i80f48FromNumber(x: number): anchor.BN {\r\n  let MULTIPLIER_NUMBER = Math.pow(2, 48);\r\n  let int_part = Math.trunc(x);\r\n  let v = new anchor.BN(int_part).iushln(48);\r\n  v.iadd(new anchor.BN((x - int_part) * MULTIPLIER_NUMBER));\r\n  return v;\r\n}\r\nexport async function setRepayLTV(\r\n  nxlend_acc:any,\r\n  amount: any\r\n  ){\r\n  //lending reserve_mint_a by user2\r\n  const { publicKey } = useWallet()\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const numberAmount = Number(amount)\r\n  const i80f48Amount = i80f48FromNumber(numberAmount)\r\n  const ix = await program.methods.setAccountRepayLtv(\r\n    //i80f48Amount\r\n    {value: i80f48Amount}\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    owner: publicKey.value!\r\n  })\r\n  .signers([])\r\n  .instruction()\r\n  const Ixs = [ix];\r\n  const data = {\r\n    type: 'Set Repay LTV',\r\n    text: `Set Repay LTV at ${amount*100} %`,\r\n    typed: 'Set Repay LTV',\r\n    textd: `Set Repay LTV at ${amount*100} %`,\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc);\r\n  \r\n  return signature\r\n}\r\nfunction getWithdrawRemindingAccountList(\r\n  nxlend_acc_data:any,\r\n  reserve_str: any,\r\n  all: boolean\r\n){\r\n  const reserve_list = JSON.parse(JSON.stringify(appStore.reserve.state.reserveList))\r\n  const nxlendAccData = nxlend_acc_data\r\n  const mybalance = nxlendAccData.userMarketInfo.userReserves\r\n  let activeBalanceList:any = []\r\n  mybalance.forEach(e => {\r\n    if(e.active) {\r\n      activeBalanceList.push(e)\r\n    }\r\n  });\r\n  let arr:any = []\r\n  let priceFeeds:any = []\r\n  activeBalanceList.forEach(r => {\r\n    if(r.reservePk.toBase58() !== reserve_str || !all ) {\r\n      reserve_list.forEach(e => {\r\n        if(e.reserve_key === r.reservePk.toBase58()) {\r\n          const reserve = new web3.PublicKey(e.reserve_key)\r\n          arr.push({\r\n            isSigner: false,\r\n            isWritable: true,\r\n            pubkey: reserve\r\n          })\r\n          const pythOracleReserve = new web3.PublicKey(e.pythOracle)\r\n          arr.push({\r\n            isSigner: false,\r\n            isWritable: true,\r\n            pubkey: pythOracleReserve\r\n          })\r\n          const priceFeed = e.priceFeedID\r\n          if(priceFeed) {\r\n            priceFeeds.push(priceFeed)\r\n          }\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return {withdrawRemindingAccountList:arr,priceFeeds:priceFeeds}\r\n}\r\nexport async function lendingAccountWithdraw(\r\n  amount:any,\r\n  nxlend_acc:any,\r\n  reserve_str:any,\r\n  reserve_mint_str:any,\r\n  all: boolean,\r\n  decimals: any,\r\n  reserveData: any\r\n){\r\n  const reserve = new web3.PublicKey(reserve_str)\r\n  const reserve_mint = new web3.PublicKey(reserve_mint_str)\r\n  const [liquidity_vault, liquidity_vault_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_g = liquidity_vault;\r\n  const [liquidity_vault_authority, liquidity_vault_authority_bump] = web3.PublicKey.findProgramAddressSync(\r\n    [Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()],\r\n    programLendingId\r\n  );\r\n  const reserve_l_v_a_g = liquidity_vault_authority;\r\n  const { publicKey } = useWallet()\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n\r\n  const user_token_data = await makeTokenAccountIx(\r\n    connection,\r\n    publicKey.value!,\r\n    reserve_mint,\r\n    publicKey.value!,\r\n    true\r\n  )\r\n  const nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key)\r\n  const amountInt = decimalToInteger(amount, decimals)\r\n  const withdraw_amount = new anchor.BN(amountInt);\r\n  const {withdrawRemindingAccountList,priceFeeds} = await getWithdrawRemindingAccountList(nxlend_acc.data,reserve_str,all)\r\n  //const remindingAccountList = await getWithdrawRemindingAccountList(nxlend_acc.data,reserve_str,false)\r\n  console.log('withdraw remindingAccountList',withdrawRemindingAccountList)\r\n  const ix = await program.methods.withdrawFromReserve(\r\n    withdraw_amount, all\r\n    //withdraw_amount, false\r\n  ).accounts({\r\n    nxlendMarket: marketAcc,\r\n    nxlendAccount: nxlend_acc_pbk,\r\n    signer: publicKey.value!,\r\n    reserve: reserve,\r\n    destinationTokenAccount: user_token_data.AssociatedTokenAddress,\r\n    tokenAccountAuthority:reserve_l_v_a_g,\r\n    reserveTokenAccount:reserve_l_v_g,\r\n    tokenProgram: token.TOKEN_PROGRAM_ID\r\n  })\r\n  .remainingAccounts(withdrawRemindingAccountList)\r\n  .signers([])\r\n  .instruction()\r\n  let Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value!,ix,0) : [ix];\r\n  Ixs = [user_token_data.ix].concat(Ixs)\r\n  const data = {\r\n    type: 'Withdrawing',\r\n    text: `Withdrawing ${amount} ${reserveData.token_name} from the market`,\r\n    typed: 'Withdrawing',\r\n    textd: `Withdrawing ${amount} ${reserveData.token_name} from the market`,\r\n  }\r\n  const signature = await nxSendTransaction(Ixs,data,nxlend_acc,priceFeeds);\r\n  \r\n  return signature\r\n}\r\n\r\n\r\nexport async function getBalance(\r\n  token_account: web3.PublicKey\r\n)  {\r\n      console.log('token_account',token_account)\r\n      let tokenAccountBalance2 = await connection.getTokenAccountBalance(token_account);\r\n      return tokenAccountBalance2.value.uiAmount\r\n}\r\n\r\nasync function makeTokenAccountIx(\r\n  connection: web3.Connection,\r\n  payer: web3.PublicKey,\r\n  mint: web3.PublicKey,\r\n  owner: web3.PublicKey,\r\n  allowOwnerOffCurve: boolean,\r\n  needNew: boolean = true,\r\n){\r\n  const AssociatedTokenAddress = await token.getAssociatedTokenAddress(\r\n    mint,\r\n    owner\r\n  )\r\n  const ix = token.createAssociatedTokenAccountIdempotentInstruction(\r\n    payer, // payer\r\n    AssociatedTokenAddress, // ata\r\n    owner, // owner\r\n    mint // mint\r\n  )\r\n  try {\r\n    const tokenAccount = await token.getAccount(\r\n      connection,\r\n      AssociatedTokenAddress\r\n    )\r\n    return {\r\n      AssociatedTokenAddress,\r\n      ix,\r\n      isExit: true\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      AssociatedTokenAddress,\r\n      ix,\r\n      isExit: false\r\n    }\r\n  }\r\n}\r\n  async function createTokenAccount(\r\n    connection: web3.Connection,\r\n    payer: web3.PublicKey,\r\n    mint: web3.PublicKey,\r\n    owner: web3.PublicKey,\r\n    allowOwnerOffCurve: boolean,\r\n    needNew: boolean = true,\r\n  ){\r\n    const AssociatedTokenAddress = await token.getAssociatedTokenAddress(\r\n      mint,\r\n      owner,\r\n      allowOwnerOffCurve\r\n    )\r\n    try {\r\n      const tokenAccount = await token.getAccount(\r\n        connection,\r\n        AssociatedTokenAddress\r\n      )\r\n      return tokenAccount \r\n    } catch (error) {\r\n      console.log(error)\r\n      if(!needNew) return null\r\n      const transaction = new web3.Transaction()\r\n      const { sendTransaction } = useWallet()\r\n      transaction.add(\r\n        token.createAssociatedTokenAccountInstruction(\r\n          payer, // payer\r\n          AssociatedTokenAddress, // ata\r\n          owner, // owner\r\n          mint // mint\r\n        )\r\n      );\r\n      const transactionSignature = await sendTransaction(\r\n        transaction,\r\n        connection\r\n      )\r\n      return await createTokenAccount(\r\n        connection,\r\n        payer,\r\n        mint,\r\n        owner,\r\n        allowOwnerOffCurve\r\n      )\r\n    }\r\n  }\r\n\r\n  function getTotalAssetQuantity(totalAssetShares,assetShareValue): BigNumber {\r\n    return totalAssetShares.times(assetShareValue);\r\n  }\r\n\r\n  function getTotalLiabilityQuantity(totalLiabilityShares,liabilityShareValue): BigNumber  {\r\n    return totalLiabilityShares.times(liabilityShareValue);\r\n  }\r\n\r\n  function getAssetQuantity(assetShares: BigNumber,assetShareValue: any): BigNumber {\r\n    return assetShares.times(assetShareValue);\r\n  }\r\n\r\n  function getLiabilityQuantity(liabilityShares: BigNumber,liabilityShareValue:any): BigNumber {\r\n    return liabilityShares.times(liabilityShareValue);\r\n  }\r\n\r\n  function getAssetShares(assetQuantity: BigNumber,assetShareValue:any): BigNumber {\r\n    return assetQuantity.times(assetShareValue);\r\n  }\r\n\r\n  function getLiabilityShares(liabilityQuantity: BigNumber,liabilityShareValue:any): BigNumber {\r\n    return liabilityQuantity.times(liabilityShareValue);\r\n  }\r\n\r\n  function makeWrapSolIxs(walletAddress: PublicKey, amount: BigNumber){\r\n    const address = getAssociatedTokenAddressSync(NATIVE_MINT, walletAddress, true);\r\n    const ixs = [createAssociatedTokenAccountIdempotentInstruction(walletAddress, address, walletAddress, NATIVE_MINT)];\r\n  \r\n    if (amount.gt(0)) {\r\n      // const nativeAmount = uiToNative(amount, 9).toNumber() + 10000;\r\n      // const nativeAmount = amount.plus(10000).toNumber();\r\n      const nativeAmount = Number(amount.times(new BigNumber(1).plus(SOL_WRAP_FACTOR)).toNumber().toFixed(0));\r\n      console.log(amount)\r\n      console.log(nativeAmount)\r\n      ixs.push(\r\n        web3.SystemProgram.transfer({ fromPubkey: walletAddress, toPubkey: address, lamports: nativeAmount }),\r\n        createSyncNativeInstruction(address)\r\n      );\r\n    }\r\n  \r\n    return ixs;\r\n  }\r\n  \r\n  function makeUnwrapSolIx(walletAddress: PublicKey) {\r\n    const address = getAssociatedTokenAddressSync(NATIVE_MINT, walletAddress, true);\r\n    return createCloseAccountInstruction(address, walletAddress, walletAddress);\r\n  }\r\n  function wrapInstructionForWSol(\r\n    walletAddress: PublicKey,\r\n    ix: any,\r\n    amount: any)\r\n  {\r\n    return [...makeWrapSolIxs(walletAddress, new BigNumber(amount)), ix,makeUnwrapSolIx(walletAddress)];\r\n  }\r\n  export async function confirmTransactionOld(tx:any) {\r\n    let i = 0\r\n    let flag = false\r\n    while(i<100) {\r\n      console.log('check times',i)\r\n      const result = await connection.getSignatureStatus(tx, {\r\n        searchTransactionHistory: true,\r\n      });\r\n      if(!result) {\r\n        await delay(500)\r\n        i = i+1\r\n      } else {\r\n        console.log('check res',result.value?.confirmationStatus)\r\n        console.log('check res',result)\r\n        if(!result.value) {\r\n          await delay(500)\r\n          i = i+1\r\n        } else {\r\n          i = i+1\r\n          if(result.value?.confirmationStatus === 'processed') {\r\n            await delay(500)\r\n          }\r\n          if(result.value?.confirmationStatus === 'confirmed') {\r\n            flag = true\r\n            i = 100\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n  export async function confirmTransaction(tx:any) {\r\n    const res = await connection.confirmTransaction(tx, \"confirmed\");\r\n    return res;\r\n  }\r\n  async function getPriceUpdateData($priceFeeds:any) {\r\n    const priceServiceConnection = new PriceServiceConnection(\r\n      \"https://hermes.pyth.network/\",\r\n      { priceFeedRequestConfig: { binary: true } }\r\n    );\r\n    let priceFeeds:any = []\r\n    if($priceFeeds.length < 1) {\r\n      priceFeeds.push('0xeaa020c61cc479712813461ce153894a96a6c00b21ed0cfc2798d1f9a9e9c94a')\r\n    } else {\r\n      priceFeeds = $priceFeeds\r\n    }\r\n    return await priceServiceConnection.getLatestVaas(priceFeeds);\r\n  }\r\n  async function nxSendTransaction($ixs:any,$data:any,nxlend_acc:any,$priceFeeds?:any) {\r\n    let Ixs = nxlend_acc.isExist ? $ixs : [...[nxlend_acc.createAccountIx],...$ixs]\r\n    const { publicKey,signTransaction,connected } = useWallet()\r\n    // fee set\r\n    const feeSetJson = window.localStorage.getItem('feeSet')\r\n    const feeSet = JSON.parse(feeSetJson!)\r\n    const feeAmount = feeSet ? feeSet.feeAmount : 0\r\n    const feeInt = decimalToInteger(feeAmount,9)\r\n    if(feeAmount > 0) {\r\n      const computePriceIx = web3.ComputeBudgetProgram.setComputeUnitPrice({\r\n        microLamports: Number(feeInt),\r\n      });\r\n      Ixs = [computePriceIx].concat(Ixs)\r\n    }\r\n    // update limit\r\n    const setComputeUnitLimitInstruction = web3.ComputeBudgetProgram.setComputeUnitLimit(\r\n      { units: 400_000 }\r\n    );\r\n    Ixs = [setComputeUnitLimitInstruction].concat(Ixs)\r\n    console.log('$ixs',$ixs)\r\n    const getLatestBlockhashAndContext = await connection.getLatestBlockhashAndContext();\r\n    const blockhash = getLatestBlockhashAndContext.value.blockhash;\r\n    const lookupTableAccount = (await connection.getAddressLookupTable(lookUpTable)).value;\r\n    const messageV0 = new web3.TransactionMessage({\r\n      payerKey: publicKey.value!,\r\n      recentBlockhash: blockhash,\r\n      instructions: Ixs, // Note: this is an array of instructions\r\n    }).compileToV0Message([lookupTableAccount!]);\r\n    const transactionV0 = new web3.VersionedTransaction(messageV0);\r\n    let tx\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const paramValue = urlParams.get('fee');\r\n    \r\n    console.log(paramValue); \r\n    const updateSelf = paramValue==='true' ? true : false\r\n    let finalTransactions\r\n    if(updateSelf) {\r\n      // Create a v0 transaction from the v0 message\r\n      // for pyth2.0\r\n      const wallet = useAnchorWallet();\r\n      const pythSolanaReceiver = new PythSolanaReceiver({\r\n        connection,\r\n        wallet: wallet.value! as Wallet,\r\n      });\r\n      const priceUpdateData = await getPriceUpdateData($priceFeeds);\r\n      console.log('priceUpdateData',priceUpdateData)\r\n      const {\r\n        postInstructions,\r\n        closeInstructions,\r\n        priceFeedIdToPriceUpdateAccount,\r\n      } = await pythSolanaReceiver.buildUpdatePriceFeedInstructions(\r\n        priceUpdateData,0\r\n      );\r\n      console.log('postInstructions',postInstructions)\r\n      console.log('Ixs',Ixs)\r\n      const ConsumerInstructions = $ixs.map((ix:any)=>{\r\n              const priceix =\r\n              {\r\n                instruction: ix,\r\n                signers:[],\r\n              }\r\n              return priceix\r\n            })\r\n      const transactions = await pythSolanaReceiver.batchIntoVersionedTransactions(\r\n        [...postInstructions,...ConsumerInstructions,...closeInstructions],\r\n        { computeUnitPriceMicroLamports: 50000 },\r\n      );\r\n      // tx = await pythSolanaReceiver.provider.sendAll([...transactions], {\r\n      //   skipPreflight: false,\r\n      //   preflightCommitment: \"processed\",\r\n      // });\r\n      try {\r\n        tx = await pythSolanaReceiver.provider.sendAll([...transactions], {\r\n          skipPreflight: false,\r\n          preflightCommitment: \"processed\",\r\n        });\r\n        const data = {\r\n          type: $data.type,\r\n          text: $data.text,\r\n          typed: $data.typed,\r\n          textd: $data.textd,\r\n          tx:updateSelf ? tx[tx.length -1]:tx\r\n        }\r\n        appStore.pendingtx.state.txList.push(data)\r\n        const txRes = await connection.confirmTransaction(updateSelf ? tx[tx.length -1]:tx, \"confirmed\");\r\n        //await connection.confirmTransaction(tx, \"confirmed\");\r\n        //await confirmTransaction(tx);\r\n        if(txRes && !txRes.value.err) {\r\n          firework1()\r\n        }\r\n        return tx \r\n      } catch (error:any) {\r\n        console.log('error',error)\r\n        if(error.toString().indexOf('User rejected') > -1) {\r\n          ElMessage({\r\n            message: 'User rejected',\r\n            type: 'warning',\r\n          })\r\n        }\r\n        return false\r\n      }\r\n    }else {\r\n      try {\r\n        \r\n        const { wallet,sendTransaction,signAllTransactions} = useWallet()\r\n        if(wallet.value?.adapter.name === 'Solflare') {\r\n          await wallet.value?.adapter.connect()\r\n          await wallet.value?.adapter.autoConnect()\r\n        }\r\n        tx = await sendTransaction(transactionV0, connection)\r\n        const data = {\r\n          type: $data.type,\r\n          text: $data.text,\r\n          typed: $data.typed,\r\n          textd: $data.textd,\r\n          tx:updateSelf ? tx[tx.length -1]:tx\r\n        }\r\n        appStore.pendingtx.state.txList.push(data)\r\n        const txRes = await connection.confirmTransaction(updateSelf ? tx[tx.length -1]:tx, \"confirmed\");\r\n        //await connection.confirmTransaction(tx, \"confirmed\");\r\n        //await confirmTransaction(tx);\r\n        \r\n        if(txRes && !txRes.value.err) {\r\n          firework1()\r\n        }\r\n        return tx \r\n      } catch (error:any) {\r\n        console.log('error',error)\r\n        if(error.toString().indexOf('User rejected') > -1) {\r\n          ElMessage({\r\n            message: 'User rejected',\r\n            type: 'warning',\r\n          })\r\n        }\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  export async function updateReserve(\r\n    reserveKey:  web3.PublicKey,\r\n    setFlag: boolean\r\n  ): Promise<web3.PublicKey> {\r\n    //update reserve\r\n      const { publicKey } = useWallet()\r\n      const wallet = useAnchorWallet();\r\n      anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n      const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n      let assetValueRatio\r\n      let assetValueLiqRatio\r\n      let debtValueRatioHighRisk\r\n      let debtValueRatioMidRisk\r\n      let debtValueRatioLowRisk\r\n      let debtValueLiqRatio\r\n      if(setFlag) {\r\n        assetValueRatio = 0.5\r\n        assetValueLiqRatio = 0.65\r\n        // assetValueRatio = 0\r\n        // assetValueLiqRatio = 0\r\n        debtValueRatioHighRisk = 15.1\r\n        debtValueRatioMidRisk = 15.5\r\n        debtValueRatioLowRisk = 16\r\n        debtValueLiqRatio = 15\r\n      } else {\r\n        assetValueRatio = 0.5\r\n        assetValueLiqRatio = 0.65\r\n        // assetValueRatio = 0\r\n        // assetValueLiqRatio = 0\r\n        debtValueRatioHighRisk = 2\r\n        debtValueRatioMidRisk = 2.5\r\n        debtValueRatioLowRisk = 3\r\n        debtValueLiqRatio = 1.5\r\n      }\r\n      console.log('start change reserve')\r\n      const tx = await program.methods.updateReserve(\r\n        {\r\n          assetValueRatio: {\r\n            value: i80f48FromNumber(assetValueRatio)\r\n          },\r\n          assetValueLiqRatio:{\r\n            value: i80f48FromNumber(assetValueLiqRatio)\r\n          },\r\n          debtValueRatioHighRisk:{\r\n            value: i80f48FromNumber(debtValueRatioHighRisk)\r\n          },\r\n          debtValueRatioMidRisk:{\r\n            value: i80f48FromNumber(debtValueRatioMidRisk)\r\n          },\r\n          debtValueRatioLowRisk:{\r\n            value: i80f48FromNumber(debtValueRatioLowRisk)\r\n          },\r\n  \r\n          debtValueLiqRatio:{\r\n            value: i80f48FromNumber(debtValueLiqRatio)\r\n          },\r\n          capacity: null,\r\n          maxBorrowable: null,\r\n          operationalState: null,\r\n          oracle: null,\r\n          interestSetting: null,\r\n          reserveType: null,\r\n          maxExposure: null,\r\n          maxPriceAge: null\r\n        }\r\n      ).accounts({\r\n        nxlendMarket: marketAcc,\r\n        manager: publicKey.value!,\r\n        reserve: reserveKey\r\n      })\r\n      .signers([])\r\n      .rpc();\r\n      return reserveKey;\r\n  \r\n    }\r\n\r\n    const aprToApy = (apr: number, compoundingFrequency = HOURS_PER_YEAR) =>\r\n    (1 + apr / compoundingFrequency) ** compoundingFrequency - 1;\r\n\r\n    export async function getFee() {\r\n      try {\r\n        const res = await connection.getRecentPrioritizationFees()\r\n        let fee = 0\r\n        res.forEach(e => {\r\n          if(e.prioritizationFee > fee) {\r\n            fee = e.prioritizationFee\r\n          }\r\n        });\r\n        const feeNumber = integerToDecimal(fee,9)\r\n        return feeNumber\r\n      } catch (error) {\r\n        const feeNumber = integerToDecimal(5000,9)\r\n        return feeNumber\r\n      }\r\n    }\r\nexport function firework1(){\r\n  const end = Date.now() + 2 * 1000;\r\n\r\n  // go Buckeyes!\r\n  const colors = [\"#7340c9\", \"#ffffff\"];\r\n  \r\n  (function frame() {\r\n    confetti({\r\n      shapes: [\"star\"],\r\n      particleCount: 2,\r\n      angle: 60,\r\n      spread: 55,\r\n      origin: { x: 0 },\r\n      colors: colors,\r\n    });\r\n  \r\n    confetti({\r\n      shapes: [\"star\"],\r\n      particleCount: 2,\r\n      angle: 120,\r\n      spread: 55,\r\n      origin: { x: 1 },\r\n      colors: colors,\r\n    });\r\n  \r\n    if (Date.now() < end) {\r\n      requestAnimationFrame(frame);\r\n    }\r\n  })();\r\n}\r\n\r\nexport async function getAllNxlendAccounts() {\r\n  return (\r\n    await connection.getProgramAccounts(programLendingId, {\r\n      dataSlice: {\r\n        offset: 0,\r\n        length: 0,\r\n      },\r\n      filters: [\r\n        {\r\n          memcmp: {\r\n            offset: 0,\r\n            bytes: bs58.encode(BorshAccountsCoder.accountDiscriminator('nxlendAccount')),\r\n          },\r\n        },\r\n        {\r\n          memcmp: {\r\n            bytes: marketAcc.toBase58(),\r\n            offset: 8 + 32, \r\n          },\r\n        },\r\n      ],\r\n    })\r\n  ).map((a) => \r\n    a.pubkey\r\n  );\r\n}\r\n\r\nexport async function loadAllNxlendAccounts() {\r\n  console.log(\"Loading data, this may take a moment...\");\r\n  let allKeys:any = [];\r\n  const reservesData = await getAllReserveData();\r\n  allKeys = await getAllNxlendAccounts();\r\n\r\n  console.log(\"Retrieved all Nxlend account addresses, found: %d\", allKeys.length);\r\n  const [slot, ais] = await chunkedGetRawMultipleAccountInfos(\r\n    connection,\r\n    allKeys.map((k) => k.toBase58()),\r\n    16 * 64,\r\n    64\r\n  );\r\n  const accountKeys = allKeys;\r\n\r\n  const totalAccounts = ais.size;\r\n  let processedAccounts = 0;\r\n  const accountDataList =  Array.from(ais)\r\n  for (const [key, accountInfo] of accountDataList) {\r\n    const pubkey = new PublicKey(key);\r\n    const parsedData = accountDataDecode(accountInfo.data);\r\n    const mybalanceData = parsedData.userReserves\r\n    const displayData = getAccountInfoDisplay(reservesData,parsedData,mybalanceData)\r\n    const account = {address:pubkey, data: [...displayData]};\r\n    appStore.allaccounts.state.allaccounts.set(key, account);\r\n\r\n    processedAccounts++;\r\n    if (processedAccounts % 5000 === 0) {\r\n      const progress = ((processedAccounts / totalAccounts) * 100).toFixed(2);\r\n      console.log(\"Processed %d accounts out of %d (%s%%)\", processedAccounts, totalAccounts, progress);\r\n    }\r\n  }\r\n\r\n  console.log(\"Finished loading all Nxlend accounts\");\r\n}\r\nconst coder = new BorshCoder(idl as anchor.Idl);\r\nexport function accountDataDecode(encoded:Buffer) {\r\n  const data = coder.accounts.decode('NxlendAccount', encoded);\r\n  const market = data.market\r\n  const repayLtv = data.repayLtv\r\n  const riskPreference = data.riskPreference\r\n  const accountFlags = data.accountFlags\r\n  const userReserves = data.userMarketInfo.userReserves\r\n  return {market,repayLtv,riskPreference,accountFlags,userReserves}\r\n}\r\nexport function getAccountInfoDisplay(reservesData:any,accData:any,mybalanceData:any){\r\n  let reserveList = JSON.parse(JSON.stringify(reservesData))\r\n  let nxlendAccData = JSON.parse(JSON.stringify(accData))\r\n  let mybalance = [...mybalanceData]\r\n  const self_risk = JSON.stringify(nxlendAccData.riskPreference)\r\n  let risk_level = 1\r\n  if(self_risk.indexOf('low') > -1){\r\n    risk_level = 0\r\n  }\r\n  if(self_risk.indexOf('middle') > -1){\r\n    risk_level = 1\r\n  }\r\n  if(self_risk.indexOf('high') > -1){\r\n    risk_level = 2\r\n  }\r\n  let balanceActive:any = []\r\n  mybalance.forEach(e => {\r\n    if(e.active) {\r\n      balanceActive.push(e)\r\n    }\r\n  });\r\n  balanceActive.forEach(e => {\r\n    reserveList.forEach(r => {\r\n      if(e.active && e.reservePk.toBase58() === r.reserve_key ) {\r\n        r.my_supply = integerToDecimal(getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount),r.asset_ntoken_ratio).toFixed(0),r.decimals)\r\n        r.my_borrow = integerToDecimal(getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount),r.debit_ntoken_ratio).toFixed(0),r.decimals)\r\n      }\r\n    });\r\n  });\r\n  reserveList.forEach(r => {\r\n    switch (risk_level) {\r\n      case 0:\r\n        r.debit_set_ratio = r.debit_low_ratio\r\n        break;\r\n      case 1:\r\n        r.debit_set_ratio = r.debit_mid_ratio\r\n        break;\r\n      case 2:\r\n        r.debit_set_ratio = r.debit_high_ratio\r\n        break;\r\n    }\r\n  });\r\n  return reserveList\r\n}\r\n\r\nexport async function getAllReserveData () {\r\n  // const onLineReserveList = await getReserveList()\r\n  let onLineReserveList\r\n  //const onLineReserveList  = localOnlineReserveList\r\n  if(appStore.reserve.state.onlineReserveList.length > 0) {\r\n    onLineReserveList = JSON.parse(JSON.stringify(appStore.reserve.state.onlineReserveList))\r\n  } else {\r\n    onLineReserveList = await getReserveList()\r\n    appStore.reserve.state.onlineReserveList = onLineReserveList\r\n  }\r\n  let reserveList = onLineReserveList.map((e:any)=>{\r\n    //e.token_img = require(e.logoURI) ? require(e.logoURI) : require('@/assets/token/sol.webp')\r\n    e.token_img = e.logoURI\r\n    e.token_name = e.tokenSymbol\r\n    e.reserve_mint_key = e.tokenMint\r\n    e.reserve_key = e.reserveAddress\r\n    e.priceFeedID = e.priceFeedID ? e.priceFeedID : null\r\n    e.reserveAta = '',\r\n    e.total_supply = 0,\r\n    e.total_borrow = 0,\r\n    e.supply_apr = 0,\r\n    e.borrow_apr = 0,\r\n    e.supply_apy = 0,\r\n    e.borrow_apy = 0,\r\n    e.ltv = 0,\r\n    e.asset_ntoken_ratio = 0,\r\n    e.debit_ntoken_ratio = 0,\r\n    e.my_supply = 0,\r\n    e.my_borrow = 0,\r\n    e.amount = 0,\r\n    e.capacity = 0,\r\n    e.maxBorrow = 0,\r\n    e.usd_price = 0,\r\n    e.usd_price_low = 0,\r\n    e.usd_price_high = 0,\r\n    e.usd_price_weighted= 0,\r\n    e.usd_price_weighted_low= 0,\r\n    e.usd_price_weighted_high= 0,\r\n    e.decimals=0,\r\n    e.asset_ratio= 0,\r\n    e.asset_liq_ratio= 0,\r\n    e.debit_set_ratio= 0,\r\n    e.debit_high_ratio= 0,\r\n    e.debit_mid_ratio= 0,\r\n    e.debit_low_ratio= 0,\r\n    e.debit_liq_ratio= 0,\r\n    e.type=1,\r\n    e.interestSetting={}\r\n    return e\r\n  })\r\n  const { publicKey } = useWallet()\r\n  // let reserveList = JSON.parse(JSON.stringify(reserve_list))\r\n  let autoRepay\r\n  const wallet = useAnchorWallet();\r\n  anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value!, {}));\r\n  const program = new anchor.Program(idl as anchor.Idl, programLendingId);\r\n  const reserves = reserveList.map((e)=>{\r\n    console.log('e.reserve_key',e.reserve_key)\r\n    return new web3.PublicKey(e.reserve_key)\r\n    //return new web3.PublicKey()\r\n  })\r\n  let nxlendReserveDatas = await getOnchainReserveData(program,reserves)\r\n  console.log('nxlendReserveDatas',nxlendReserveDatas)\r\n  let i = 0\r\n  while (i < reserveList.length) {\r\n    const tokenMint = new web3.PublicKey(reserveList[i].reserve_mint_key)\r\n    let nxlendReserveData:any\r\n    nxlendReserveDatas.forEach((e:any) => {\r\n      if(e.tokenMint.equals(tokenMint)) {\r\n        nxlendReserveData = e\r\n      }\r\n    });\r\n    if(!nxlendReserveData) {\r\n      i = i + 1\r\n      continue\r\n    }\r\n    reserveList[i].type = 0\r\n    if(JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('collateral') > -1) {\r\n      reserveList[i].type = 1\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('noCollaAddup') > -1) {\r\n      reserveList[i].type = 2\r\n    }\r\n    if(reserveList[i].type === 0) {\r\n      ElMessage({\r\n        message: 'error collateral type',\r\n        type: 'warning',\r\n      })\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythEma') > -1) {\r\n      reserveList[i].oracleType = 'pythV1'\r\n    }\r\n    if(JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythV2') > -1) {\r\n      reserveList[i].oracleType = 'pythV2'\r\n    }\r\n    reserveList[i].pythOracle = nxlendReserveData.setting.oracleKeys[0].toBase58()\r\n    reserveList[i].capacity = integerToDecimal(nxlendReserveData.setting.capacity,nxlendReserveData.tokenDecimals)\r\n    reserveList[i].maxBorrow = integerToDecimal(nxlendReserveData.setting.maxBorrowable,nxlendReserveData.tokenDecimals)\r\n    reserveList[i].reserveAta = nxlendReserveData.tokenInfo.tokenAccount\r\n    reserveList[i].asset_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio).toNumber()\r\n    reserveList[i].asset_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueLiqRatio).toNumber()\r\n    reserveList[i].debit_low_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioLowRisk).toNumber()\r\n    reserveList[i].debit_mid_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioMidRisk).toNumber()\r\n    reserveList[i].debit_high_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioHighRisk).toNumber()\r\n    reserveList[i].debit_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueLiqRatio).toNumber()\r\n    const totalAssetQuantity = getTotalAssetQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveAssetNtokenAmount),wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio))\r\n    const totalLiabilityQuantity = getTotalLiabilityQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveDebtNtokenAmount),wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio))\r\n    reserveList[i].decimals = nxlendReserveData.tokenDecimals\r\n    // const ltv = new BigNumber(1).div(wrappedI80F48toBigNumber(debitValueRatioRisk)).times(wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio)).times(100).toFixed(2)\r\n    // reserveList[i].ltv = ltv\r\n    const interestSetting = {\r\n      rateChangeUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr1).toString(),\r\n      rateChangeUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr2).toString(),\r\n      irUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr1).toString(),\r\n      irUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr2).toString(),\r\n      maxIr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.maxIr).toString(),\r\n      treasuryBaseApr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryBaseApr).toString(),\r\n      treasuryAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryAdditionRatio).toString(),\r\n      marketFeeBase: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketFeeBase).toString(),\r\n      marketAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketAdditionRatio).toString()\r\n    }\r\n    reserveList[i].interestSetting = interestSetting\r\n    reserveList[i].asset_ntoken_ratio = wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio)\r\n    reserveList[i].debit_ntoken_ratio = wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio)\r\n    reserveList[i].total_supply = integerToDecimal(totalAssetQuantity.toFixed(0),nxlendReserveData.tokenDecimals)\r\n    reserveList[i].total_borrow = integerToDecimal(totalLiabilityQuantity.toFixed(0),nxlendReserveData.tokenDecimals)\r\n    const apy = getApyNew(reserveList[i].total_supply,reserveList[i].total_borrow,reserveList[i].interestSetting)\r\n    reserveList[i].supply_apr = Number.isNaN(apy.supplyAPR.toNumber()) ? 0: new BigNumber(apy.supplyAPR).multipliedBy(100).toFixed(2)\r\n    reserveList[i].supply_apy = Number.isNaN(apy.supplyAPY) ? 0:new BigNumber(apy.supplyAPY).multipliedBy(100).toFixed(2)\r\n    reserveList[i].borrow_apr = new BigNumber(apy.borrowAPR).multipliedBy(100).toFixed(2)\r\n    reserveList[i].borrow_apy = new BigNumber(apy.borrowAPY).multipliedBy(100).toFixed(2)\r\n    i = i + 1\r\n  }\r\n  const pythOracleList = reserveList.map((e)=>{\r\n    return {type: e.oracleType, pythOracle:new web3.PublicKey(e.pythOracle), reserveAddress:e.reserve_key, priceFeed: e.priceFeedID}\r\n  })\r\n  let price_data = await getOnchainPriceData(pythOracleList)\r\n  // try {\r\n  //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\r\n  // } catch (error) {\r\n  //   console.log('getMultipleAccountsInfo pythOracleList',error)\r\n  // }\r\n  reserveList.forEach(r => {\r\n    price_data.forEach(p => {\r\n      if(p.reserveAddress === r.reserve_key) {\r\n        const priceRes = p.priceData\r\n        r.usd_price = priceRes.priceRealtime.price\r\n        r.usd_price_low = priceRes.priceRealtime.lowestPrice\r\n        r.usd_price_high = priceRes.priceRealtime.highestPrice\r\n        r.usd_price_weighted = priceRes.priceWeighted.price\r\n        r.usd_price_weighted_low = priceRes.priceWeighted.lowestPrice\r\n        r.usd_price_weighted_high = priceRes.priceWeighted.highestPrice\r\n      }\r\n    });\r\n  });\r\n  reserveList.forEach(e => {\r\n    e.ltv = new BigNumber(1).div(e.debit_set_ratio).times(100).toFixed(2)\r\n  });\r\n  return reserveList\r\n}\r\nexport async function signMsg ($msg:any){\r\n  const { signMessage,sendTransaction,publicKey } = useWallet()\r\n  console.log('sendTransaction',sendTransaction)\r\n  console.log('signMessage',signMessage)\r\n  let res\r\n  let randomNumbers\r\n  if (window.crypto && window.crypto.getRandomValues) {\r\n    randomNumbers = new Uint32Array(1);\r\n    window.crypto.getRandomValues(randomNumbers);\r\n    console.log(randomNumbers);\r\n  } else {\r\n    console.log('当前环境不支持生成真随机数');\r\n    return null\r\n  }\r\n  const nonce = randomNumbers[0].toString() + new Date().getTime().toString()\r\n  console.log('user address',publicKey.value?.toBase58())\r\n  console.log('nonce',nonce)\r\n  const msg = $msg + nonce\r\n  console.log('msg',msg)\r\n  const msgBytes = decodeUTF8(msg)\r\n  if(signMessage.value) {\r\n    try {\r\n      res = await signMessage.value(msgBytes)\r\n      console.log('sign',res)\r\n      console.log('sign bs58',bs58.encode(res))\r\n      console.log('sign',uint8ArrayToHex(res))\r\n      console.log('sign',uint8ArrayToBase64(res))\r\n      console.log('sign',res.toLocaleString())\r\n      console.log('sign',res.toString())\r\n    } catch (error) {\r\n      return null\r\n    }\r\n  }else {\r\n    return null\r\n  }\r\n  return bs58.encode(res)\r\n}\r\nfunction uint8ArrayToBase64(uint8Array:any) {\r\n  let binary = '';\r\n  uint8Array.forEach((byte) => (binary += String.fromCharCode(byte)));\r\n  return btoa(binary);\r\n}\r\nfunction uint8ArrayToHex(uint8Array:any) {\r\n  return Array.from(uint8Array)\r\n    .map((byte:any) => byte.toString(16).padStart(2, '0'))\r\n    .join('');\r\n}","import { __awaiter, __generator, __spreadArray } from \"tslib\";\nimport * as web3 from \"@solana/web3.js\";\nimport Dotenv from \"dotenv\";\nimport { BorshAccountsCoder, BorshCoder } from \"@coral-xyz/anchor\";\nimport BigNumber from 'bignumber.js';\nimport { initWallet, useWallet, useAnchorWallet } from 'solana-wallets-vue';\nimport * as token from '@solana/spl-token';\nimport * as anchor from \"@project-serum/anchor\";\nimport * as pythTool from \"../utils/pyth/index\";\nimport { ElMessage } from 'element-plus';\nimport { getReserveList } from './online';\nimport { confetti } from '@tsparticles/confetti';\nimport { PriceServiceConnection } from \"@pythnetwork/price-service-client\";\nimport * as bs58 from 'bs58';\nimport { chunkedGetRawMultipleAccountInfos } from \"./chunks\";\nimport { PythSolanaReceiver, } from \"@pythnetwork/pyth-solana-receiver\";\nimport { PublicKey } from '@solana/web3.js';\nimport { decodeUTF8 } from \"tweetnacl-util\";\nimport { integerToDecimal, decimalToInteger, } from '../utils/convertors';\n// import { commonTool } from '../utils/common'\nimport { NATIVE_MINT, createAssociatedTokenAccountIdempotentInstruction, createSyncNativeInstruction, createCloseAccountInstruction, getAssociatedTokenAddressSync, wrappedI80F48toBigNumber } from '../utils/common';\nimport idl from './nxlend.json';\nimport { programLendingIdStr, marketAccKey, node_rpc, HOURS_PER_YEAR, look_up_address, SOL_WRAP_FACTOR } from './value';\nimport appStore from '../store';\ninitWallet({ autoConnect: true });\nvar PYTH_PRICE_CONF_INTERVALS = new BigNumber(2.12);\nvar _a = useWallet(), sendTransaction = _a.sendTransaction, signTransaction = _a.signTransaction, signAllTransactions = _a.signAllTransactions, wallet = _a.wallet, wallets = _a.wallets, selectWallet = _a.select;\nDotenv.config();\nvar programLendingId = new web3.PublicKey(programLendingIdStr);\nvar marketAcc = new web3.PublicKey(marketAccKey);\nvar connection = new web3.Connection(node_rpc, \"confirmed\");\nvar lookUpTable = new web3.PublicKey(look_up_address);\n// const connection = new web3.Connection(web3.clusterApiUrl(\"devnet\"), \"confirmed\");\nexport function delay(ms) {\n    return new Promise(function (resolve) { return setTimeout(resolve, ms); });\n}\nexport function createNxlendAccount(needNew, noWallet) {\n    if (needNew === void 0) { needNew = true; }\n    return __awaiter(this, void 0, void 0, function () {\n        var publicKey, userAccSeed, _a, userAcc, userAccBump, wallet, program, nxlendAccData, error_1, ix;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    publicKey = useWallet().publicKey;\n                    if (!(!publicKey.value && !noWallet)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, delay(200)];\n                case 1:\n                    _b.sent();\n                    return [4 /*yield*/, createNxlendAccount(needNew, 1)];\n                case 2: return [2 /*return*/, _b.sent()];\n                case 3:\n                    if (!publicKey.value && noWallet) {\n                        return [2 /*return*/, null];\n                    }\n                    userAccSeed = new anchor.BN(50);\n                    _a = web3.PublicKey.findProgramAddressSync([marketAcc.toBuffer(), publicKey.value.toBuffer(), userAccSeed.toArrayLike(Buffer, \"le\", 8)], programLendingId), userAcc = _a[0], userAccBump = _a[1];\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    _b.label = 4;\n                case 4:\n                    _b.trys.push([4, 6, , 8]);\n                    return [4 /*yield*/, program.account.nxlendAccount.fetch(userAcc)];\n                case 5:\n                    nxlendAccData = _b.sent();\n                    return [2 /*return*/, {\n                            isExist: true,\n                            key: userAcc.toBase58(),\n                            data: nxlendAccData,\n                            createAccountIx: null\n                        }];\n                case 6:\n                    error_1 = _b.sent();\n                    console.log('nxlendAccount.fetch', error_1);\n                    return [4 /*yield*/, program.methods.createUserAccount(userAccSeed).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: userAcc,\n                            owner: publicKey.value,\n                            feePayer: publicKey.value,\n                            systemProgram: web3.SystemProgram.programId\n                        })\n                            .signers([])\n                            .instruction()];\n                case 7:\n                    ix = _b.sent();\n                    if (!needNew)\n                        return [2 /*return*/, null];\n                    return [2 /*return*/, {\n                            isExist: false,\n                            key: userAcc.toBase58(),\n                            data: null,\n                            createAccountIx: ix\n                        }];\n                case 8: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getNativeBalance(address) {\n    return __awaiter(this, void 0, void 0, function () {\n        var pbk, amount, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    pbk = new web3.PublicKey(address);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, connection.getBalance(pbk)];\n                case 2:\n                    amount = _a.sent();\n                    return [2 /*return*/, integerToDecimal(amount, 9)];\n                case 3:\n                    error_2 = _a.sent();\n                    console.log('connection.getBalance', error_2);\n                    return [2 /*return*/, 0];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getReserveListOwner(getBalanceFlag, clearBalanceFlag) {\n    if (getBalanceFlag === void 0) { getBalanceFlag = true; }\n    if (clearBalanceFlag === void 0) { clearBalanceFlag = false; }\n    return __awaiter(this, void 0, void 0, function () {\n        var onLineReserveList, sliderList, reserveList, publicKey, autoRepay, wallet, program, reserves, nxlendReserveDatas, i, _loop_1, pythOracleList, price_data, risk_level, nxlend_acc, error_3, nxlendAccData, self_risk, mybalance, balanceActive_1, j, _loop_2, j, r, amount, balance;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(appStore.reserve.state.onlineReserveList.length > 0)) return [3 /*break*/, 1];\n                    onLineReserveList = JSON.parse(JSON.stringify(appStore.reserve.state.onlineReserveList));\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, getReserveList()];\n                case 2:\n                    onLineReserveList = _a.sent();\n                    appStore.reserve.state.onlineReserveList = onLineReserveList;\n                    _a.label = 3;\n                case 3:\n                    sliderList = onLineReserveList.map(function (e) {\n                        e.reserve_mint_key = e.tokenMint;\n                        e.reserve_key = e.reserveAddress;\n                        e.slider = 50;\n                        return e;\n                    });\n                    appStore.profit.state.sliderList = sliderList;\n                    appStore.account.state.sliderChange = appStore.account.state.sliderChange + 1;\n                    reserveList = onLineReserveList.map(function (e) {\n                        //e.token_img = require(e.logoURI) ? require(e.logoURI) : require('@/assets/token/sol.webp')\n                        e.token_img = e.logoURI;\n                        e.token_name = e.tokenSymbol;\n                        e.reserve_mint_key = e.tokenMint;\n                        e.reserve_key = e.reserveAddress;\n                        e.priceFeedID = e.priceFeedID ? e.priceFeedID : null;\n                        e.reserveAta = '',\n                            e.total_supply = 0,\n                            e.total_borrow = 0,\n                            e.supply_apr = 0,\n                            e.borrow_apr = 0,\n                            e.supply_apy = 0,\n                            e.borrow_apy = 0,\n                            e.ltv = 0,\n                            e.asset_ntoken_ratio = 0,\n                            e.debit_ntoken_ratio = 0,\n                            e.my_supply = 0,\n                            e.my_borrow = 0,\n                            e.amount = 0,\n                            e.capacity = 0,\n                            e.maxBorrow = 0,\n                            e.usd_price = 0,\n                            e.usd_price_low = 0,\n                            e.usd_price_high = 0,\n                            e.usd_price_weighted = 0,\n                            e.usd_price_weighted_low = 0,\n                            e.usd_price_weighted_high = 0,\n                            e.decimals = 0,\n                            e.asset_ratio = 0,\n                            e.asset_liq_ratio = 0,\n                            e.debit_set_ratio = 0,\n                            e.debit_high_ratio = 0,\n                            e.debit_mid_ratio = 0,\n                            e.debit_low_ratio = 0,\n                            e.debit_liq_ratio = 0,\n                            e.type = 1,\n                            e.interestSetting = {};\n                        return e;\n                    });\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    reserves = reserveList.map(function (e) {\n                        console.log('e.reserve_key', e.reserve_key);\n                        return new web3.PublicKey(e.reserve_key);\n                        //return new web3.PublicKey()\n                    });\n                    return [4 /*yield*/, getOnchainReserveData(program, reserves)\n                        // try {\n                        //   nxlendReserveDatas = await program.account.reserve.fetchMultiple(reserves)\n                        // } catch (error) {\n                        //   console.log('fetchMultiple reserve datas',error)\n                        //   return\n                        // }\n                    ];\n                case 4:\n                    nxlendReserveDatas = _a.sent();\n                    // try {\n                    //   nxlendReserveDatas = await program.account.reserve.fetchMultiple(reserves)\n                    // } catch (error) {\n                    //   console.log('fetchMultiple reserve datas',error)\n                    //   return\n                    // }\n                    console.log('nxlendReserveDatas', nxlendReserveDatas);\n                    i = 0;\n                    _loop_1 = function () {\n                        var tokenMint = new web3.PublicKey(reserveList[i].reserve_mint_key);\n                        var nxlendReserveData;\n                        nxlendReserveDatas.forEach(function (e) {\n                            if (e.tokenMint.equals(tokenMint)) {\n                                nxlendReserveData = e;\n                            }\n                        });\n                        if (!nxlendReserveData) {\n                            i = i + 1;\n                            return \"continue\";\n                        }\n                        reserveList[i].type = 0;\n                        if (JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('collateral') > -1) {\n                            reserveList[i].type = 1;\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('noCollaAddup') > -1) {\n                            reserveList[i].type = 2;\n                        }\n                        if (reserveList[i].type === 0) {\n                            ElMessage({\n                                message: 'error collateral type',\n                                type: 'warning',\n                            });\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythEma') > -1) {\n                            reserveList[i].oracleType = 'pythV1';\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythV2') > -1) {\n                            reserveList[i].oracleType = 'pythV2';\n                        }\n                        reserveList[i].pythOracle = nxlendReserveData.setting.oracleKeys[0].toBase58();\n                        reserveList[i].capacity = integerToDecimal(nxlendReserveData.setting.capacity, nxlendReserveData.tokenDecimals);\n                        reserveList[i].maxBorrow = integerToDecimal(nxlendReserveData.setting.maxBorrowable, nxlendReserveData.tokenDecimals);\n                        reserveList[i].reserveAta = nxlendReserveData.tokenInfo.tokenAccount;\n                        reserveList[i].asset_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio).toNumber();\n                        reserveList[i].asset_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueLiqRatio).toNumber();\n                        reserveList[i].debit_low_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioLowRisk).toNumber();\n                        reserveList[i].debit_mid_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioMidRisk).toNumber();\n                        reserveList[i].debit_high_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioHighRisk).toNumber();\n                        reserveList[i].debit_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueLiqRatio).toNumber();\n                        var totalAssetQuantity = getTotalAssetQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveAssetNtokenAmount), wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio));\n                        var totalLiabilityQuantity = getTotalLiabilityQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveDebtNtokenAmount), wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio));\n                        reserveList[i].decimals = nxlendReserveData.tokenDecimals;\n                        // const ltv = new BigNumber(1).div(wrappedI80F48toBigNumber(debitValueRatioRisk)).times(wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio)).times(100).toFixed(2)\n                        // reserveList[i].ltv = ltv\n                        var interestSetting = {\n                            rateChangeUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr1).toString(),\n                            rateChangeUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr2).toString(),\n                            irUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr1).toString(),\n                            irUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr2).toString(),\n                            maxIr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.maxIr).toString(),\n                            treasuryBaseApr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryBaseApr).toString(),\n                            treasuryAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryAdditionRatio).toString(),\n                            marketFeeBase: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketFeeBase).toString(),\n                            marketAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketAdditionRatio).toString()\n                        };\n                        reserveList[i].interestSetting = interestSetting;\n                        reserveList[i].asset_ntoken_ratio = nxlendReserveData.creditDebit.assetNtokenRatio;\n                        reserveList[i].debit_ntoken_ratio = nxlendReserveData.creditDebit.debtNtokenRatio;\n                        reserveList[i].total_supply = integerToDecimal(totalAssetQuantity.toFixed(0), nxlendReserveData.tokenDecimals);\n                        reserveList[i].total_borrow = integerToDecimal(totalLiabilityQuantity.toFixed(0), nxlendReserveData.tokenDecimals);\n                        var apy = getApyNew(reserveList[i].total_supply, reserveList[i].total_borrow, reserveList[i].interestSetting);\n                        reserveList[i].supply_apr = Number.isNaN(apy.supplyAPR.toNumber()) ? 0 : new BigNumber(apy.supplyAPR).multipliedBy(100).toFixed(2);\n                        reserveList[i].supply_apy = Number.isNaN(apy.supplyAPY) ? 0 : new BigNumber(apy.supplyAPY).multipliedBy(100).toFixed(2);\n                        reserveList[i].borrow_apr = new BigNumber(apy.borrowAPR).multipliedBy(100).toFixed(2);\n                        reserveList[i].borrow_apy = new BigNumber(apy.borrowAPY).multipliedBy(100).toFixed(2);\n                        i = i + 1;\n                    };\n                    while (i < reserveList.length) {\n                        _loop_1();\n                    }\n                    console.log('reserveList', reserveList);\n                    pythOracleList = reserveList.map(function (e) {\n                        return { type: e.oracleType, pythOracle: new web3.PublicKey(e.pythOracle), reserveAddress: e.reserve_key, priceFeed: e.priceFeedID };\n                    });\n                    return [4 /*yield*/, getOnchainPriceData(pythOracleList)\n                        // try {\n                        //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\n                        // } catch (error) {\n                        //   console.log('getMultipleAccountsInfo pythOracleList',error)\n                        // }\n                    ];\n                case 5:\n                    price_data = _a.sent();\n                    // try {\n                    //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\n                    // } catch (error) {\n                    //   console.log('getMultipleAccountsInfo pythOracleList',error)\n                    // }\n                    reserveList.forEach(function (r) {\n                        price_data.forEach(function (p) {\n                            if (p.reserveAddress === r.reserve_key) {\n                                var priceRes = p.priceData;\n                                r.usd_price = priceRes.priceRealtime.price;\n                                r.usd_price_low = priceRes.priceRealtime.lowestPrice;\n                                r.usd_price_high = priceRes.priceRealtime.highestPrice;\n                                r.usd_price_weighted = priceRes.priceWeighted.price;\n                                r.usd_price_weighted_low = priceRes.priceWeighted.lowestPrice;\n                                r.usd_price_weighted_high = priceRes.priceWeighted.highestPrice;\n                            }\n                        });\n                    });\n                    risk_level = 1;\n                    _a.label = 6;\n                case 6:\n                    _a.trys.push([6, 8, , 9]);\n                    return [4 /*yield*/, createNxlendAccount(false)];\n                case 7:\n                    nxlend_acc = _a.sent();\n                    return [3 /*break*/, 9];\n                case 8:\n                    error_3 = _a.sent();\n                    console.log('createNxlendAccount', error_3);\n                    return [3 /*break*/, 9];\n                case 9:\n                    if (nxlend_acc) {\n                        nxlendAccData = nxlend_acc.data;\n                        // try {\n                        //   nxlendAccData = await program.account.nxlendAccount.fetch(nxlend_acc_pbk)\n                        // } catch (error) {\n                        //   console.log('nxlendAccount.fetch',error)\n                        // }\n                        console.log('nxlendAccData', nxlendAccData);\n                        autoRepay = wrappedI80F48toBigNumber(nxlendAccData.repayLtv).toString();\n                        self_risk = JSON.stringify(nxlendAccData.riskPreference);\n                        if (self_risk.indexOf('low') > -1) {\n                            risk_level = 0;\n                        }\n                        if (self_risk.indexOf('middle') > -1) {\n                            risk_level = 1;\n                        }\n                        if (self_risk.indexOf('high') > -1) {\n                            risk_level = 2;\n                        }\n                        mybalance = nxlendAccData.userMarketInfo.userReserves;\n                        balanceActive_1 = [];\n                        mybalance.forEach(function (e) {\n                            if (e.active) {\n                                balanceActive_1.push(e);\n                            }\n                        });\n                        balanceActive_1.forEach(function (e) {\n                            reserveList.forEach(function (r) {\n                                if (e.active && e.reservePk.toBase58() === r.reserve_key) {\n                                    r.my_supply = integerToDecimal(getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount), wrappedI80F48toBigNumber(r.asset_ntoken_ratio)).toFixed(0), r.decimals);\n                                    r.my_borrow = integerToDecimal(getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount), wrappedI80F48toBigNumber(r.debit_ntoken_ratio)).toFixed(0), r.decimals);\n                                    //console.log('supply',getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount),wrappedI80F48toBigNumber(r.asset_ntoken_ratio)).toString(10))\n                                    //console.log('borrow',getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount),wrappedI80F48toBigNumber(r.debit_ntoken_ratio)).toString(10))\n                                }\n                            });\n                        });\n                        reserveList.forEach(function (r) {\n                            switch (risk_level) {\n                                case 0:\n                                    r.debit_set_ratio = r.debit_low_ratio;\n                                    break;\n                                case 1:\n                                    r.debit_set_ratio = r.debit_mid_ratio;\n                                    break;\n                                case 2:\n                                    r.debit_set_ratio = r.debit_high_ratio;\n                                    break;\n                            }\n                        });\n                    }\n                    else {\n                        reserveList.forEach(function (r) {\n                            r.my_supply = 0;\n                            r.my_borrow = 0;\n                            r.debit_set_ratio = r.debit_mid_ratio;\n                        });\n                    }\n                    reserveList.forEach(function (e) {\n                        e.ltv = new BigNumber(1).div(e.debit_set_ratio).times(100).toFixed(2);\n                    });\n                    appStore.reserve.state.reserveList = reserveList;\n                    appStore.account.state.riskLevel = risk_level;\n                    appStore.account.state.autoRepayLtv = autoRepay;\n                    appStore.account.state.reserveChange = appStore.account.state.reserveChange + 1;\n                    if (!(publicKey.value && getBalanceFlag)) return [3 /*break*/, 13];\n                    j = 0;\n                    _loop_2 = function () {\n                        var r, amount, user_token_acc_key, error_4, balance;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    r = reserveList[j];\n                                    amount = void 0;\n                                    if (!(r.reserve_mint_key === NATIVE_MINT.toBase58())) return [3 /*break*/, 2];\n                                    return [4 /*yield*/, getNativeBalance(publicKey.value)];\n                                case 1:\n                                    amount = _b.sent();\n                                    return [3 /*break*/, 5];\n                                case 2:\n                                    _b.trys.push([2, 4, , 5]);\n                                    return [4 /*yield*/, createTokenAccount(connection, publicKey.value, new web3.PublicKey(r.reserve_mint_key), publicKey.value, true, false)];\n                                case 3:\n                                    user_token_acc_key = _b.sent();\n                                    amount = user_token_acc_key ? integerToDecimal(user_token_acc_key.amount, r.decimals) : 0;\n                                    return [3 /*break*/, 5];\n                                case 4:\n                                    error_4 = _b.sent();\n                                    amount = 0;\n                                    return [3 /*break*/, 5];\n                                case 5:\n                                    balance = {\n                                        mintKey: r.reserve_mint_key,\n                                        amount: amount\n                                    };\n                                    if (appStore.account.state.balanceList.length < reserveList.length) {\n                                        appStore.account.state.balanceList[j] = balance;\n                                    }\n                                    else {\n                                        appStore.account.state.balanceList.forEach(function (e) {\n                                            if (e.mintKey === balance.mintKey) {\n                                                e.amount = balance.amount;\n                                            }\n                                        });\n                                    }\n                                    appStore.account.state.change = appStore.account.state.change + 1;\n                                    j = j + 1;\n                                    return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _a.label = 10;\n                case 10:\n                    if (!(j < reserveList.length)) return [3 /*break*/, 12];\n                    return [5 /*yield**/, _loop_2()];\n                case 11:\n                    _a.sent();\n                    return [3 /*break*/, 10];\n                case 12: return [3 /*break*/, 14];\n                case 13:\n                    if (clearBalanceFlag) {\n                        j = 0;\n                        while (j < reserveList.length) {\n                            r = reserveList[j];\n                            amount = 0;\n                            balance = {\n                                mintKey: r.reserve_mint_key,\n                                amount: amount\n                            };\n                            appStore.account.state.balanceList.push(balance);\n                            appStore.account.state.change = appStore.account.state.change + 1;\n                            j = j + 1;\n                        }\n                    }\n                    _a.label = 14;\n                case 14:\n                    appStore.account.state.change = appStore.account.state.change + 1;\n                    appStore.account.state.reserveChange = appStore.account.state.reserveChange + 1;\n                    // return reserveList\n                    console.log('reserveList', reserveList);\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getOnchainPriceData(priceList) {\n    return __awaiter(this, void 0, void 0, function () {\n        var priceData, v1list, v2list, priceAccount, res, priceDataList, i, priceData1, priceData_1, item, priceAccountList, v2PriceData, i, priceData_2, item, time_1, error_5;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    console.log('priceList', priceList);\n                    v1list = [];\n                    v2list = [];\n                    priceList.forEach(function (e) {\n                        if (e.type === 'pythV1') {\n                            v1list.push(e);\n                        }\n                        if (e.type === 'pythV2') {\n                            v2list.push(e);\n                        }\n                    });\n                    console.log('v1list', v1list);\n                    console.log('v2list', v2list);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 7]);\n                    priceAccount = v1list.map(function (p) {\n                        return p.pythOracle;\n                    });\n                    return [4 /*yield*/, connection.getMultipleAccountsInfo(priceAccount)];\n                case 2:\n                    res = _a.sent();\n                    priceDataList = [];\n                    for (i = 0; i < v1list.length; i++) {\n                        priceData1 = pythTool.parsePriceData(res[i].data);\n                        priceData_1 = getPrice(priceData1);\n                        item = { type: v1list[i].type, priceData: priceData_1, reserveAddress: v1list[i].reserveAddress, time: priceData_1.time };\n                        priceDataList.push(item);\n                    }\n                    priceAccountList = v2list.map(function (p) {\n                        return p.pythOracle;\n                    });\n                    console.log('priceAccountList', priceAccountList);\n                    return [4 /*yield*/, getPriceV2FromAccount(priceAccountList)\n                        //const v2PriceData = await getPriceV2(priceFeedList)\n                    ];\n                case 3:\n                    v2PriceData = _a.sent();\n                    //const v2PriceData = await getPriceV2(priceFeedList)\n                    console.log('v2PriceData', v2PriceData);\n                    for (i = 0; i < v2list.length; i++) {\n                        priceData_2 = v2PriceData && v2PriceData[i];\n                        item = { type: v2list[i].type, priceData: priceData_2, reserveAddress: v2list[i].reserveAddress, time: priceData_2.time };\n                        priceDataList.push(item);\n                    }\n                    time_1 = new Date().getTime();\n                    priceDataList.forEach(function (p) {\n                        var cut = new BigNumber(p.time).times(1000).minus(Number(time_1)).toString();\n                        console.log(p.reserveAddress);\n                        console.log('cut', cut);\n                    });\n                    console.log('priceDataList', priceDataList);\n                    return [2 /*return*/, priceDataList];\n                case 4:\n                    error_5 = _a.sent();\n                    return [4 /*yield*/, delay(5000)];\n                case 5:\n                    _a.sent();\n                    console.log('getMultipleAccountsInfo pythOracleList', error_5);\n                    return [4 /*yield*/, getOnchainPriceData(priceList)];\n                case 6:\n                    priceData = _a.sent();\n                    return [2 /*return*/, priceData];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getOnchainReserveData(program, reserveList) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reserveListData, error_6;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 5]);\n                    return [4 /*yield*/, program.account.reserve.fetchMultiple(reserveList)];\n                case 1:\n                    reserveListData = _a.sent();\n                    return [2 /*return*/, reserveListData];\n                case 2:\n                    error_6 = _a.sent();\n                    console.log('getOnchain reserve Data failed', error_6);\n                    return [4 /*yield*/, delay(500)];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, getOnchainReserveData(program, reserveList)];\n                case 4:\n                    reserveListData = _a.sent();\n                    return [2 /*return*/, reserveListData];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getPriceV2($priceFeedList) {\n    return __awaiter(this, void 0, void 0, function () {\n        var priceServiceConnection, price_data, v2PriceData;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    priceServiceConnection = new PriceServiceConnection(\"https://hermes.pyth.network/\", { priceFeedRequestConfig: { binary: true } });\n                    return [4 /*yield*/, priceServiceConnection.getLatestPriceFeeds($priceFeedList)];\n                case 1:\n                    price_data = _a.sent();\n                    console.log('price_data', price_data);\n                    v2PriceData = price_data === null || price_data === void 0 ? void 0 : price_data.map(function (e) {\n                        var data = e.toJson();\n                        var pythPriceRealtime = new BigNumber(data.price.price).shiftedBy(data.price.expo);\n                        var pythConfidenceRealtime = new BigNumber(data.price.conf).shiftedBy(data.price.expo);\n                        var pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythPrice = new BigNumber(data.ema_price.price).shiftedBy(data.ema_price.expo);\n                        var pythConfInterval = new BigNumber(data.ema_price.conf).shiftedBy(data.ema_price.expo);\n                        var pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n                        var time = data.price.publish_time;\n                        console.log(pythPriceRealtime.toString());\n                        console.log(pythPrice.toString());\n                        var priceRealtime = {\n                            price: pythPriceRealtime,\n                            confidence: pythConfidenceRealtime,\n                            lowestPrice: pythLowestPriceRealtime,\n                            highestPrice: pythHighestPriceRealtime,\n                        };\n                        var priceWeighted = {\n                            price: pythPrice,\n                            confidence: pythConfInterval,\n                            lowestPrice: pythLowestPrice,\n                            highestPrice: pythHighestPrice,\n                        };\n                        var priceData = {\n                            time: time,\n                            priceRealtime: priceRealtime,\n                            priceWeighted: priceWeighted\n                        };\n                        return priceData;\n                    });\n                    return [2 /*return*/, v2PriceData];\n            }\n        });\n    });\n}\nfunction getPriceV2FromAccount($priceAccountList) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wallet, pythSolanaReceiver, priceDataList, i, data, v2PriceData;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    wallet = useAnchorWallet();\n                    pythSolanaReceiver = new PythSolanaReceiver({\n                        connection: connection,\n                        wallet: wallet.value,\n                    });\n                    priceDataList = [];\n                    i = 0;\n                    _a.label = 1;\n                case 1:\n                    if (!(i < $priceAccountList.length)) return [3 /*break*/, 3];\n                    return [4 /*yield*/, pythSolanaReceiver.fetchPriceUpdateAccount($priceAccountList[i])];\n                case 2:\n                    data = _a.sent();\n                    priceDataList.push(data === null || data === void 0 ? void 0 : data.priceMessage);\n                    i = i + 1;\n                    return [3 /*break*/, 1];\n                case 3:\n                    v2PriceData = priceDataList === null || priceDataList === void 0 ? void 0 : priceDataList.map(function (e) {\n                        var data = e;\n                        var pythPriceRealtime = new BigNumber(data.price).shiftedBy(data.exponent);\n                        var pythConfidenceRealtime = new BigNumber(data.conf).shiftedBy(data.exponent);\n                        var pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythPrice = new BigNumber(data.emaPrice).shiftedBy(data.exponent);\n                        var pythConfInterval = new BigNumber(data.emaConf).shiftedBy(data.exponent);\n                        var pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n                        var pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n                        var time = data.publishTime;\n                        console.log(pythPriceRealtime.toString());\n                        console.log(pythPrice.toString());\n                        var priceRealtime = {\n                            price: pythPriceRealtime,\n                            confidence: pythConfidenceRealtime,\n                            lowestPrice: pythLowestPriceRealtime,\n                            highestPrice: pythHighestPriceRealtime,\n                        };\n                        var priceWeighted = {\n                            price: pythPrice,\n                            confidence: pythConfInterval,\n                            lowestPrice: pythLowestPrice,\n                            highestPrice: pythHighestPrice,\n                        };\n                        var priceData = {\n                            time: time,\n                            priceRealtime: priceRealtime,\n                            priceWeighted: priceWeighted\n                        };\n                        return priceData;\n                    });\n                    return [2 /*return*/, v2PriceData];\n            }\n        });\n    });\n}\nfunction getPrice(pythPriceData) {\n    var priceData = pythPriceData.price;\n    if (priceData === undefined) {\n        priceData = pythPriceData.previousPrice;\n    }\n    var confidenceData = pythPriceData.confidence;\n    if (confidenceData === undefined) {\n        confidenceData = pythPriceData.previousConfidence;\n    }\n    var time = pythPriceData.timestamp;\n    var pythPriceRealtime = new BigNumber(priceData);\n    var pythConfidenceRealtime = new BigNumber(confidenceData);\n    var pythLowestPriceRealtime = pythPriceRealtime.minus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n    var pythHighestPriceRealtime = pythPriceRealtime.plus(pythConfidenceRealtime.times(PYTH_PRICE_CONF_INTERVALS));\n    var pythPrice = new BigNumber(pythPriceData.emaPrice.value);\n    var pythConfInterval = new BigNumber(pythPriceData.emaConfidence.value);\n    var pythLowestPrice = pythPrice.minus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n    var pythHighestPrice = pythPrice.plus(pythConfInterval.times(PYTH_PRICE_CONF_INTERVALS));\n    return {\n        time: time,\n        priceRealtime: {\n            price: pythPriceRealtime,\n            confidence: pythConfidenceRealtime,\n            lowestPrice: pythLowestPriceRealtime,\n            highestPrice: pythHighestPriceRealtime,\n        },\n        priceWeighted: {\n            price: pythPrice,\n            confidence: pythConfInterval,\n            lowestPrice: pythLowestPrice,\n            highestPrice: pythHighestPrice,\n        },\n    };\n}\nexport function getApy(supply, borrow, interestSetting) {\n    var ONE = new BigNumber(1);\n    var supplyBN = new BigNumber(supply);\n    var borrowBN = new BigNumber(borrow);\n    var use = borrowBN.dividedBy(supplyBN);\n    var rateChangeUr1 = wrappedI80F48toBigNumber(interestSetting.rateChangeUr1);\n    var rateChangeUr2 = wrappedI80F48toBigNumber(interestSetting.rateChangeUr2);\n    var irUr1 = wrappedI80F48toBigNumber(interestSetting.irUr1);\n    var irUr2 = wrappedI80F48toBigNumber(interestSetting.irUr2);\n    var maxIr = wrappedI80F48toBigNumber(interestSetting.maxIr);\n    var treasuryBaseApr = wrappedI80F48toBigNumber(interestSetting.treasuryBaseApr);\n    var treasuryAdditionRatio = wrappedI80F48toBigNumber(interestSetting.treasuryAdditionRatio);\n    var marketFeeBase = wrappedI80F48toBigNumber(interestSetting.marketFeeBase);\n    var marketAdditionRatio = wrappedI80F48toBigNumber(interestSetting.marketAdditionRatio);\n    var borrowBaseAPY = new BigNumber(0);\n    if (use.lte(rateChangeUr1)) {\n        borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1);\n    }\n    if (use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\n        borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1);\n    }\n    if (use.gt(rateChangeUr2)) {\n        borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2);\n    }\n    var supplyAPY = (borrowBaseAPY.multipliedBy(use));\n    var borrowAPY = (borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase)));\n    var apy = {\n        supplyAPY: supplyAPY,\n        borrowAPY: borrowAPY,\n    };\n    return apy;\n}\nexport function getApyNew(supply, borrow, interestSetting) {\n    var ONE = new BigNumber(1);\n    var supplyBN = new BigNumber(supply);\n    var borrowBN = new BigNumber(borrow);\n    var use = borrowBN.dividedBy(supplyBN);\n    var rateChangeUr1 = new BigNumber(interestSetting.rateChangeUr1);\n    var rateChangeUr2 = new BigNumber(interestSetting.rateChangeUr2);\n    var irUr1 = new BigNumber(interestSetting.irUr1);\n    var irUr2 = new BigNumber(interestSetting.irUr2);\n    var maxIr = new BigNumber(interestSetting.maxIr);\n    var treasuryBaseApr = new BigNumber(interestSetting.treasuryBaseApr);\n    var treasuryAdditionRatio = new BigNumber(interestSetting.treasuryAdditionRatio);\n    var marketFeeBase = new BigNumber(interestSetting.marketFeeBase);\n    var marketAdditionRatio = new BigNumber(interestSetting.marketAdditionRatio);\n    var borrowBaseAPY = new BigNumber(0);\n    if (use.lte(rateChangeUr1)) {\n        borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1);\n    }\n    if (use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\n        borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1);\n    }\n    if (use.gt(rateChangeUr2)) {\n        borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2);\n    }\n    var supplyAPR = borrowBaseAPY.multipliedBy(use);\n    var supplyAPY = aprToApy((borrowBaseAPY.multipliedBy(use)).toNumber());\n    var borrowAPR = borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase));\n    var borrowAPY = aprToApy((borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase))).toNumber());\n    var apy = {\n        supplyAPR: supplyAPR,\n        supplyAPY: supplyAPY,\n        borrowAPR: borrowAPR,\n        borrowAPY: borrowAPY,\n    };\n    return apy;\n}\nexport function getAprNew(supply, borrow, interestSetting) {\n    var ONE = new BigNumber(1);\n    var supplyBN = new BigNumber(supply);\n    var borrowBN = new BigNumber(borrow);\n    var use = borrowBN.dividedBy(supplyBN);\n    var rateChangeUr1 = new BigNumber(interestSetting.rateChangeUr1);\n    var rateChangeUr2 = new BigNumber(interestSetting.rateChangeUr2);\n    var irUr1 = new BigNumber(interestSetting.irUr1);\n    var irUr2 = new BigNumber(interestSetting.irUr2);\n    var maxIr = new BigNumber(interestSetting.maxIr);\n    var treasuryBaseApr = new BigNumber(interestSetting.treasuryBaseApr);\n    var treasuryAdditionRatio = new BigNumber(interestSetting.treasuryAdditionRatio);\n    var marketFeeBase = new BigNumber(interestSetting.marketFeeBase);\n    var marketAdditionRatio = new BigNumber(interestSetting.marketAdditionRatio);\n    var borrowBaseAPY = new BigNumber(0);\n    if (use.lte(rateChangeUr1)) {\n        borrowBaseAPY = use.dividedBy(rateChangeUr1).multipliedBy(irUr1);\n    }\n    if (use.lte(rateChangeUr2) && use.gt(rateChangeUr1)) {\n        borrowBaseAPY = (use.minus(rateChangeUr1)).dividedBy(rateChangeUr2.minus(rateChangeUr1)).multipliedBy(irUr2.minus(irUr1)).plus(irUr1);\n    }\n    if (use.gt(rateChangeUr2)) {\n        borrowBaseAPY = (use.minus(rateChangeUr2)).dividedBy(ONE.minus(rateChangeUr2)).multipliedBy(maxIr.minus(irUr2)).plus(irUr2);\n    }\n    var supplyAPR = borrowBaseAPY.multipliedBy(use);\n    var borrowAPR = borrowBaseAPY.multipliedBy(treasuryAdditionRatio.plus(marketAdditionRatio).plus(1)).plus(treasuryBaseApr.plus(marketFeeBase));\n    var apy = {\n        supplyAPR: supplyAPR,\n        borrowAPR: borrowAPR,\n    };\n    return apy;\n}\nexport function getAccData(nxlend_acc_key) {\n    return __awaiter(this, void 0, void 0, function () {\n        var wallet, nxlend_acc_pbk, program, nxlendAccData;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    wallet = useAnchorWallet();\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc_key);\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    return [4 /*yield*/, program.account.nxlendAccount.fetch(nxlend_acc_pbk)];\n                case 1:\n                    nxlendAccData = _a.sent();\n                    return [2 /*return*/, nxlendAccData];\n            }\n        });\n    });\n}\nexport function checkHealth() {\n    return __awaiter(this, void 0, void 0, function () { return __generator(this, function (_a) {\n        return [2 /*return*/];\n    }); });\n}\nexport function lendSetAccountRiskPreference(nxlend_acc, risk_level) {\n    return __awaiter(this, void 0, void 0, function () {\n        var publicKey, wallet, program, nxlend_acc_pbk, riskParams, ix, Ixs, risk, data, signature;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    switch (risk_level) {\n                        case 0:\n                            riskParams = {\n                                low: {}\n                            };\n                            break;\n                        case 1:\n                            riskParams = {\n                                middle: {}\n                            };\n                            break;\n                        case 2:\n                            riskParams = {\n                                high: {}\n                            };\n                            break;\n                        default:\n                            break;\n                    }\n                    return [4 /*yield*/, program.methods.setAccountRiskPreference(riskParams).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            owner: publicKey.value,\n                        })\n                            .signers([])\n                            .instruction()];\n                case 1:\n                    ix = _a.sent();\n                    Ixs = [ix];\n                    switch (risk_level) {\n                        case 0:\n                            risk = 'Low';\n                            break;\n                        case 1:\n                            risk = 'Medium';\n                            break;\n                        case 2:\n                            risk = 'High';\n                            break;\n                        default:\n                            break;\n                    }\n                    data = {\n                        type: 'Set Risk',\n                        text: \"Set risk to \".concat(risk),\n                        typed: 'Set Risk',\n                        textd: \"Set risk to \".concat(risk),\n                    };\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc)];\n                case 2:\n                    signature = _a.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nexport function lendingAccountDeposit(amount, nxlend_acc, reserve_str, reserve_mint_str, decimals, reserveData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reserve, reserve_mint, _a, liquidity_vault, liquidity_vault_bump, reserve_l_v_g, publicKey, wallet, program, user_token_data, nxlend_acc_pbk, amountInt, deposit_amount, ix, Ixs, data, priceFeeds, signature;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reserve = new web3.PublicKey(reserve_str);\n                    reserve_mint = new web3.PublicKey(reserve_mint_str);\n                    _a = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault = _a[0], liquidity_vault_bump = _a[1];\n                    reserve_l_v_g = liquidity_vault;\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    return [4 /*yield*/, makeTokenAccountIx(connection, publicKey.value, reserve_mint, publicKey.value, true)];\n                case 1:\n                    user_token_data = _b.sent();\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    amountInt = decimalToInteger(amount, decimals);\n                    deposit_amount = new anchor.BN(amountInt);\n                    return [4 /*yield*/, program.methods.depositIntoReserve(deposit_amount).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            signer: publicKey.value,\n                            reserve: reserve,\n                            // signerTokenAccount: user_token_acc_key.address,\n                            signerTokenAccount: user_token_data.AssociatedTokenAddress,\n                            reserveAssetTokenAccount: reserve_l_v_g,\n                            tokenProgram: token.TOKEN_PROGRAM_ID\n                        })\n                            .signers([])\n                            .instruction()];\n                case 2:\n                    ix = _b.sent();\n                    Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value, ix, amountInt) : [ix];\n                    data = {\n                        type: 'Depositing',\n                        text: \"Depositing \".concat(amount, \" \").concat(reserveData.token_name, \" into the market\"),\n                        typed: 'Depositing',\n                        textd: \"Depositing \".concat(amount, \" \").concat(reserveData.token_name, \" into the market\"),\n                    };\n                    priceFeeds = [];\n                    if (reserveData.priceFeedID) {\n                        priceFeeds.push(reserveData.priceFeedID);\n                    }\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc, priceFeeds)];\n                case 3:\n                    signature = _b.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nfunction getBorrowRemindingAccountList(nxlend_acc_data, reserve_str) {\n    var reserve_list = JSON.parse(JSON.stringify(appStore.reserve.state.reserveList));\n    var nxlendAccData = nxlend_acc_data;\n    var mybalance = nxlendAccData.userMarketInfo.userReserves;\n    var activeBalanceList = [];\n    var newBorrow = true;\n    mybalance.forEach(function (e) {\n        if (e.active) {\n            if (e.reservePk.toBase58() === reserve_str)\n                newBorrow = false;\n        }\n    });\n    var newBorrowAdded = false;\n    mybalance.forEach(function (e) {\n        if (e.active) {\n            activeBalanceList.push(e.reservePk);\n        }\n        else {\n            if (!newBorrowAdded && newBorrow) {\n                activeBalanceList.push(new web3.PublicKey(reserve_str));\n                newBorrowAdded = true;\n            }\n        }\n    });\n    var arr = [];\n    var priceFeeds = [];\n    activeBalanceList.forEach(function (r) {\n        reserve_list.forEach(function (e) {\n            if (e.reserve_key === r.toBase58()) {\n                var reserve = new web3.PublicKey(e.reserve_key);\n                arr.push({\n                    isSigner: false,\n                    isWritable: true,\n                    pubkey: reserve\n                });\n                var pythOracleReserve = new web3.PublicKey(e.pythOracle);\n                arr.push({\n                    isSigner: false,\n                    isWritable: true,\n                    pubkey: pythOracleReserve\n                });\n                var priceFeed = e.priceFeedID;\n                if (priceFeed) {\n                    priceFeeds.push(priceFeed);\n                }\n            }\n        });\n    });\n    return { borrowRemindingAccountList: arr, priceFeeds: priceFeeds };\n}\nexport function lendingAccountBorrow(amount, nxlend_acc, reserve_str, reserve_mint_str, decimals, reserveData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reserve, reserve_mint, _a, liquidity_vault, liquidity_vault_bump, reserve_l_v_g, _b, liquidity_vault_authority, liquidity_vault_authority_bump, reserve_l_v_a_g, publicKey, wallet, program, user_token_data, nxlend_acc_pbk, amountInt, borrow_amount, _c, borrowRemindingAccountList, priceFeeds, ix, Ixs, data, signature;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    reserve = new web3.PublicKey(reserve_str);\n                    reserve_mint = new web3.PublicKey(reserve_mint_str);\n                    _a = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault = _a[0], liquidity_vault_bump = _a[1];\n                    reserve_l_v_g = liquidity_vault;\n                    _b = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault_authority = _b[0], liquidity_vault_authority_bump = _b[1];\n                    reserve_l_v_a_g = liquidity_vault_authority;\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    return [4 /*yield*/, makeTokenAccountIx(connection, publicKey.value, reserve_mint, publicKey.value, true)];\n                case 1:\n                    user_token_data = _d.sent();\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    amountInt = decimalToInteger(amount, decimals);\n                    borrow_amount = new anchor.BN(amountInt);\n                    _c = getBorrowRemindingAccountList(nxlend_acc.data, reserve_str), borrowRemindingAccountList = _c.borrowRemindingAccountList, priceFeeds = _c.priceFeeds;\n                    return [4 /*yield*/, program.methods.borrowFromReserve(borrow_amount).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            signer: publicKey.value,\n                            reserve: reserve,\n                            destinationTokenAccount: user_token_data.AssociatedTokenAddress,\n                            tokenAccountAuthority: reserve_l_v_a_g,\n                            reserveTokenAccount: reserve_l_v_g,\n                            tokenProgram: token.TOKEN_PROGRAM_ID\n                        })\n                            .remainingAccounts(borrowRemindingAccountList)\n                            .signers([]).instruction()];\n                case 2:\n                    ix = _d.sent();\n                    Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value, ix, 0) : [ix];\n                    Ixs = [user_token_data.ix].concat(Ixs);\n                    data = {\n                        type: 'Borrowing',\n                        text: \"Borrowing \".concat(amount, \" \").concat(reserveData.token_name, \" from the market\"),\n                        typed: 'Borrowing',\n                        textd: \"Borrowing \".concat(amount, \" \").concat(reserveData.token_name, \" from the market\"),\n                    };\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc, priceFeeds)];\n                case 3:\n                    signature = _d.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nexport function lendingAccountRepay(amount, nxlend_acc, reserve_str, reserve_mint_str, decimals, all, reserveData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reserve, reserve_mint, _a, liquidity_vault, liquidity_vault_bump, reserve_l_v_g, _b, liquidity_vault_authority, liquidity_vault_authority_bump, reserve_l_v_a_g, publicKey, wallet, program, user_token_data, nxlend_acc_pbk, amountInt, repay_amount, ix, Ixs, data, priceFeeds, signature;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    reserve = new web3.PublicKey(reserve_str);\n                    reserve_mint = new web3.PublicKey(reserve_mint_str);\n                    _a = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault = _a[0], liquidity_vault_bump = _a[1];\n                    reserve_l_v_g = liquidity_vault;\n                    _b = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault_authority = _b[0], liquidity_vault_authority_bump = _b[1];\n                    reserve_l_v_a_g = liquidity_vault_authority;\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    return [4 /*yield*/, makeTokenAccountIx(connection, publicKey.value, reserve_mint, publicKey.value, true)];\n                case 1:\n                    user_token_data = _c.sent();\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    amountInt = decimalToInteger(amount, decimals);\n                    repay_amount = new anchor.BN(amountInt);\n                    return [4 /*yield*/, program.methods.repayToReserve(repay_amount, all\n                        //repay_amount,false\n                        ).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            signer: publicKey.value,\n                            reserve: reserve,\n                            signerTokenAccount: user_token_data.AssociatedTokenAddress,\n                            reserveTokenAccount: reserve_l_v_g,\n                            tokenProgram: token.TOKEN_PROGRAM_ID\n                        })\n                            .signers([])\n                            .instruction()];\n                case 2:\n                    ix = _c.sent();\n                    Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value, ix, amountInt) : [ix];\n                    data = {\n                        type: 'Repaying',\n                        text: \"Repaying \".concat(amount, \" \").concat(reserveData.token_name, \" into the market\"),\n                        typed: 'Repaying',\n                        textd: \"Repaying \".concat(amount, \" \").concat(reserveData.token_name, \" into the market\"),\n                    };\n                    priceFeeds = [];\n                    if (reserveData.priceFeedID) {\n                        priceFeeds.push(reserveData.priceFeedID);\n                    }\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc, priceFeeds)];\n                case 3:\n                    signature = _c.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nfunction i80f48FromNumber(x) {\n    var MULTIPLIER_NUMBER = Math.pow(2, 48);\n    var int_part = Math.trunc(x);\n    var v = new anchor.BN(int_part).iushln(48);\n    v.iadd(new anchor.BN((x - int_part) * MULTIPLIER_NUMBER));\n    return v;\n}\nexport function setRepayLTV(nxlend_acc, amount) {\n    return __awaiter(this, void 0, void 0, function () {\n        var publicKey, nxlend_acc_pbk, wallet, program, numberAmount, i80f48Amount, ix, Ixs, data, signature;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    publicKey = useWallet().publicKey;\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    numberAmount = Number(amount);\n                    i80f48Amount = i80f48FromNumber(numberAmount);\n                    return [4 /*yield*/, program.methods.setAccountRepayLtv(\n                        //i80f48Amount\n                        { value: i80f48Amount }).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            owner: publicKey.value\n                        })\n                            .signers([])\n                            .instruction()];\n                case 1:\n                    ix = _a.sent();\n                    Ixs = [ix];\n                    data = {\n                        type: 'Set Repay LTV',\n                        text: \"Set Repay LTV at \".concat(amount * 100, \" %\"),\n                        typed: 'Set Repay LTV',\n                        textd: \"Set Repay LTV at \".concat(amount * 100, \" %\"),\n                    };\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc)];\n                case 2:\n                    signature = _a.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nfunction getWithdrawRemindingAccountList(nxlend_acc_data, reserve_str, all) {\n    var reserve_list = JSON.parse(JSON.stringify(appStore.reserve.state.reserveList));\n    var nxlendAccData = nxlend_acc_data;\n    var mybalance = nxlendAccData.userMarketInfo.userReserves;\n    var activeBalanceList = [];\n    mybalance.forEach(function (e) {\n        if (e.active) {\n            activeBalanceList.push(e);\n        }\n    });\n    var arr = [];\n    var priceFeeds = [];\n    activeBalanceList.forEach(function (r) {\n        if (r.reservePk.toBase58() !== reserve_str || !all) {\n            reserve_list.forEach(function (e) {\n                if (e.reserve_key === r.reservePk.toBase58()) {\n                    var reserve = new web3.PublicKey(e.reserve_key);\n                    arr.push({\n                        isSigner: false,\n                        isWritable: true,\n                        pubkey: reserve\n                    });\n                    var pythOracleReserve = new web3.PublicKey(e.pythOracle);\n                    arr.push({\n                        isSigner: false,\n                        isWritable: true,\n                        pubkey: pythOracleReserve\n                    });\n                    var priceFeed = e.priceFeedID;\n                    if (priceFeed) {\n                        priceFeeds.push(priceFeed);\n                    }\n                }\n            });\n        }\n    });\n    return { withdrawRemindingAccountList: arr, priceFeeds: priceFeeds };\n}\nexport function lendingAccountWithdraw(amount, nxlend_acc, reserve_str, reserve_mint_str, all, decimals, reserveData) {\n    return __awaiter(this, void 0, void 0, function () {\n        var reserve, reserve_mint, _a, liquidity_vault, liquidity_vault_bump, reserve_l_v_g, _b, liquidity_vault_authority, liquidity_vault_authority_bump, reserve_l_v_a_g, publicKey, wallet, program, user_token_data, nxlend_acc_pbk, amountInt, withdraw_amount, _c, withdrawRemindingAccountList, priceFeeds, ix, Ixs, data, signature;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    reserve = new web3.PublicKey(reserve_str);\n                    reserve_mint = new web3.PublicKey(reserve_mint_str);\n                    _a = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault = _a[0], liquidity_vault_bump = _a[1];\n                    reserve_l_v_g = liquidity_vault;\n                    _b = web3.PublicKey.findProgramAddressSync([Buffer.from(anchor.utils.bytes.utf8.encode(\"reserve_token_acc_auth_seed\")), reserve.toBuffer()], programLendingId), liquidity_vault_authority = _b[0], liquidity_vault_authority_bump = _b[1];\n                    reserve_l_v_a_g = liquidity_vault_authority;\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    return [4 /*yield*/, makeTokenAccountIx(connection, publicKey.value, reserve_mint, publicKey.value, true)];\n                case 1:\n                    user_token_data = _d.sent();\n                    nxlend_acc_pbk = new web3.PublicKey(nxlend_acc.key);\n                    amountInt = decimalToInteger(amount, decimals);\n                    withdraw_amount = new anchor.BN(amountInt);\n                    return [4 /*yield*/, getWithdrawRemindingAccountList(nxlend_acc.data, reserve_str, all)\n                        //const remindingAccountList = await getWithdrawRemindingAccountList(nxlend_acc.data,reserve_str,false)\n                    ];\n                case 2:\n                    _c = _d.sent(), withdrawRemindingAccountList = _c.withdrawRemindingAccountList, priceFeeds = _c.priceFeeds;\n                    //const remindingAccountList = await getWithdrawRemindingAccountList(nxlend_acc.data,reserve_str,false)\n                    console.log('withdraw remindingAccountList', withdrawRemindingAccountList);\n                    return [4 /*yield*/, program.methods.withdrawFromReserve(withdraw_amount, all\n                        //withdraw_amount, false\n                        ).accounts({\n                            nxlendMarket: marketAcc,\n                            nxlendAccount: nxlend_acc_pbk,\n                            signer: publicKey.value,\n                            reserve: reserve,\n                            destinationTokenAccount: user_token_data.AssociatedTokenAddress,\n                            tokenAccountAuthority: reserve_l_v_a_g,\n                            reserveTokenAccount: reserve_l_v_g,\n                            tokenProgram: token.TOKEN_PROGRAM_ID\n                        })\n                            .remainingAccounts(withdrawRemindingAccountList)\n                            .signers([])\n                            .instruction()];\n                case 3:\n                    ix = _d.sent();\n                    Ixs = reserve_mint_str === NATIVE_MINT.toBase58() ? wrapInstructionForWSol(publicKey.value, ix, 0) : [ix];\n                    Ixs = [user_token_data.ix].concat(Ixs);\n                    data = {\n                        type: 'Withdrawing',\n                        text: \"Withdrawing \".concat(amount, \" \").concat(reserveData.token_name, \" from the market\"),\n                        typed: 'Withdrawing',\n                        textd: \"Withdrawing \".concat(amount, \" \").concat(reserveData.token_name, \" from the market\"),\n                    };\n                    return [4 /*yield*/, nxSendTransaction(Ixs, data, nxlend_acc, priceFeeds)];\n                case 4:\n                    signature = _d.sent();\n                    return [2 /*return*/, signature];\n            }\n        });\n    });\n}\nexport function getBalance(token_account) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenAccountBalance2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    console.log('token_account', token_account);\n                    return [4 /*yield*/, connection.getTokenAccountBalance(token_account)];\n                case 1:\n                    tokenAccountBalance2 = _a.sent();\n                    return [2 /*return*/, tokenAccountBalance2.value.uiAmount];\n            }\n        });\n    });\n}\nfunction makeTokenAccountIx(connection, payer, mint, owner, allowOwnerOffCurve, needNew) {\n    if (needNew === void 0) { needNew = true; }\n    return __awaiter(this, void 0, void 0, function () {\n        var AssociatedTokenAddress, ix, tokenAccount, error_7;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, token.getAssociatedTokenAddress(mint, owner)];\n                case 1:\n                    AssociatedTokenAddress = _a.sent();\n                    ix = token.createAssociatedTokenAccountIdempotentInstruction(payer, // payer\n                    AssociatedTokenAddress, // ata\n                    owner, // owner\n                    mint // mint\n                    );\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 5]);\n                    return [4 /*yield*/, token.getAccount(connection, AssociatedTokenAddress)];\n                case 3:\n                    tokenAccount = _a.sent();\n                    return [2 /*return*/, {\n                            AssociatedTokenAddress: AssociatedTokenAddress,\n                            ix: ix,\n                            isExit: true\n                        }];\n                case 4:\n                    error_7 = _a.sent();\n                    return [2 /*return*/, {\n                            AssociatedTokenAddress: AssociatedTokenAddress,\n                            ix: ix,\n                            isExit: false\n                        }];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction createTokenAccount(connection, payer, mint, owner, allowOwnerOffCurve, needNew) {\n    if (needNew === void 0) { needNew = true; }\n    return __awaiter(this, void 0, void 0, function () {\n        var AssociatedTokenAddress, tokenAccount, error_8, transaction, sendTransaction_1, transactionSignature;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, token.getAssociatedTokenAddress(mint, owner, allowOwnerOffCurve)];\n                case 1:\n                    AssociatedTokenAddress = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 4, , 7]);\n                    return [4 /*yield*/, token.getAccount(connection, AssociatedTokenAddress)];\n                case 3:\n                    tokenAccount = _a.sent();\n                    return [2 /*return*/, tokenAccount];\n                case 4:\n                    error_8 = _a.sent();\n                    console.log(error_8);\n                    if (!needNew)\n                        return [2 /*return*/, null];\n                    transaction = new web3.Transaction();\n                    sendTransaction_1 = useWallet().sendTransaction;\n                    transaction.add(token.createAssociatedTokenAccountInstruction(payer, // payer\n                    AssociatedTokenAddress, // ata\n                    owner, // owner\n                    mint // mint\n                    ));\n                    return [4 /*yield*/, sendTransaction_1(transaction, connection)];\n                case 5:\n                    transactionSignature = _a.sent();\n                    return [4 /*yield*/, createTokenAccount(connection, payer, mint, owner, allowOwnerOffCurve)];\n                case 6: return [2 /*return*/, _a.sent()];\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getTotalAssetQuantity(totalAssetShares, assetShareValue) {\n    return totalAssetShares.times(assetShareValue);\n}\nfunction getTotalLiabilityQuantity(totalLiabilityShares, liabilityShareValue) {\n    return totalLiabilityShares.times(liabilityShareValue);\n}\nfunction getAssetQuantity(assetShares, assetShareValue) {\n    return assetShares.times(assetShareValue);\n}\nfunction getLiabilityQuantity(liabilityShares, liabilityShareValue) {\n    return liabilityShares.times(liabilityShareValue);\n}\nfunction getAssetShares(assetQuantity, assetShareValue) {\n    return assetQuantity.times(assetShareValue);\n}\nfunction getLiabilityShares(liabilityQuantity, liabilityShareValue) {\n    return liabilityQuantity.times(liabilityShareValue);\n}\nfunction makeWrapSolIxs(walletAddress, amount) {\n    var address = getAssociatedTokenAddressSync(NATIVE_MINT, walletAddress, true);\n    var ixs = [createAssociatedTokenAccountIdempotentInstruction(walletAddress, address, walletAddress, NATIVE_MINT)];\n    if (amount.gt(0)) {\n        // const nativeAmount = uiToNative(amount, 9).toNumber() + 10000;\n        // const nativeAmount = amount.plus(10000).toNumber();\n        var nativeAmount = Number(amount.times(new BigNumber(1).plus(SOL_WRAP_FACTOR)).toNumber().toFixed(0));\n        console.log(amount);\n        console.log(nativeAmount);\n        ixs.push(web3.SystemProgram.transfer({ fromPubkey: walletAddress, toPubkey: address, lamports: nativeAmount }), createSyncNativeInstruction(address));\n    }\n    return ixs;\n}\nfunction makeUnwrapSolIx(walletAddress) {\n    var address = getAssociatedTokenAddressSync(NATIVE_MINT, walletAddress, true);\n    return createCloseAccountInstruction(address, walletAddress, walletAddress);\n}\nfunction wrapInstructionForWSol(walletAddress, ix, amount) {\n    return __spreadArray(__spreadArray([], makeWrapSolIxs(walletAddress, new BigNumber(amount)), true), [ix, makeUnwrapSolIx(walletAddress)], false);\n}\nexport function confirmTransactionOld(tx) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function () {\n        var i, flag, result;\n        return __generator(this, function (_d) {\n            switch (_d.label) {\n                case 0:\n                    i = 0;\n                    flag = false;\n                    _d.label = 1;\n                case 1:\n                    if (!(i < 100)) return [3 /*break*/, 10];\n                    console.log('check times', i);\n                    return [4 /*yield*/, connection.getSignatureStatus(tx, {\n                            searchTransactionHistory: true,\n                        })];\n                case 2:\n                    result = _d.sent();\n                    if (!!result) return [3 /*break*/, 4];\n                    return [4 /*yield*/, delay(500)];\n                case 3:\n                    _d.sent();\n                    i = i + 1;\n                    return [3 /*break*/, 9];\n                case 4:\n                    console.log('check res', (_a = result.value) === null || _a === void 0 ? void 0 : _a.confirmationStatus);\n                    console.log('check res', result);\n                    if (!!result.value) return [3 /*break*/, 6];\n                    return [4 /*yield*/, delay(500)];\n                case 5:\n                    _d.sent();\n                    i = i + 1;\n                    return [3 /*break*/, 9];\n                case 6:\n                    i = i + 1;\n                    if (!(((_b = result.value) === null || _b === void 0 ? void 0 : _b.confirmationStatus) === 'processed')) return [3 /*break*/, 8];\n                    return [4 /*yield*/, delay(500)];\n                case 7:\n                    _d.sent();\n                    _d.label = 8;\n                case 8:\n                    if (((_c = result.value) === null || _c === void 0 ? void 0 : _c.confirmationStatus) === 'confirmed') {\n                        flag = true;\n                        i = 100;\n                    }\n                    _d.label = 9;\n                case 9: return [3 /*break*/, 1];\n                case 10: return [2 /*return*/, flag];\n            }\n        });\n    });\n}\nexport function confirmTransaction(tx) {\n    return __awaiter(this, void 0, void 0, function () {\n        var res;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connection.confirmTransaction(tx, \"confirmed\")];\n                case 1:\n                    res = _a.sent();\n                    return [2 /*return*/, res];\n            }\n        });\n    });\n}\nfunction getPriceUpdateData($priceFeeds) {\n    return __awaiter(this, void 0, void 0, function () {\n        var priceServiceConnection, priceFeeds;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    priceServiceConnection = new PriceServiceConnection(\"https://hermes.pyth.network/\", { priceFeedRequestConfig: { binary: true } });\n                    priceFeeds = [];\n                    if ($priceFeeds.length < 1) {\n                        priceFeeds.push('0xeaa020c61cc479712813461ce153894a96a6c00b21ed0cfc2798d1f9a9e9c94a');\n                    }\n                    else {\n                        priceFeeds = $priceFeeds;\n                    }\n                    return [4 /*yield*/, priceServiceConnection.getLatestVaas(priceFeeds)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nfunction nxSendTransaction($ixs, $data, nxlend_acc, $priceFeeds) {\n    var _a, _b, _c;\n    return __awaiter(this, void 0, void 0, function () {\n        var Ixs, _d, publicKey, signTransaction, connected, feeSetJson, feeSet, feeAmount, feeInt, computePriceIx, setComputeUnitLimitInstruction, getLatestBlockhashAndContext, blockhash, lookupTableAccount, messageV0, transactionV0, tx, queryString, urlParams, paramValue, updateSelf, finalTransactions, wallet_1, pythSolanaReceiver, priceUpdateData, _e, postInstructions, closeInstructions, priceFeedIdToPriceUpdateAccount, ConsumerInstructions, transactions, data, txRes, error_9, _f, wallet_2, sendTransaction_2, signAllTransactions_1, data, txRes, error_10;\n        return __generator(this, function (_g) {\n            switch (_g.label) {\n                case 0:\n                    Ixs = nxlend_acc.isExist ? $ixs : __spreadArray(__spreadArray([], [nxlend_acc.createAccountIx], false), $ixs, true);\n                    _d = useWallet(), publicKey = _d.publicKey, signTransaction = _d.signTransaction, connected = _d.connected;\n                    feeSetJson = window.localStorage.getItem('feeSet');\n                    feeSet = JSON.parse(feeSetJson);\n                    feeAmount = feeSet ? feeSet.feeAmount : 0;\n                    feeInt = decimalToInteger(feeAmount, 9);\n                    if (feeAmount > 0) {\n                        computePriceIx = web3.ComputeBudgetProgram.setComputeUnitPrice({\n                            microLamports: Number(feeInt),\n                        });\n                        Ixs = [computePriceIx].concat(Ixs);\n                    }\n                    setComputeUnitLimitInstruction = web3.ComputeBudgetProgram.setComputeUnitLimit({ units: 400000 });\n                    Ixs = [setComputeUnitLimitInstruction].concat(Ixs);\n                    console.log('$ixs', $ixs);\n                    return [4 /*yield*/, connection.getLatestBlockhashAndContext()];\n                case 1:\n                    getLatestBlockhashAndContext = _g.sent();\n                    blockhash = getLatestBlockhashAndContext.value.blockhash;\n                    return [4 /*yield*/, connection.getAddressLookupTable(lookUpTable)];\n                case 2:\n                    lookupTableAccount = (_g.sent()).value;\n                    messageV0 = new web3.TransactionMessage({\n                        payerKey: publicKey.value,\n                        recentBlockhash: blockhash,\n                        instructions: Ixs, // Note: this is an array of instructions\n                    }).compileToV0Message([lookupTableAccount]);\n                    transactionV0 = new web3.VersionedTransaction(messageV0);\n                    queryString = window.location.search;\n                    urlParams = new URLSearchParams(queryString);\n                    paramValue = urlParams.get('fee');\n                    console.log(paramValue);\n                    updateSelf = paramValue === 'true' ? true : false;\n                    if (!updateSelf) return [3 /*break*/, 11];\n                    wallet_1 = useAnchorWallet();\n                    pythSolanaReceiver = new PythSolanaReceiver({\n                        connection: connection,\n                        wallet: wallet_1.value,\n                    });\n                    return [4 /*yield*/, getPriceUpdateData($priceFeeds)];\n                case 3:\n                    priceUpdateData = _g.sent();\n                    console.log('priceUpdateData', priceUpdateData);\n                    return [4 /*yield*/, pythSolanaReceiver.buildUpdatePriceFeedInstructions(priceUpdateData, 0)];\n                case 4:\n                    _e = _g.sent(), postInstructions = _e.postInstructions, closeInstructions = _e.closeInstructions, priceFeedIdToPriceUpdateAccount = _e.priceFeedIdToPriceUpdateAccount;\n                    console.log('postInstructions', postInstructions);\n                    console.log('Ixs', Ixs);\n                    ConsumerInstructions = $ixs.map(function (ix) {\n                        var priceix = {\n                            instruction: ix,\n                            signers: [],\n                        };\n                        return priceix;\n                    });\n                    return [4 /*yield*/, pythSolanaReceiver.batchIntoVersionedTransactions(__spreadArray(__spreadArray(__spreadArray([], postInstructions, true), ConsumerInstructions, true), closeInstructions, true), { computeUnitPriceMicroLamports: 50000 })];\n                case 5:\n                    transactions = _g.sent();\n                    _g.label = 6;\n                case 6:\n                    _g.trys.push([6, 9, , 10]);\n                    return [4 /*yield*/, pythSolanaReceiver.provider.sendAll(__spreadArray([], transactions, true), {\n                            skipPreflight: false,\n                            preflightCommitment: \"processed\",\n                        })];\n                case 7:\n                    tx = _g.sent();\n                    data = {\n                        type: $data.type,\n                        text: $data.text,\n                        typed: $data.typed,\n                        textd: $data.textd,\n                        tx: updateSelf ? tx[tx.length - 1] : tx\n                    };\n                    appStore.pendingtx.state.txList.push(data);\n                    return [4 /*yield*/, connection.confirmTransaction(updateSelf ? tx[tx.length - 1] : tx, \"confirmed\")];\n                case 8:\n                    txRes = _g.sent();\n                    //await connection.confirmTransaction(tx, \"confirmed\");\n                    //await confirmTransaction(tx);\n                    if (txRes && !txRes.value.err) {\n                        firework1();\n                    }\n                    return [2 /*return*/, tx];\n                case 9:\n                    error_9 = _g.sent();\n                    console.log('error', error_9);\n                    if (error_9.toString().indexOf('User rejected') > -1) {\n                        ElMessage({\n                            message: 'User rejected',\n                            type: 'warning',\n                        });\n                    }\n                    return [2 /*return*/, false];\n                case 10: return [3 /*break*/, 18];\n                case 11:\n                    _g.trys.push([11, 17, , 18]);\n                    _f = useWallet(), wallet_2 = _f.wallet, sendTransaction_2 = _f.sendTransaction, signAllTransactions_1 = _f.signAllTransactions;\n                    if (!(((_a = wallet_2.value) === null || _a === void 0 ? void 0 : _a.adapter.name) === 'Solflare')) return [3 /*break*/, 14];\n                    return [4 /*yield*/, ((_b = wallet_2.value) === null || _b === void 0 ? void 0 : _b.adapter.connect())];\n                case 12:\n                    _g.sent();\n                    return [4 /*yield*/, ((_c = wallet_2.value) === null || _c === void 0 ? void 0 : _c.adapter.autoConnect())];\n                case 13:\n                    _g.sent();\n                    _g.label = 14;\n                case 14: return [4 /*yield*/, sendTransaction_2(transactionV0, connection)];\n                case 15:\n                    tx = _g.sent();\n                    data = {\n                        type: $data.type,\n                        text: $data.text,\n                        typed: $data.typed,\n                        textd: $data.textd,\n                        tx: updateSelf ? tx[tx.length - 1] : tx\n                    };\n                    appStore.pendingtx.state.txList.push(data);\n                    return [4 /*yield*/, connection.confirmTransaction(updateSelf ? tx[tx.length - 1] : tx, \"confirmed\")];\n                case 16:\n                    txRes = _g.sent();\n                    //await connection.confirmTransaction(tx, \"confirmed\");\n                    //await confirmTransaction(tx);\n                    if (txRes && !txRes.value.err) {\n                        firework1();\n                    }\n                    return [2 /*return*/, tx];\n                case 17:\n                    error_10 = _g.sent();\n                    console.log('error', error_10);\n                    if (error_10.toString().indexOf('User rejected') > -1) {\n                        ElMessage({\n                            message: 'User rejected',\n                            type: 'warning',\n                        });\n                    }\n                    return [2 /*return*/, false];\n                case 18: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function updateReserve(reserveKey, setFlag) {\n    return __awaiter(this, void 0, Promise, function () {\n        var publicKey, wallet, program, assetValueRatio, assetValueLiqRatio, debtValueRatioHighRisk, debtValueRatioMidRisk, debtValueRatioLowRisk, debtValueLiqRatio, tx;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    if (setFlag) {\n                        assetValueRatio = 0.5;\n                        assetValueLiqRatio = 0.65;\n                        // assetValueRatio = 0\n                        // assetValueLiqRatio = 0\n                        debtValueRatioHighRisk = 15.1;\n                        debtValueRatioMidRisk = 15.5;\n                        debtValueRatioLowRisk = 16;\n                        debtValueLiqRatio = 15;\n                    }\n                    else {\n                        assetValueRatio = 0.5;\n                        assetValueLiqRatio = 0.65;\n                        // assetValueRatio = 0\n                        // assetValueLiqRatio = 0\n                        debtValueRatioHighRisk = 2;\n                        debtValueRatioMidRisk = 2.5;\n                        debtValueRatioLowRisk = 3;\n                        debtValueLiqRatio = 1.5;\n                    }\n                    console.log('start change reserve');\n                    return [4 /*yield*/, program.methods.updateReserve({\n                            assetValueRatio: {\n                                value: i80f48FromNumber(assetValueRatio)\n                            },\n                            assetValueLiqRatio: {\n                                value: i80f48FromNumber(assetValueLiqRatio)\n                            },\n                            debtValueRatioHighRisk: {\n                                value: i80f48FromNumber(debtValueRatioHighRisk)\n                            },\n                            debtValueRatioMidRisk: {\n                                value: i80f48FromNumber(debtValueRatioMidRisk)\n                            },\n                            debtValueRatioLowRisk: {\n                                value: i80f48FromNumber(debtValueRatioLowRisk)\n                            },\n                            debtValueLiqRatio: {\n                                value: i80f48FromNumber(debtValueLiqRatio)\n                            },\n                            capacity: null,\n                            maxBorrowable: null,\n                            operationalState: null,\n                            oracle: null,\n                            interestSetting: null,\n                            reserveType: null,\n                            maxExposure: null,\n                            maxPriceAge: null\n                        }).accounts({\n                            nxlendMarket: marketAcc,\n                            manager: publicKey.value,\n                            reserve: reserveKey\n                        })\n                            .signers([])\n                            .rpc()];\n                case 1:\n                    tx = _a.sent();\n                    return [2 /*return*/, reserveKey];\n            }\n        });\n    });\n}\nvar aprToApy = function (apr, compoundingFrequency) {\n    if (compoundingFrequency === void 0) { compoundingFrequency = HOURS_PER_YEAR; }\n    return Math.pow((1 + apr / compoundingFrequency), compoundingFrequency) - 1;\n};\nexport function getFee() {\n    return __awaiter(this, void 0, void 0, function () {\n        var res, fee_1, feeNumber, error_11, feeNumber;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, connection.getRecentPrioritizationFees()];\n                case 1:\n                    res = _a.sent();\n                    fee_1 = 0;\n                    res.forEach(function (e) {\n                        if (e.prioritizationFee > fee_1) {\n                            fee_1 = e.prioritizationFee;\n                        }\n                    });\n                    feeNumber = integerToDecimal(fee_1, 9);\n                    return [2 /*return*/, feeNumber];\n                case 2:\n                    error_11 = _a.sent();\n                    feeNumber = integerToDecimal(5000, 9);\n                    return [2 /*return*/, feeNumber];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function firework1() {\n    var end = Date.now() + 2 * 1000;\n    // go Buckeyes!\n    var colors = [\"#7340c9\", \"#ffffff\"];\n    (function frame() {\n        confetti({\n            shapes: [\"star\"],\n            particleCount: 2,\n            angle: 60,\n            spread: 55,\n            origin: { x: 0 },\n            colors: colors,\n        });\n        confetti({\n            shapes: [\"star\"],\n            particleCount: 2,\n            angle: 120,\n            spread: 55,\n            origin: { x: 1 },\n            colors: colors,\n        });\n        if (Date.now() < end) {\n            requestAnimationFrame(frame);\n        }\n    })();\n}\nexport function getAllNxlendAccounts() {\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connection.getProgramAccounts(programLendingId, {\n                        dataSlice: {\n                            offset: 0,\n                            length: 0,\n                        },\n                        filters: [\n                            {\n                                memcmp: {\n                                    offset: 0,\n                                    bytes: bs58.encode(BorshAccountsCoder.accountDiscriminator('nxlendAccount')),\n                                },\n                            },\n                            {\n                                memcmp: {\n                                    bytes: marketAcc.toBase58(),\n                                    offset: 8 + 32,\n                                },\n                            },\n                        ],\n                    })];\n                case 1: return [2 /*return*/, (_a.sent()).map(function (a) {\n                        return a.pubkey;\n                    })];\n            }\n        });\n    });\n}\nexport function loadAllNxlendAccounts() {\n    return __awaiter(this, void 0, void 0, function () {\n        var allKeys, reservesData, _a, slot, ais, accountKeys, totalAccounts, processedAccounts, accountDataList, _i, accountDataList_1, _b, key, accountInfo, pubkey, parsedData, mybalanceData, displayData, account, progress;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    console.log(\"Loading data, this may take a moment...\");\n                    allKeys = [];\n                    return [4 /*yield*/, getAllReserveData()];\n                case 1:\n                    reservesData = _c.sent();\n                    return [4 /*yield*/, getAllNxlendAccounts()];\n                case 2:\n                    allKeys = _c.sent();\n                    console.log(\"Retrieved all Nxlend account addresses, found: %d\", allKeys.length);\n                    return [4 /*yield*/, chunkedGetRawMultipleAccountInfos(connection, allKeys.map(function (k) { return k.toBase58(); }), 16 * 64, 64)];\n                case 3:\n                    _a = _c.sent(), slot = _a[0], ais = _a[1];\n                    accountKeys = allKeys;\n                    totalAccounts = ais.size;\n                    processedAccounts = 0;\n                    accountDataList = Array.from(ais);\n                    for (_i = 0, accountDataList_1 = accountDataList; _i < accountDataList_1.length; _i++) {\n                        _b = accountDataList_1[_i], key = _b[0], accountInfo = _b[1];\n                        pubkey = new PublicKey(key);\n                        parsedData = accountDataDecode(accountInfo.data);\n                        mybalanceData = parsedData.userReserves;\n                        displayData = getAccountInfoDisplay(reservesData, parsedData, mybalanceData);\n                        account = { address: pubkey, data: __spreadArray([], displayData, true) };\n                        appStore.allaccounts.state.allaccounts.set(key, account);\n                        processedAccounts++;\n                        if (processedAccounts % 5000 === 0) {\n                            progress = ((processedAccounts / totalAccounts) * 100).toFixed(2);\n                            console.log(\"Processed %d accounts out of %d (%s%%)\", processedAccounts, totalAccounts, progress);\n                        }\n                    }\n                    console.log(\"Finished loading all Nxlend accounts\");\n                    return [2 /*return*/];\n            }\n        });\n    });\n}\nvar coder = new BorshCoder(idl);\nexport function accountDataDecode(encoded) {\n    var data = coder.accounts.decode('NxlendAccount', encoded);\n    var market = data.market;\n    var repayLtv = data.repayLtv;\n    var riskPreference = data.riskPreference;\n    var accountFlags = data.accountFlags;\n    var userReserves = data.userMarketInfo.userReserves;\n    return { market: market, repayLtv: repayLtv, riskPreference: riskPreference, accountFlags: accountFlags, userReserves: userReserves };\n}\nexport function getAccountInfoDisplay(reservesData, accData, mybalanceData) {\n    var reserveList = JSON.parse(JSON.stringify(reservesData));\n    var nxlendAccData = JSON.parse(JSON.stringify(accData));\n    var mybalance = __spreadArray([], mybalanceData, true);\n    var self_risk = JSON.stringify(nxlendAccData.riskPreference);\n    var risk_level = 1;\n    if (self_risk.indexOf('low') > -1) {\n        risk_level = 0;\n    }\n    if (self_risk.indexOf('middle') > -1) {\n        risk_level = 1;\n    }\n    if (self_risk.indexOf('high') > -1) {\n        risk_level = 2;\n    }\n    var balanceActive = [];\n    mybalance.forEach(function (e) {\n        if (e.active) {\n            balanceActive.push(e);\n        }\n    });\n    balanceActive.forEach(function (e) {\n        reserveList.forEach(function (r) {\n            if (e.active && e.reservePk.toBase58() === r.reserve_key) {\n                r.my_supply = integerToDecimal(getTotalAssetQuantity(wrappedI80F48toBigNumber(e.assetNtokenAmount), r.asset_ntoken_ratio).toFixed(0), r.decimals);\n                r.my_borrow = integerToDecimal(getTotalLiabilityQuantity(wrappedI80F48toBigNumber(e.debtNtokenAmount), r.debit_ntoken_ratio).toFixed(0), r.decimals);\n            }\n        });\n    });\n    reserveList.forEach(function (r) {\n        switch (risk_level) {\n            case 0:\n                r.debit_set_ratio = r.debit_low_ratio;\n                break;\n            case 1:\n                r.debit_set_ratio = r.debit_mid_ratio;\n                break;\n            case 2:\n                r.debit_set_ratio = r.debit_high_ratio;\n                break;\n        }\n    });\n    return reserveList;\n}\nexport function getAllReserveData() {\n    return __awaiter(this, void 0, void 0, function () {\n        var onLineReserveList, reserveList, publicKey, autoRepay, wallet, program, reserves, nxlendReserveDatas, i, _loop_3, pythOracleList, price_data;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(appStore.reserve.state.onlineReserveList.length > 0)) return [3 /*break*/, 1];\n                    onLineReserveList = JSON.parse(JSON.stringify(appStore.reserve.state.onlineReserveList));\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, getReserveList()];\n                case 2:\n                    onLineReserveList = _a.sent();\n                    appStore.reserve.state.onlineReserveList = onLineReserveList;\n                    _a.label = 3;\n                case 3:\n                    reserveList = onLineReserveList.map(function (e) {\n                        //e.token_img = require(e.logoURI) ? require(e.logoURI) : require('@/assets/token/sol.webp')\n                        e.token_img = e.logoURI;\n                        e.token_name = e.tokenSymbol;\n                        e.reserve_mint_key = e.tokenMint;\n                        e.reserve_key = e.reserveAddress;\n                        e.priceFeedID = e.priceFeedID ? e.priceFeedID : null;\n                        e.reserveAta = '',\n                            e.total_supply = 0,\n                            e.total_borrow = 0,\n                            e.supply_apr = 0,\n                            e.borrow_apr = 0,\n                            e.supply_apy = 0,\n                            e.borrow_apy = 0,\n                            e.ltv = 0,\n                            e.asset_ntoken_ratio = 0,\n                            e.debit_ntoken_ratio = 0,\n                            e.my_supply = 0,\n                            e.my_borrow = 0,\n                            e.amount = 0,\n                            e.capacity = 0,\n                            e.maxBorrow = 0,\n                            e.usd_price = 0,\n                            e.usd_price_low = 0,\n                            e.usd_price_high = 0,\n                            e.usd_price_weighted = 0,\n                            e.usd_price_weighted_low = 0,\n                            e.usd_price_weighted_high = 0,\n                            e.decimals = 0,\n                            e.asset_ratio = 0,\n                            e.asset_liq_ratio = 0,\n                            e.debit_set_ratio = 0,\n                            e.debit_high_ratio = 0,\n                            e.debit_mid_ratio = 0,\n                            e.debit_low_ratio = 0,\n                            e.debit_liq_ratio = 0,\n                            e.type = 1,\n                            e.interestSetting = {};\n                        return e;\n                    });\n                    publicKey = useWallet().publicKey;\n                    wallet = useAnchorWallet();\n                    anchor.setProvider(new anchor.AnchorProvider(connection, wallet.value, {}));\n                    program = new anchor.Program(idl, programLendingId);\n                    reserves = reserveList.map(function (e) {\n                        console.log('e.reserve_key', e.reserve_key);\n                        return new web3.PublicKey(e.reserve_key);\n                        //return new web3.PublicKey()\n                    });\n                    return [4 /*yield*/, getOnchainReserveData(program, reserves)];\n                case 4:\n                    nxlendReserveDatas = _a.sent();\n                    console.log('nxlendReserveDatas', nxlendReserveDatas);\n                    i = 0;\n                    _loop_3 = function () {\n                        var tokenMint = new web3.PublicKey(reserveList[i].reserve_mint_key);\n                        var nxlendReserveData;\n                        nxlendReserveDatas.forEach(function (e) {\n                            if (e.tokenMint.equals(tokenMint)) {\n                                nxlendReserveData = e;\n                            }\n                        });\n                        if (!nxlendReserveData) {\n                            i = i + 1;\n                            return \"continue\";\n                        }\n                        reserveList[i].type = 0;\n                        if (JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('collateral') > -1) {\n                            reserveList[i].type = 1;\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.reserveType).indexOf('noCollaAddup') > -1) {\n                            reserveList[i].type = 2;\n                        }\n                        if (reserveList[i].type === 0) {\n                            ElMessage({\n                                message: 'error collateral type',\n                                type: 'warning',\n                            });\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythEma') > -1) {\n                            reserveList[i].oracleType = 'pythV1';\n                        }\n                        if (JSON.stringify(nxlendReserveData.setting.oracleType).indexOf('pythV2') > -1) {\n                            reserveList[i].oracleType = 'pythV2';\n                        }\n                        reserveList[i].pythOracle = nxlendReserveData.setting.oracleKeys[0].toBase58();\n                        reserveList[i].capacity = integerToDecimal(nxlendReserveData.setting.capacity, nxlendReserveData.tokenDecimals);\n                        reserveList[i].maxBorrow = integerToDecimal(nxlendReserveData.setting.maxBorrowable, nxlendReserveData.tokenDecimals);\n                        reserveList[i].reserveAta = nxlendReserveData.tokenInfo.tokenAccount;\n                        reserveList[i].asset_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio).toNumber();\n                        reserveList[i].asset_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueLiqRatio).toNumber();\n                        reserveList[i].debit_low_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioLowRisk).toNumber();\n                        reserveList[i].debit_mid_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioMidRisk).toNumber();\n                        reserveList[i].debit_high_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueRatioHighRisk).toNumber();\n                        reserveList[i].debit_liq_ratio = wrappedI80F48toBigNumber(nxlendReserveData.setting.debtValueLiqRatio).toNumber();\n                        var totalAssetQuantity = getTotalAssetQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveAssetNtokenAmount), wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio));\n                        var totalLiabilityQuantity = getTotalLiabilityQuantity(wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.reserveDebtNtokenAmount), wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio));\n                        reserveList[i].decimals = nxlendReserveData.tokenDecimals;\n                        // const ltv = new BigNumber(1).div(wrappedI80F48toBigNumber(debitValueRatioRisk)).times(wrappedI80F48toBigNumber(nxlendReserveData.setting.assetValueRatio)).times(100).toFixed(2)\n                        // reserveList[i].ltv = ltv\n                        var interestSetting = {\n                            rateChangeUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr1).toString(),\n                            rateChangeUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.rateChangeUr2).toString(),\n                            irUr1: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr1).toString(),\n                            irUr2: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.irUr2).toString(),\n                            maxIr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.maxIr).toString(),\n                            treasuryBaseApr: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryBaseApr).toString(),\n                            treasuryAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.treasuryAdditionRatio).toString(),\n                            marketFeeBase: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketFeeBase).toString(),\n                            marketAdditionRatio: wrappedI80F48toBigNumber(nxlendReserveData.setting.interestSetting.marketAdditionRatio).toString()\n                        };\n                        reserveList[i].interestSetting = interestSetting;\n                        reserveList[i].asset_ntoken_ratio = wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.assetNtokenRatio);\n                        reserveList[i].debit_ntoken_ratio = wrappedI80F48toBigNumber(nxlendReserveData.creditDebit.debtNtokenRatio);\n                        reserveList[i].total_supply = integerToDecimal(totalAssetQuantity.toFixed(0), nxlendReserveData.tokenDecimals);\n                        reserveList[i].total_borrow = integerToDecimal(totalLiabilityQuantity.toFixed(0), nxlendReserveData.tokenDecimals);\n                        var apy = getApyNew(reserveList[i].total_supply, reserveList[i].total_borrow, reserveList[i].interestSetting);\n                        reserveList[i].supply_apr = Number.isNaN(apy.supplyAPR.toNumber()) ? 0 : new BigNumber(apy.supplyAPR).multipliedBy(100).toFixed(2);\n                        reserveList[i].supply_apy = Number.isNaN(apy.supplyAPY) ? 0 : new BigNumber(apy.supplyAPY).multipliedBy(100).toFixed(2);\n                        reserveList[i].borrow_apr = new BigNumber(apy.borrowAPR).multipliedBy(100).toFixed(2);\n                        reserveList[i].borrow_apy = new BigNumber(apy.borrowAPY).multipliedBy(100).toFixed(2);\n                        i = i + 1;\n                    };\n                    while (i < reserveList.length) {\n                        _loop_3();\n                    }\n                    pythOracleList = reserveList.map(function (e) {\n                        return { type: e.oracleType, pythOracle: new web3.PublicKey(e.pythOracle), reserveAddress: e.reserve_key, priceFeed: e.priceFeedID };\n                    });\n                    return [4 /*yield*/, getOnchainPriceData(pythOracleList)\n                        // try {\n                        //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\n                        // } catch (error) {\n                        //   console.log('getMultipleAccountsInfo pythOracleList',error)\n                        // }\n                    ];\n                case 5:\n                    price_data = _a.sent();\n                    // try {\n                    //   price_data = await connection.getMultipleAccountsInfo(pythOracleList)\n                    // } catch (error) {\n                    //   console.log('getMultipleAccountsInfo pythOracleList',error)\n                    // }\n                    reserveList.forEach(function (r) {\n                        price_data.forEach(function (p) {\n                            if (p.reserveAddress === r.reserve_key) {\n                                var priceRes = p.priceData;\n                                r.usd_price = priceRes.priceRealtime.price;\n                                r.usd_price_low = priceRes.priceRealtime.lowestPrice;\n                                r.usd_price_high = priceRes.priceRealtime.highestPrice;\n                                r.usd_price_weighted = priceRes.priceWeighted.price;\n                                r.usd_price_weighted_low = priceRes.priceWeighted.lowestPrice;\n                                r.usd_price_weighted_high = priceRes.priceWeighted.highestPrice;\n                            }\n                        });\n                    });\n                    reserveList.forEach(function (e) {\n                        e.ltv = new BigNumber(1).div(e.debit_set_ratio).times(100).toFixed(2);\n                    });\n                    return [2 /*return*/, reserveList];\n            }\n        });\n    });\n}\nexport function signMsg($msg) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var _b, signMessage, sendTransaction, publicKey, res, randomNumbers, nonce, msg, msgBytes, error_12;\n        return __generator(this, function (_c) {\n            switch (_c.label) {\n                case 0:\n                    _b = useWallet(), signMessage = _b.signMessage, sendTransaction = _b.sendTransaction, publicKey = _b.publicKey;\n                    console.log('sendTransaction', sendTransaction);\n                    console.log('signMessage', signMessage);\n                    if (window.crypto && window.crypto.getRandomValues) {\n                        randomNumbers = new Uint32Array(1);\n                        window.crypto.getRandomValues(randomNumbers);\n                        console.log(randomNumbers);\n                    }\n                    else {\n                        console.log('当前环境不支持生成真随机数');\n                        return [2 /*return*/, null];\n                    }\n                    nonce = randomNumbers[0].toString() + new Date().getTime().toString();\n                    console.log('user address', (_a = publicKey.value) === null || _a === void 0 ? void 0 : _a.toBase58());\n                    console.log('nonce', nonce);\n                    msg = $msg + nonce;\n                    console.log('msg', msg);\n                    msgBytes = decodeUTF8(msg);\n                    if (!signMessage.value) return [3 /*break*/, 5];\n                    _c.label = 1;\n                case 1:\n                    _c.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, signMessage.value(msgBytes)];\n                case 2:\n                    res = _c.sent();\n                    console.log('sign', res);\n                    console.log('sign bs58', bs58.encode(res));\n                    console.log('sign', uint8ArrayToHex(res));\n                    console.log('sign', uint8ArrayToBase64(res));\n                    console.log('sign', res.toLocaleString());\n                    console.log('sign', res.toString());\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_12 = _c.sent();\n                    return [2 /*return*/, null];\n                case 4: return [3 /*break*/, 6];\n                case 5: return [2 /*return*/, null];\n                case 6: return [2 /*return*/, bs58.encode(res)];\n            }\n        });\n    });\n}\nfunction uint8ArrayToBase64(uint8Array) {\n    var binary = '';\n    uint8Array.forEach(function (byte) { return (binary += String.fromCharCode(byte)); });\n    return btoa(binary);\n}\nfunction uint8ArrayToHex(uint8Array) {\n    return Array.from(uint8Array)\n        .map(function (byte) { return byte.toString(16).padStart(2, '0'); })\n        .join('');\n}\n","/* eslint-disable */\nimport axios, {isCancel, AxiosError} from 'axios';\nimport {RESERVE_ONLINE_DATA} from './value'\nimport localOnlineReserveList from './onlineReserve.json'\nimport appStore from '@/store'\n\nexport async function getReserveList() {\n    try {\n      const response = await axios.get(RESERVE_ONLINE_DATA);\n      console.log('response.data RESERVE_ONLINE_DATA',response.data);\n      return response.data\n    } catch (error) {\n      console.error(error);\n      return localOnlineReserveList\n    }\n}\nexport async function getOgscore($publickey) {\n    try {\n      const url = 'https://papi.nxfi.io/userpoint/'+$publickey\n      const response = await axios.get(url);\n      const og = JSON.parse(response.data)\n      console.log('response.data ogScore',response.data);\n      const bullScore = await getBullscore($publickey)\n      console.log('response.data bullScore',bullScore);\n      if(og) {\n        appStore.ogscore.state.ogscore = og.lend_points/100\n        appStore.ogscore.state.nxscore = og.lend_points/100\n      } else {\n        appStore.ogscore.state.nxscore = 0\n        appStore.ogscore.state.ogscore = 0\n      }\n      if(bullScore && bullScore.code === 0) {\n        appStore.ogscore.state.bullscore = bullScore.data > 50000 ? 50000 : bullScore.data\n        const MaxBullAddScore = appStore.ogscore.state.nxscore/10 > 50000 ? 50000 : appStore.ogscore.state.nxscore/10\n        const bullAddScore = appStore.ogscore.state.bullscore > MaxBullAddScore ? MaxBullAddScore : appStore.ogscore.state.bullscore\n        appStore.ogscore.state.bullUnlockscore = bullAddScore.toFixed(2)\n        appStore.ogscore.state.bullLockscore = (appStore.ogscore.state.bullscore - bullAddScore).toFixed(2)\n        appStore.ogscore.state.ogscore = (appStore.ogscore.state.ogscore + bullAddScore).toFixed(2)\n      } else {\n        appStore.ogscore.state.bullUnlockscore = 0\n        appStore.ogscore.state.bullLockscore = 0\n        appStore.ogscore.state.bullscore = 0\n      }\n    } catch (error) {\n      console.error(error);\n      appStore.ogscore.state.nxscore = 0\n      appStore.ogscore.state.ogscore = 0\n      appStore.ogscore.state.bullUnlockscore = 0\n      appStore.ogscore.state.bullLockscore = 0\n      appStore.ogscore.state.bullscore = 0\n      //return null\n    }\n}\nexport async function getBullscore($publickey) {\n    try {\n      const url = 'https://www.bullishs.io/api/award/2/nxfi?address='+$publickey\n      const response = await axios.get(url);\n      return response.data\n    } catch (error) {\n      console.error(error);\n      return null\n    }\n}\nexport async function registe($publickey,$referenceCode,$channel) {\n  console.log('start registe',$publickey,$referenceCode,$channel)\n    try {\n      let url='https://papi.nxfi.io/registe/'+$publickey\n      if($channel && !$referenceCode) {\n        url = url + '?channel=' + $channel\n      }\n      if($referenceCode && !$channel) {\n        url = url + '?referrercode=' + $referenceCode\n      }\n      if($referenceCode && $channel) {\n        url = url + '?referrercode=' + $referenceCode+ '&channel=' + $channel\n      }\n      const response = await axios.get(url);\n      console.log('response.data registe',response.data);\n      return JSON.parse(response.data)\n    } catch (error) {\n      console.error(error);\n      return null\n    }\n}\n","import { __awaiter, __generator } from \"tslib\";\n/* eslint-disable */\nimport axios from 'axios';\nimport { RESERVE_ONLINE_DATA } from './value';\nimport localOnlineReserveList from './onlineReserve.json';\nimport appStore from '@/store';\nexport function getReserveList() {\n    return __awaiter(this, void 0, void 0, function () {\n        var response, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, axios.get(RESERVE_ONLINE_DATA)];\n                case 1:\n                    response = _a.sent();\n                    console.log('response.data RESERVE_ONLINE_DATA', response.data);\n                    return [2 /*return*/, response.data];\n                case 2:\n                    error_1 = _a.sent();\n                    console.error(error_1);\n                    return [2 /*return*/, localOnlineReserveList];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getOgscore($publickey) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, response, og, bullScore, MaxBullAddScore, bullAddScore, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 4]);\n                    url = 'https://papi.nxfi.io/userpoint/' + $publickey;\n                    return [4 /*yield*/, axios.get(url)];\n                case 1:\n                    response = _a.sent();\n                    og = JSON.parse(response.data);\n                    console.log('response.data ogScore', response.data);\n                    return [4 /*yield*/, getBullscore($publickey)];\n                case 2:\n                    bullScore = _a.sent();\n                    console.log('response.data bullScore', bullScore);\n                    if (og) {\n                        appStore.ogscore.state.ogscore = og.lend_points / 100;\n                        appStore.ogscore.state.nxscore = og.lend_points / 100;\n                    }\n                    else {\n                        appStore.ogscore.state.nxscore = 0;\n                        appStore.ogscore.state.ogscore = 0;\n                    }\n                    if (bullScore && bullScore.code === 0) {\n                        appStore.ogscore.state.bullscore = bullScore.data > 50000 ? 50000 : bullScore.data;\n                        MaxBullAddScore = appStore.ogscore.state.nxscore / 10 > 50000 ? 50000 : appStore.ogscore.state.nxscore / 10;\n                        bullAddScore = appStore.ogscore.state.bullscore > MaxBullAddScore ? MaxBullAddScore : appStore.ogscore.state.bullscore;\n                        appStore.ogscore.state.bullUnlockscore = bullAddScore.toFixed(2);\n                        appStore.ogscore.state.bullLockscore = (appStore.ogscore.state.bullscore - bullAddScore).toFixed(2);\n                        appStore.ogscore.state.ogscore = (appStore.ogscore.state.ogscore + bullAddScore).toFixed(2);\n                    }\n                    else {\n                        appStore.ogscore.state.bullUnlockscore = 0;\n                        appStore.ogscore.state.bullLockscore = 0;\n                        appStore.ogscore.state.bullscore = 0;\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_2 = _a.sent();\n                    console.error(error_2);\n                    appStore.ogscore.state.nxscore = 0;\n                    appStore.ogscore.state.ogscore = 0;\n                    appStore.ogscore.state.bullUnlockscore = 0;\n                    appStore.ogscore.state.bullLockscore = 0;\n                    appStore.ogscore.state.bullscore = 0;\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function getBullscore($publickey) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, response, error_3;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    url = 'https://www.bullishs.io/api/award/2/nxfi?address=' + $publickey;\n                    return [4 /*yield*/, axios.get(url)];\n                case 1:\n                    response = _a.sent();\n                    return [2 /*return*/, response.data];\n                case 2:\n                    error_3 = _a.sent();\n                    console.error(error_3);\n                    return [2 /*return*/, null];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nexport function registe($publickey, $referenceCode, $channel) {\n    return __awaiter(this, void 0, void 0, function () {\n        var url, response, error_4;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    console.log('start registe', $publickey, $referenceCode, $channel);\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    url = 'https://papi.nxfi.io/registe/' + $publickey;\n                    if ($channel && !$referenceCode) {\n                        url = url + '?channel=' + $channel;\n                    }\n                    if ($referenceCode && !$channel) {\n                        url = url + '?referrercode=' + $referenceCode;\n                    }\n                    if ($referenceCode && $channel) {\n                        url = url + '?referrercode=' + $referenceCode + '&channel=' + $channel;\n                    }\n                    return [4 /*yield*/, axios.get(url)];\n                case 2:\n                    response = _a.sent();\n                    console.log('response.data registe', response.data);\n                    return [2 /*return*/, JSON.parse(response.data)];\n                case 3:\n                    error_4 = _a.sent();\n                    console.error(error_4);\n                    return [2 /*return*/, null];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n","/* eslint-disable */\nexport const BORROW_MAX_DISCOUNT = 0.997\nexport const programLendingIdStr = 'NxFiv1eeKtKT6dQEP2erBwz2DSKCTdb8WSsxVDwVGJ1'\nexport const marketAccKey = 'BhHKxaU5ZHFFCEstHFiMP419Wtj2QdiJiFVjq5LhXMa3'\nexport const usd_oracle_key = '5SSkXsEKQepHHAewytPVwdej4epN1nxgLVM84L4KXgy7'\nexport const usdc_mint_key = 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v'\nexport const look_up_address = '3fxvgRfCj66kp2z4SHeMGfpQNBEyhoR7BeHDkWpTpBQT'\nexport const node_rpc = process.env.VUE_APP_RPC_URL\nexport const HOURS_PER_YEAR = 365.25 * 24\nexport const INTERSEST_MIN_DISCOUNT = 0.003\nexport const MAX_BALANCES_AMOUNT = 15\nexport const SOL_WRAP_FACTOR = 0.0005\nexport const RESERVE_ONLINE_DATA = 'https://nxfiio.s3.ap-east-1.amazonaws.com/reserve_main.json'\nexport const OG_START_DATE = 1719763200000\nexport const OG_END_DATE = 1730303999000\nexport const OG_LV1_SCORE = 10500\nexport const OG_LV2_SCORE = 42000\nexport const OG_LV3_SCORE = 210000\nexport const needUpdate = false\nexport const reserve_list = [\n    {\n        token_name: 'SOL',\n        token_img: require('@/assets/token/sol.webp'),\n        reserve_mint_key: 'So11111111111111111111111111111111111111112',\n        reserve_key: 'D9ZVWiNhv7QVxJfVSb2F3A27ZeQ9mQZckBHjdqqV8iRp',\n        pythOracle: 'J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        amount: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0,\n        asset_liq_ratio: 0,\n        debit_set_ratio: 1.5,\n        debit_high_ratio: 0,\n        debit_mid_ratio: 0,\n        debit_low_ratio: 0,\n        debit_liq_ratio: 0,\n        type:1,\n        interestSetting:{}\n    },\n    {\n        token_name: 'nSOL',\n        token_img: require('@/assets/token/sol.webp'),\n        reserve_mint_key: 'AmHbtnQxTTGSWq5UTShUuxhpHegnAAWACYuZ7Q6DDNaB',\n        reserve_key: 'Er9x4qcQYwZMMnLYF4X2tL4wwBcWEiWimX8d7B5DpoQK',\n        pythOracle: 'J83w4HKfqxwcq3BEMMkPFSppX3gqekLyLJBexebFVkix',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        amount: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0.85,\n        asset_liq_ratio: 0.9,\n        debit_high_ratio: 1.1,\n        debit_set_ratio: 1.2,\n        debit_mid_ratio: 1.2,\n        debit_low_ratio: 1.3,\n        debit_liq_ratio: 1.05,\n        type:1,\n        interestSetting:{}\n    },\n    {\n        token_name: 'USDC',\n        token_img: require('@/assets/token/usdc.webp'),\n        reserve_mint_key: '6QGCu1RaFWWP4JuM7CyM4ypzxXPdkW8515xph6HaoQTp',\n        reserve_key: '6Xu8RNQ2JiSxSwUQN5HAJV4gXFtCnaYALM9NhZnDHx5r',\n        pythOracle: '5SSkXsEKQepHHAewytPVwdej4epN1nxgLVM84L4KXgy7',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        amount: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0.85,\n        asset_liq_ratio: 0.9,\n        debit_high_ratio: 1.1,\n        debit_set_ratio: 1.2,\n        debit_mid_ratio: 1.2,\n        debit_low_ratio: 1.3,\n        debit_liq_ratio: 1.05,\n        type:1,\n        interestSetting:{}\n    },\n    {\n        token_name: 'WBTC',\n        token_img: require('@/assets/token/wbtc.webp'),\n        reserve_mint_key: '9KQUzF8WNu1JUj63xS8tZL1NB64zdWk1TGA7uUgfBZug',\n        reserve_key: 'AKorkcEBB3f3f8rNo6WeptyQXN1XcGnbFAPJdTof1daR',\n        pythOracle: 'HovQMDrbAgAYPCmHVSrezcSmkMtXSSUsLDFANExrZh2J',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        amount: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0.85,\n        asset_liq_ratio: 0.9,\n        debit_high_ratio: 1.1,\n        debit_set_ratio: 1.2,\n        debit_mid_ratio: 1.2,\n        debit_low_ratio: 1.3,\n        debit_liq_ratio: 1.05,\n        type:1,\n        interestSetting:{}\n    },\n    {\n        token_name: 'JUP',\n        token_img: require('@/assets/token/jup.webp'),\n        reserve_mint_key: 'A9skDeJ6WWpLpMws6MNVyRHPZEG7szWgQH9GXTvHZ6Gw',\n        reserve_key: '8NV2nwKWmDF9KD7cRwy2mCSTC6hAPcgVdcW9e1bq2BMz',\n        pythOracle: 'Gh9hscza9YaCzr84tNV1NZQfpqoL3csYnWDygDkQmBU2',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        amount: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0,\n        asset_liq_ratio: 0,\n        debit_high_ratio: 1.1,\n        debit_set_ratio: 1.2,\n        debit_mid_ratio: 1.2,\n        debit_low_ratio: 1.3,\n        debit_liq_ratio: 1.05,\n        type:2,\n        interestSetting:{}\n    },\n    {\n        token_name: 'JTO',\n        token_img: require('@/assets/token/tokenjto.webp'),\n        reserve_mint_key: 'rEqAkyqH5nrxsqVAVBCLwRo2jGjV4vnc39tpdxX1XJV',\n        reserve_key: 'Au65NWG5oKtsXpxudkKpdjNTyjpKuMo8psE8A2fVrHJP',\n        pythOracle: '29xQnTzyyuRtgJ7RtSKEgBWwRzZqtrrKmyQQ5m3x629f',\n        reserveAta: '',\n        total_supply: 0,\n        total_borrow: 0,\n        supply_apr: 0,\n        borrow_apr: 0,\n        supply_apy: 0,\n        borrow_apy: 0,\n        ltv: 0,\n        amount: 0,\n        asset_ntoken_ratio: 0,\n        debit_ntoken_ratio: 0,\n        my_supply: 0,\n        my_borrow: 0,\n        usd_price: 0,\n        usd_price_low: 0,\n        usd_price_high: 0,\n        usd_price_weighted: 0,\n        usd_price_weighted_low: 0,\n        usd_price_weighted_high: 0,\n        decimals:0,\n        asset_ratio: 0,\n        asset_liq_ratio: 0,\n        debit_high_ratio: 1.1,\n        debit_set_ratio: 1.2,\n        debit_mid_ratio: 1.2,\n        debit_low_ratio: 1.3,\n        debit_liq_ratio: 1.05,\n        type:1,\n        interestSetting:{}\n    }\n]\nexport const slider_list = [\n    {\n        reserve_mint_key: 'So11111111111111111111111111111111111111112',\n        reserve_key: 'D9ZVWiNhv7QVxJfVSb2F3A27ZeQ9mQZckBHjdqqV8iRp',\n        slider: 50\n    },\n    {\n        reserve_mint_key: 'AmHbtnQxTTGSWq5UTShUuxhpHegnAAWACYuZ7Q6DDNaB',\n        reserve_key: 'Er9x4qcQYwZMMnLYF4X2tL4wwBcWEiWimX8d7B5DpoQK',\n        slider: 50,\n    },\n    {\n        reserve_mint_key: '6QGCu1RaFWWP4JuM7CyM4ypzxXPdkW8515xph6HaoQTp',\n        reserve_key: '6Xu8RNQ2JiSxSwUQN5HAJV4gXFtCnaYALM9NhZnDHx5r',\n        slider: 50,\n    },\n    {\n        reserve_mint_key: '9KQUzF8WNu1JUj63xS8tZL1NB64zdWk1TGA7uUgfBZug',\n        reserve_key: 'AKorkcEBB3f3f8rNo6WeptyQXN1XcGnbFAPJdTof1daR',\n        slider: 50,\n    },\n    {\n        reserve_mint_key: 'A9skDeJ6WWpLpMws6MNVyRHPZEG7szWgQH9GXTvHZ6Gw',\n        reserve_key: '8NV2nwKWmDF9KD7cRwy2mCSTC6hAPcgVdcW9e1bq2BMz',\n        slider: 50,\n    },\n    {\n        reserve_mint_key: 'rEqAkyqH5nrxsqVAVBCLwRo2jGjV4vnc39tpdxX1XJV',\n        reserve_key: 'Au65NWG5oKtsXpxudkKpdjNTyjpKuMo8psE8A2fVrHJP',\n        slider: 50,\n    }\n]","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\n// import SolanaWallets from 'solana-wallets-vue'\nimport { initWallet } from 'solana-wallets-vue'\n\n// You can either import the default styles or create your own.\nimport 'solana-wallets-vue/styles.css'\nimport './registerServiceWorker'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport router from './router'\nimport appStore, { registerStore } from './store'\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base'\nimport {\n  PhantomWalletAdapter,\n  SolflareWalletAdapter,\n  TokenPocketWalletAdapter,\n  Coin98WalletAdapter\n} from '@solana/wallet-adapter-wallets'\nconst pinia = createPinia()\nconst walletOptions = {\n  wallets: [\n    new PhantomWalletAdapter(),\n    new Coin98WalletAdapter(),\n    new SolflareWalletAdapter({ network: WalletAdapterNetwork.Mainnet }),\n    new TokenPocketWalletAdapter({ network: WalletAdapterNetwork.Mainnet })\n  ],\n  autoConnect: true\n}\ninitWallet(walletOptions)\nconst app = createApp(App)\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\napp.use(pinia).use(ElementPlus).use(router)\nregisterStore()\n\nrouter.isReady().then(() => app.mount('#app'))\n","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","<template>\n  <div class=\"home\">\n    <banner/>\n    <rwa/>\n    <lending/>\n    <profit/>\n    <power/>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n/* eslint-disable */\nimport banner from './bannerView.vue'\nimport lending from './lending.vue'\nimport rwa from './rwa.vue'\nimport profit from './profit.vue'\nimport power from './power.vue'\n\nexport default {\nname: 'HomeView',\ncomponents: {\n    banner,\n    lending,\n    rwa,\n    profit,\n    power\n}\n}\n</script>","<template>\n  <div class=\"banner\">\n      <div class=\"title\">Lending and RWA protocol on Solana</div>\n      <div class=\"desc\" @click=\"open('https://x.com/BuidlerDAO/status/1804023793490497612')\">Accelerated by <img @click.stop=\"open('https://www.springx.net/')\" src=\"@/assets/img/springxw.png\"/> & <img @click.stop=\"open('https://solana.com/')\" src=\"@/assets/img/solana.svg\" /><span class=\"more\">>>></span></div>\n      <div class=\"app\" @click=\"goPage('app')\">Launch App</div>\n      <img class=\"bg1\" src=\"@/assets/img/bannerbg1.svg\" />\n      <img class=\"bg2\" src=\"@/assets/img/bannerbg2.svg\" />\n  </div>\n</template>\n\n<script setup>\n/* eslint-disable */\nimport { useRoute, useRouter, RouteRecordRaw } from 'vue-router'\nconst router = useRouter()\nconst toApp=() => {\n  window.open(\"https://alpha.nxfi.io/\")\n}\nconst goPage = ($path) => {\n  router.push({\n    path: `/${$path}`\n  })\n}\nconst open = ($url) =>{\n  window.open($url)\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.banner {\n  // min-height: 837px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1480px;\n  min-height: calc(100vh - 72px);\n  display: flex;\n  flex-direction: column;\n    align-items: baseline;\n    justify-content: center;\n    padding: 0 246px;\n    box-sizing: border-box;\n  .bg1 {\n    position: absolute;\n    right: 0;\n    top: 0;\n  }\n  .bg2 {\n    position: absolute;\n    right: 0;\n    bottom: -31%;\n  }\n  .title {\n    max-width: 889px;\n    height: 218px;\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 90px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    text-align: left;\n    padding-bottom: 40px;\n  }\n  .desc {\n    cursor: pointer;\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 32px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: normal;\n    text-align: left;\n    display: flex;\n    align-items: center;\n    padding-bottom: 64px;\n    z-index: 1;\n    img {\n      margin: 0 10px;\n      height: 30px;\n      cursor: pointer;\n    }\n    .more {\n      cursor: pointer;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-style: normal;\n      font-weight: 300;\n      line-height: normal;\n    }\n  }\n  .app {\n    cursor: pointer;\n    display: flex;\n    width: 262px;\n    height: 62px;\n    padding: 10px;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    flex-shrink: 0;\n    border-radius: 12px;\n    background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    box-sizing: border-box;\n    z-index: 1;\n  }\n}\n@media (min-width: 1200px) and (max-width: 1400px) {\n  .banner {\n    // min-height: 837px;\n    min-height: calc(100vh - 72px);\n    display: flex;\n    flex-direction: column;\n      align-items: baseline;\n      justify-content: center;\n      padding: 0 20px;\n      box-sizing: border-box;\n    .bg1 {\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n    .bg2 {\n      position: absolute;\n      right: 0;\n      bottom: -31%;\n    }\n    .title {\n      width: 80%;\n      height: auto;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 70px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-align: left;\n      padding-bottom: 32px;\n      margin-left: 32px;\n      margin-right: 32px;\n    }\n    .desc {\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: normal;\n    text-align: left;\n    display: flex;\n    align-items: center;\n    padding-bottom: 16px;\n    img {\n      margin: 0 8px;\n      height: 22px;\n      cursor: pointer;\n    }\n    .more {\n      cursor: pointer;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-style: normal;\n      font-weight: 300;\n      line-height: normal;\n    }\n  }\n    .app {\n      cursor: pointer;\n      display: flex;\n      width: 240px;\n      height: 45px;\n      padding: 10px;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      flex-shrink: 0;\n      border-radius: 12px;\n      background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 25px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      box-sizing: border-box;\n      margin-left: 32px;\n      margin-right: 32px;\n    }\n  } \n}\n@media (min-width: 800px) and (max-width: 1200px) {\n  .banner {\n    // min-height: 837px;\n    min-height: calc(100vh - 72px);\n    display: flex;\n    flex-direction: column;\n      align-items: baseline;\n      justify-content: center;\n      padding: 0 20px;\n      box-sizing: border-box;\n    .bg1 {\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n    .bg2 {\n      position: absolute;\n      right: 0;\n      bottom: -31%;\n    }\n    .title {\n      width: 80%;\n      height: auto;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 60px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-align: left;\n      padding-bottom: 32px;\n      margin-left: 32px;\n      margin-right: 32px;\n    }  .desc {\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: normal;\n    text-align: left;\n    display: flex;\n    align-items: center;\n    padding-bottom: 16px;\n    img {\n      margin: 0 10px;\n      height: 18px;\n      cursor: pointer;\n    }\n    .more {\n      cursor: pointer;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-style: normal;\n      font-weight: 300;\n      line-height: normal;\n    }\n  }\n    .app {\n      cursor: pointer;\n      display: flex;\n      width: 240px;\n      height: 45px;\n      padding: 10px;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      flex-shrink: 0;\n      border-radius: 12px;\n      background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 25px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      box-sizing: border-box;\n      margin-left: 32px;\n      margin-right: 32px;\n    }\n  } \n}\n@media (max-width: 800px) {\n  .banner {\n    // min-height: 837px;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n      align-items: baseline;\n      justify-content: center;\n      padding: 0 20px;\n      box-sizing: border-box;\n      margin-top: -65px;\n    .bg1 {\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n    .bg2 {\n      position: absolute;\n      right: 0;\n      bottom: -31%;\n    }\n    .title {\n      width: 80%;\n      height: auto;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 40px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-align: left;\n      padding-bottom: 32px;\n      margin-left: 32px;\n      margin-right: 32px;\n    }\n    .desc {\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 300;\n    line-height: normal;\n    text-align: left;\n    display: flex;\n    align-items: center;\n    padding-bottom: 16px;\n    img {\n      margin: 0 6px;\n      height: 14px;\n      cursor: pointer;\n    }\n    .more {\n      cursor: pointer;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-style: normal;\n      font-weight: 300;\n      line-height: normal;\n    }\n  }\n    .app {\n      cursor: pointer;\n      display: flex;\n      width: 80%;\n      height: 45px;\n      padding: 10px;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      flex-shrink: 0;\n      border-radius: 12px;\n      background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 25px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      box-sizing: border-box;\n      margin-left: 32px;\n      margin-right: 32px;\n    }\n  } \n}\n</style>\n  ","import script from \"./bannerView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./bannerView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./bannerView.vue?vue&type=style&index=0&id=41d89c4e&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-41d89c4e\"]])\n\nexport default __exports__","<template>\n  <div class=\"lend\">\n    <div class=\"title\">LENDING</div>\n    <div class=\"desc\"> with personal risk management tools set</div>\n    <div class=\"wrapper\">\n      <div class=\"item\">\n        <img src=\"@/assets/img/lend11.svg\" />\n        <div class=\"desc1\">Auto repay by LTV</div>\n        <div class=\"desc2\">Combat the risk of price fluctuations of Borrowed assets</div>\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/img/lend13.svg\" />\n        <div class=\"desc1\">User-defined risk appetite</div>\n        <div class=\"desc2\">Personalized lending parameters based on the preferences and needs</div>\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/img/lend12.svg\" />\n        <div class=\"desc1\">Long-term high interest rates trigger repay</div>\n        <div class=\"desc2\">Avoid losses caused by the excessive borrow ratio of Borrowed assets</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nexport default {\nname: 'lend',\nprops: {\n    msg: String\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.lend {\n  margin-bottom: 326px;\n  .title {\n    color: #FFF;\n    font-family: 'Poppins',sans-serif;\n    font-size: 70px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 80px;\n    text-transform: uppercase;\n  }\n  .desc {\n    color: #FFF;\n    text-align: center;\n    font-family: 'Poppins',sans-serif;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    text-transform: capitalize;\n    margin-bottom: 100px;\n    opacity:0.5;\n  }\n  .wrapper {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top:100px;\n    .item {\n      width: 30%;\n      max-width: 415px;\n      img {\n        height: 248px;\n        margin-bottom: 65px;\n      }\n      .desc1 {\n        color: #C958FF;\n        font-family: 'Poppins',sans-serif;\n        font-size: 20px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        margin-bottom: 12px;\n      }\n      .desc2 {\n        color: #FFF;\n        text-align: center;\n        font-family: 'Poppins',sans-serif;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: lowercase;\n      }\n    }\n  }\n}\n@media (max-width: 800px) {\n  .lend {\n    margin-top: 60px;\n    margin-bottom: 120px;\n    .title {\n      width: 90%;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 30px;\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 10px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n    }\n    .desc {\n      width: 90%;\n      color: #FFF;\n      text-align: center;\n      font-family: 'Poppins',sans-serif;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 50px;\n      margin-left: auto;\n      margin-right: auto;\n      opacity:0.5;\n    }\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      margin-top:60px;\n      .item {\n        width: 90%;\n        max-width: 415px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-bottom: 40px;\n        img {\n          height: 170px;\n          margin-bottom: 17px;\n        }\n        .desc1 {\n          color: #C958FF;\n          font-family: Inter,sans-serif;\n          font-size: 20px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n          margin-bottom: 12px;\n        }\n        .desc2 {\n          max-width: 80%;\n          color: #FFF;\n          text-align: left;\n          font-family: Inter,sans-serif;\n          font-size: 14px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n        }\n      }\n    }\n  }\n}\n</style>\n  ","import { render } from \"./lending.vue?vue&type=template&id=1417d71c&scoped=true\"\nimport script from \"./lending.vue?vue&type=script&lang=js\"\nexport * from \"./lending.vue?vue&type=script&lang=js\"\n\nimport \"./lending.vue?vue&type=style&index=0&id=1417d71c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1417d71c\"]])\n\nexport default __exports__","<template>\n  <div class=\"rwa\">\n      <div class=\"text-wrapper text-wrapper-m\">\n        <div class=\"rwa-title\">RWA</div>\n        <div class=\"rwa-desc\">CONNECT ON AND OFF CHAIN</div>\n      </div>\n      <div class=\"pics\">\n        <!-- <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\">\n          <img src=\"@/assets/img/rwa1.jpg\"/>\n        </div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"><img src=\"@/assets/img/rwa2.jpg\"/></div>\n        <div class=\"item\"><img src=\"@/assets/img/rwa3.jpg\"/></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div>\n        <div class=\"item\"></div> -->\n        <img src=\"@/assets/img/rwa.png\"/>\n      </div>\n      <div class=\"text-wrapper\">\n        <div class=\"rwa-title desktop \">RWA</div>\n        <div class=\"rwa-desc desktop\">CONNECT ON AND OFF CHAIN</div>\n        <div class=\"texts\">\n          <div class=\"text-item\">\n            <div class=\"title\"><div class=\"dot\"></div>Treasury Bonds</div>\n            <div class=\"text\">High security</div>\n            <div class=\"text\">Low interest rates</div>\n          </div>\n          <div class=\"text-item\">\n            <div class=\"title\"><div class=\"dot\"></div>Fixed Income Products</div>\n            <div class=\"text\">High credit and liquidity</div>\n            <div class=\"text\">by worldwide investment banking</div>\n          </div>\n          <div class=\"text-item\">\n            <div class=\"title\"><div class=\"dot\"></div>Asset Package of Emerging Market</div>\n            <div class=\"text\">High interest rates</div>\n            <div class=\"text\">guaranteed by the insurance institution</div>\n          </div>\n        </div>\n      </div>\n      <img class=\"bg\" src=\"@/assets/img/rwabg1.svg\" />\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.rwa {\n  min-height: 1039px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  .text-wrapper-m {\n    display: none;\n  }\n  .pics {\n    width: 60%;\n    display: flex;\n    //flex-wrap: wrap;\n    justify-content: end;\n    // transform: rotate(45deg);\n    color: #fff;\n    img{\n      width:100%;\n      max-width:820px;\n    }\n    // .item {\n    //   width: 205px;\n    //   height: 205px;\n    //   overflow: hidden;\n    //   img{\n    //     height: 140%;\n    //     transform: rotate(-45deg);\n    //   }\n    // }\n    // .item:nth-child(1) {\n    //   opacity: 0;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(2) {\n    //   opacity: 0.01;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(3) {\n    //   opacity: 0.03;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(4) {\n    //   opacity: 0;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(5) {\n    //   opacity: 0.01;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(6) {\n    //   opacity: 0.05;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(7) {\n    //   display: flex;\n    //   justify-content: center;\n    //   align-items: center;\n    // }\n    // .item:nth-child(8) {\n    //   opacity: 0.05;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(9) {\n    //   background: rgba(217, 217, 217, 0.05);\n    // }\n    // .item:nth-child(10) {\n    //   display: flex;\n    //   justify-content: center;\n    //   align-items: center;\n    // }\n    // .item:nth-child(11) {\n    //   background: url('@/assets/img/rwa3.jpg');\n    //   background-size: cover;\n    // }\n    // .item:nth-child(12) {\n    //   opacity: 0.03;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(13) {\n    //   opacity: 0;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(14) {\n    //   opacity: 0.05;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(15) {\n    //   opacity: 0.03;\n    //   background: #D9D9D9;\n    // }\n    // .item:nth-child(16) {\n    //   opacity: 0.01;\n    //   background: #D9D9D9;\n    // }\n  }\n  .text-wrapper {\n    width: 40%;\n    .rwa-title {\n      color: #FFF;\n      font-family: 'Poppins',sans-serif;\n      font-size: 70px;\n      font-style: normal;\n      font-weight: 700;\n      line-height: 80px;\n      text-transform: uppercase;\n      text-align:left;\n    }\n    .rwa-desc {\n      color: #FFF;\n      text-align: center;\n      font-family: 'Poppins',sans-serif;\n      font-size: 30px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 52px;\n      text-align:left;\n      opacity:0.5;\n    }\n  }\n  .texts {\n    display: flex;\n    flex-direction: column;\n    align-items: baseline;\n    .text-item {\n      text-align: left;\n      margin-bottom: 20px;\n      .title{\n        display: flex;\n        align-items: center;\n        justify-content: start;\n        .dot{\n          margin: 5px;\n          width: 6px;\n          height: 6px;\n          background-color:#fff;\n          border-radius: 3px;\n        }\n        color: #FFF;\n        font-family: 'Poppins',sans-serif;\n        font-size: 22px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n      }\n      .text {\n        padding-left:16px;\n        color: #717171;\n        font-family: 'Poppins',sans-serif;\n        font-size: 18px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n      }\n    }\n  }\n  .bg {\n    position: absolute;\n    right: 0;\n    bottom: -50%;\n  }\n}\n@media (max-width: 1000px) and (min-width:800px) {\n  .rwa {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-bottom: 160px;\n    .text-wrapper-m {\n      display: block !important;\n    }\n    .pics {\n      width: 66vw;\n      height: 66vw;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around;\n      color: #fff;\n      img{\n        width:100%;\n      }\n    }\n    .text-wrapper {\n      width: 90%;\n      .desktop {\n        display: none;\n      }\n      .rwa-title {\n        width: 90%;\n        color: #FFF;\n        font-family: Inter,sans-serif;\n        font-size: 70px;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        text-transform: capitalize;\n        margin-bottom: 10px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n      }\n      .rwa-desc {\n        width: 90%;\n        color: #FFF;\n        text-align: center;\n        font-family: 'Poppins',sans-serif;\n        font-size: 30px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: capitalize;\n        margin-bottom: 10px;\n        margin-left: auto;\n        margin-right: auto;\n        opacity:0.5;\n      }\n    }\n    .texts {\n      display: flex;\n      flex-direction: column;\n      align-items: baseline;\n      max-width:440px;\n      margin:auto;\n      .text-item {\n        text-align: left;\n        margin-bottom: 10px;\n        .title{\n          color: #FFF;\n          font-family: 'Poppins',sans-serif;\n          font-size: 22px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n        }\n        .text {\n          color: #717171;\n          font-family: 'Poppins',sans-serif;\n          font-size: 18px;\n          font-style: normal;\n          font-weight: 400;\n          line-height: normal;\n        }\n      }\n    }\n    .bg {\n      position: absolute;\n      right: 0;\n      bottom: -50%;\n    }\n  }\n}\n@media (max-width: 800px) {\n  .rwa {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: start;\n    position: relative;\n    min-height:800px;\n    .text-wrapper-m {\n      display: block !important;\n    }\n    .pics {\n      width: 88vw;\n      height: 88vw;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: space-around;\n      color: #fff;\n    }\n    .text-wrapper {\n      width: 90%;\n      .desktop {\n        display: none;\n      }\n      .rwa-title {\n        width: 90%;\n        color: #FFF;\n        font-family: Inter,sans-serif;\n        font-size: 30px;\n        font-style: normal;\n        font-weight: 700;\n        line-height: normal;\n        text-transform: capitalize;\n        margin-bottom: 10px;\n        text-align: center;\n        margin-left: auto;\n        margin-right: auto;\n      }\n      .rwa-desc {\n        width: 90%;\n        color: #FFF;\n        text-align: center;\n        font-family: 'Poppins',sans-serif;\n        font-size: 16px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: capitalize;\n        margin-bottom: 10px;\n        margin-left: auto;\n        margin-right: auto;\n        opacity:0.5;\n      }\n    }\n    .texts {\n      display: flex;\n      flex-direction: column;\n      align-items: baseline;\n      max-width:330px;\n      margin:auto;\n      .text-item {\n        text-align: left;\n        margin-bottom: 10px;\n        .title{\n          color: #FFF;\n          font-family: 'Poppins',sans-serif;\n          font-size: 18px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n        }\n        .text {\n          color: #717171;\n          font-family: 'Poppins',sans-serif;\n          font-size: 14px;\n          font-style: normal;\n          font-weight: 400;\n          line-height: normal;\n        }\n      }\n    }\n    .bg {\n      position: absolute;\n      right: 0;\n      bottom: -50%;\n    }\n  }\n}\n</style>\n  ","import { render } from \"./rwa.vue?vue&type=template&id=1c496f13&scoped=true\"\nimport script from \"./rwa.vue?vue&type=script&lang=js\"\nexport * from \"./rwa.vue?vue&type=script&lang=js\"\n\nimport \"./rwa.vue?vue&type=style&index=0&id=1c496f13&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1c496f13\"]])\n\nexport default __exports__","<template>\n  <div class=\"profit\">\n    <div class=\"title\">PROFIT ENGINE</div>\n    <div class=\"desc\">A one-stop module for investment management</div>\n    <div class=\"wrapper\">\n      <div class=\"item\">\n        <img src=\"@/assets/img/profit1.png\" />\n        <div class=\"desc1\">Best yield opportunities</div>\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/img/profit2.png\" />\n        <div class=\"desc1\">Intuitive earning data</div>\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/img/profit3.png\" />\n        <div class=\"desc1\">Simple operation</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nexport default {\nname: 'lend',\nprops: {\n    msg: String\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.profit {\n    margin-bottom: 160px;\n  .title {\n    color: #FFF;\n    font-family: 'Poppins',sans-serif;\n    font-size: 70px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 80px;\n    text-transform: uppercase;\n  }\n  .desc {\n    color: #FFF;\n    text-align: center;\n    font-family: 'Poppins',sans-serif;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    text-transform: capitalize;\n    margin-bottom: 100px;\n    opacity:0.5;\n  }\n  .wrapper {\n    position:relative;\n    margin:auto;\n    max-width: 970px;\n    height: 596px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    background-image: url('@/assets/img/profitback.png');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    .item:nth-child(1){\n      position: absolute;\n      top: 0;\n      left: 20%;\n      img {\n        width: 260px;\n      }\n    }\n    .item:nth-child(2){\n      position: absolute;\n      bottom: 5%;\n      left: 40%;\n      img {\n        width: 220px;\n      }\n    }\n    .item:nth-child(3){\n      position: absolute;\n      top: 10%;\n      left: 60%;\n      img {\n        width: 190px;\n      }\n    }\n    .item {\n      .desc1 {\n        color: #FFF;\n        font-family: 'Poppins',sans-serif;\n        font-size: 20px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: lowercase;\n        opacity:0.5;\n      }\n    }\n  }\n}\n@media (max-width: 800px) {\n  .profit {\n    margin-top: 60px;\n    .title {\n      width: 90%;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 30px;\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 10px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n    }\n    .desc {\n      width: 90%;\n      color: #FFF;\n      text-align: center;\n      font-family: 'Poppins',sans-serif;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 50px;\n      margin-left: auto;\n      margin-right: auto;\n      opacity:0.5;\n    }\n  .wrapper {\n    position:relative;\n    margin:auto;\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: start;\n    background-image: url('@/assets/img/profitback.png');\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    .item {\n      position: relative !important;\n      left:auto !important;\n      top:auto !important;\n      bottom:auto !important;\n      margin-bottom: 30px;\n      img {\n        width:170px !important;\n      }\n      .desc1 {\n        color: #FFF;\n        font-family: 'Poppins',sans-serif;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: lowercase;\n        opacity:0.5;\n      }\n    }\n  }\n  }\n}\n</style>\n  ","import { render } from \"./profit.vue?vue&type=template&id=20cf76ff&scoped=true\"\nimport script from \"./profit.vue?vue&type=script&lang=js\"\nexport * from \"./profit.vue?vue&type=script&lang=js\"\n\nimport \"./profit.vue?vue&type=style&index=0&id=20cf76ff&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-20cf76ff\"]])\n\nexport default __exports__","<template>\n  <div class=\"power\">\n    <div class=\"title\">power by</div>\n    <div class=\"wrapper\">\n      <div class=\"item\">\n        <img src=\"@/assets/power/solana.svg\" />\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/power/pyth.svg\" />\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/power/jup.svg\" />\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/power/solscan.svg\" />\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/power/squads.svg\" />\n      </div>\n      <div class=\"item\">\n        <img src=\"@/assets/power/wormhole.svg\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable */\nexport default {\nname: 'power',\nprops: {\n    msg: String\n}\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.power {\n    max-width: 800px;\n    margin-left:auto;\n    margin-right:auto;\n    margin-bottom: 210px;\n  .title {\n    color: #DCDCDC;\n    text-align: center;\n    font-family: 'Poppins',sans-serif;\n    font-size: 24px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    text-transform: uppercase;\n  }\n  .wrapper {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex-wrap: wrap;\n    .item:chile(1) {\n      img {\n        height: 31px;\n      }\n    }\n    .item:chile(2) {\n      img {\n        height: 39px;\n      }\n    }\n    .item:chile(3) {\n      img {\n        height: 35px;\n      }\n    }\n    .item:chile(4) {\n      img {\n        height: 20px;\n      }\n    }\n    .item:chile(5) {\n      img {\n        height: 31px;\n      }\n    }\n    .item:chile(6) {\n      img {\n        height: 16px;\n      }\n    }\n    .item {\n      width: 33%;\n      max-width: 266px;\n      margin-top: 60px;\n    }\n  }\n}\n@media (max-width: 800px) {\n  .power {\n    margin-top: 60px;\n    .title {\n      width: 90%;\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 30px;\n      font-style: normal;\n      font-weight: 700;\n      line-height: normal;\n      text-transform: capitalize;\n      margin-bottom: 40px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n    }\n    .wrapper {\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      .item:chile(1) {\n        img {\n          height: 31px;\n        }\n      }\n      .item:chile(2) {\n        img {\n          height: 39px;\n        }\n      }\n      .item:chile(3) {\n        img {\n          height: 35px;\n        }\n      }\n      .item:chile(4) {\n        img {\n          height: 20px;\n        }\n      }\n      .item:chile(5) {\n        img {\n          height: 31px;\n        }\n      }\n      .item:chile(6) {\n        img {\n          height: 16px;\n        }\n      }\n      .item {\n        width: 90%;\n        max-width: 415px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        margin-top: 20px;\n        margin-bottom: 20px;\n        .desc1 {\n          color: #C958FF;\n          font-family: Inter,sans-serif;\n          font-size: 20px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n          margin-bottom: 12px;\n        }\n        .desc2 {\n          max-width: 80%;\n          color: #FFF;\n          text-align: left;\n          font-family: Inter,sans-serif;\n          font-size: 14px;\n          font-style: normal;\n          font-weight: 500;\n          line-height: normal;\n        }\n      }\n    }\n  }\n}\n</style>\n  ","import { render } from \"./power.vue?vue&type=template&id=fcd4f28c&scoped=true\"\nimport script from \"./power.vue?vue&type=script&lang=js\"\nexport * from \"./power.vue?vue&type=script&lang=js\"\n\nimport \"./power.vue?vue&type=style&index=0&id=fcd4f28c&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fcd4f28c\"]])\n\nexport default __exports__","import { render } from \"./index.vue?vue&type=template&id=9ca97206\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '@/views/HomeView/index.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/app',\n    name: 'app',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AppView/index.vue')\n  },\n  {\n    path: '/swap',\n    name: 'swap',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/AnySwap/index.vue')\n  },\n  {\n    path: '/rwa',\n    children: [\n      {\n        path: '',\n        name: 'rwa',\n        component: () => import(/* webpackChunkName: \"about\" */ '../views/RwaView/home.vue')\n      }\n      // {\n      //   path: 'login',\n      //   component: () => import(/* webpackChunkName: \"about\" */ '../views/RwaView/login.vue')\n      // },\n      // {\n      //   path: 'portfolio',\n      //   component: () => import(/* webpackChunkName: \"about\" */ '../views/RwaView/portfolio.vue')\n      // }\n    ]\n  },\n  {\n    path: '/profit',\n    name: 'profit',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/ProfitView/index.vue')\n  },\n  {\n    path: '/activity',\n    name: 'activity',\n    component: () => import(/* webpackChunkName: \"about\" */ '../views/ActivityView/index.vue')\n  },\n  // {\n  //   path: '/liqlist',\n  //   name: 'liqlist',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/LiqList/index.vue')\n  // },\n  { path: '/:catchAll(.*)', redirect: '/app' }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    txList: any\n  }\n\nexport const pendingtx = defineStore(\n  'pendingtx',\n  () => {\n    const state = reactive<Basic>({\n      txList: []\n    })\n    return {\n      state\n    }\n  }\n)\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    reserveList: any,\n    onlineReserveList: any\n  }\n\nexport const reserve = defineStore(\n  'reserve',\n  () => {\n    const state = reactive<Basic>({\n      reserveList: [],\n      onlineReserveList: []\n    })\n    const getList = () => {\n      return state.reserveList\n    }\n    return {\n      getList,\n      state\n    }\n  }\n)\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    sliderList: any\n  }\n\nexport const profit = defineStore(\n  'profit',\n  () => {\n    const state = reactive<Basic>({\n      sliderList: []\n    })\n    return {\n      state\n    }\n  }\n)\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    riskLevel: any,\n    autoRepayLtv: any,\n    change: any,\n    reserveChange: any,\n    sliderChange: any,\n    balanceList: any[]\n  }\n\nexport const account = defineStore(\n  'account',\n  () => {\n    const state = reactive<Basic>({\n      change: 0,\n      reserveChange: 0,\n      sliderChange: 0,\n      riskLevel: 1,\n      autoRepayLtv: 0,\n      balanceList: []\n    })\n    return {\n      state\n    }\n  }\n)\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    ogscore: any,\n    nxscore: any,\n    bullscore: any,\n    bullLockscore: any,\n    bullUnlockscore: any,\n  }\n\nexport const ogscore = defineStore(\n  'ogscore',\n  () => {\n    const state = reactive<Basic>({\n      ogscore: 0,\n      nxscore: 0,\n      bullscore: 0,\n      bullLockscore: 0,\n      bullUnlockscore: 0\n    })\n    return {\n      state\n    }\n  }\n)\n","import { defineStore } from 'pinia'\nimport { reactive, ref } from 'vue'\ninterface Basic {\n    allaccounts: any\n  }\n\nexport const allaccounts = defineStore(\n  'allaccounts',\n  () => {\n    const state = reactive<Basic>({\n      allaccounts: new Map()\n    })\n    return {\n      state\n    }\n  }\n)\n","import { pendingtx } from './pendingtx'\nimport { reserve } from './reserve'\nimport { profit } from './profit'\nimport { account } from './account'\nimport { ogscore } from './ogscore'\nimport { allaccounts } from './allaccounts'\n\nexport interface IAppStore {\n  profit: ReturnType<typeof profit>\n  reserve: ReturnType<typeof reserve>\n  account: ReturnType<typeof account>\n  pendingtx: ReturnType<typeof pendingtx>\n  ogscore: ReturnType<typeof ogscore>\n  allaccounts: ReturnType<typeof allaccounts>\n}\nconst appStore: IAppStore = {} as IAppStore\n\n/**\n * 注册app状态库\n */\nexport const registerStore = () => {\n  appStore.profit = profit()\n  appStore.reserve = reserve()\n  appStore.account = account()\n  appStore.pendingtx = pendingtx()\n  appStore.ogscore = ogscore()\n  appStore.allaccounts = allaccounts()\n}\n\nexport default appStore\n","/* eslint-disable */\nimport { struct, u32, u8 } from '@solana/buffer-layout'\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils'\nimport {\n  AccountInfo,\n  AccountMeta,\n  Commitment,\n  Connection,\n  PublicKey,\n  Signer,\n  SystemProgram,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction\n} from '@solana/web3.js'\nimport { Buffer } from 'buffer'\nimport { Address, BN } from '@coral-xyz/anchor'\nimport BigNumber from 'bignumber.js'\nimport { Decimal } from 'decimal.js'\nimport { Amount } from './types'\n\nexport function wrappedI80F48toBigNumber ({ value }: { value: BN }, scaleDecimal: number = 0): BigNumber {\n  if (!value) return new BigNumber(0)\n\n  const numbers = new Decimal(`${value.isNeg() ? '-' : ''}0b${value.abs().toString(2)}p-48`).dividedBy(\n    10 ** scaleDecimal\n  )\n  return new BigNumber(numbers.toString())\n}\n\n/**\n   * Converts a ui representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function toNumber (amount: Amount): number {\n  let amt: number\n  if (typeof amount === 'number') {\n    amt = amount\n  } else if (typeof amount === 'string') {\n    amt = Number(amount)\n  } else {\n    amt = amount.toNumber()\n  }\n  return amt\n}\n\n/**\n   * Converts a ui representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function toBigNumber (amount: Amount | BN): BigNumber {\n  let amt: BigNumber\n  if (amount instanceof BigNumber) {\n    amt = amount\n  } else {\n    amt = new BigNumber(amount.toString())\n  }\n  return amt\n}\n\n/**\n   * Converts a UI representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function uiToNative (amount: Amount, decimals: number): BN {\n  const amt = toBigNumber(amount)\n  return new BN(amt.times(10 ** decimals).toFixed(0, BigNumber.ROUND_FLOOR))\n}\n\nexport function uiToNativeBigNumber (amount: Amount, decimals: number): BigNumber {\n  const amt = toBigNumber(amount)\n  return amt.times(10 ** decimals)\n}\n\n/**\n   * Converts a native representation of a token amount into its UI value as `number`, given the specified mint decimal amount.\n   */\nexport function nativeToUi (amount: Amount | BN, decimals: number): number {\n  const amt = toBigNumber(amount)\n  return amt.div(10 ** decimals).toNumber()\n}\n\n// shorten the checksummed version of the input address to have 4 characters at start and end\nexport function shortenAddress (pubkey: Address, chars = 4): string {\n  const pubkeyStr = pubkey.toString()\n  return `${pubkeyStr.slice(0, chars)}...${pubkeyStr.slice(-chars)}`\n}\n\n/** Information about a multisig */\nexport interface Multisig {\n    /** Address of the multisig */\n    address: PublicKey;\n    /** Number of signers required */\n    m: number;\n    /** Number of possible signers, corresponds to the number of `signers` that are valid */\n    n: number;\n    /** Is this mint initialized */\n    isInitialized: boolean;\n    /** Full set of signers, of which `n` are valid */\n    signer1: PublicKey;\n    signer2: PublicKey;\n    signer3: PublicKey;\n    signer4: PublicKey;\n    signer5: PublicKey;\n    signer6: PublicKey;\n    signer7: PublicKey;\n    signer8: PublicKey;\n    signer9: PublicKey;\n    signer10: PublicKey;\n    signer11: PublicKey;\n  }\n\n/** Multisig as stored by the program */\nexport type RawMultisig = Omit<Multisig, 'address'>;\n\n/** Buffer layout for de/serializing a multisig */\nexport const MultisigLayout = struct<RawMultisig>([\n  u8('m'),\n  u8('n'),\n  bool('isInitialized'),\n  publicKey('signer1'),\n  publicKey('signer2'),\n  publicKey('signer3'),\n  publicKey('signer4'),\n  publicKey('signer5'),\n  publicKey('signer6'),\n  publicKey('signer7'),\n  publicKey('signer8'),\n  publicKey('signer9'),\n  publicKey('signer10'),\n  publicKey('signer11')\n])\n\n/** Byte length of a multisig */\nexport const MULTISIG_SIZE = MultisigLayout.span\n\nexport enum SplAccountType {\n    Uninitialized,\n    Mint,\n    Account,\n  }\n\nexport const ACCOUNT_TYPE_SIZE = 1\n\n/** Base class for errors */\nexport abstract class TokenError extends Error {\n  constructor (message?: string) {\n    super(message)\n  }\n}\n\n/** Thrown if an account is not found at the expected address */\nexport class TokenAccountNotFoundError extends TokenError {\n    name = 'TokenAccountNotFoundError';\n}\n\n/** Thrown if a program state account is not a valid Account */\nexport class TokenInvalidAccountError extends TokenError {\n    name = 'TokenInvalidAccountError';\n}\n\n/** Thrown if a program state account is not owned by the expected token program */\nexport class TokenInvalidAccountOwnerError extends TokenError {\n    name = 'TokenInvalidAccountOwnerError';\n}\n\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nexport class TokenInvalidAccountSizeError extends TokenError {\n    name = 'TokenInvalidAccountSizeError';\n}\n\n/** Thrown if the mint of a token account doesn't match the expected mint */\nexport class TokenInvalidMintError extends TokenError {\n    name = 'TokenInvalidMintError';\n}\n\n/** Thrown if the owner of a token account doesn't match the expected owner */\nexport class TokenInvalidOwnerError extends TokenError {\n    name = 'TokenInvalidOwnerError';\n}\n\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nexport class TokenOwnerOffCurveError extends TokenError {\n    name = 'TokenOwnerOffCurveError';\n}\n\n/** Thrown if an instruction's program is invalid */\nexport class TokenInvalidInstructionProgramError extends TokenError {\n    name = 'TokenInvalidInstructionProgramError';\n}\n\n/** Thrown if an instruction's keys are invalid */\nexport class TokenInvalidInstructionKeysError extends TokenError {\n    name = 'TokenInvalidInstructionKeysError';\n}\n\n/** Thrown if an instruction's data is invalid */\nexport class TokenInvalidInstructionDataError extends TokenError {\n    name = 'TokenInvalidInstructionDataError';\n}\n\n/** Thrown if an instruction's type is invalid */\nexport class TokenInvalidInstructionTypeError extends TokenError {\n    name = 'TokenInvalidInstructionTypeError';\n}\n\n/** Thrown if the program does not support the desired instruction */\nexport class TokenUnsupportedInstructionError extends TokenError {\n    name = 'TokenUnsupportedInstructionError';\n}\n\n/** Information about a token account */\nexport interface Account {\n    /** Address of the account */\n    address: PublicKey;\n    /** Mint associated with the account */\n    mint: PublicKey;\n    /** Owner of the account */\n    owner: PublicKey;\n    /** Number of tokens the account holds */\n    amount: bigint;\n    /** Authority that can transfer tokens from the account */\n    delegate: PublicKey | null;\n    /** Number of tokens the delegate is authorized to transfer */\n    delegatedAmount: bigint;\n    /** True if the account is initialized */\n    isInitialized: boolean;\n    /** True if the account is frozen */\n    isFrozen: boolean;\n    /** True if the account is a native token account */\n    isNative: boolean;\n    /**\n     * If the account is a native token account, it must be rent-exempt. The rent-exempt reserve is the amount that must\n     * remain in the balance until the account is closed.\n     */\n    rentExemptReserve: bigint | null;\n    /** Optional authority to close the account */\n    closeAuthority: PublicKey | null;\n    tlvData: Buffer;\n  }\n\n/** Token account state as stored by the program */\nexport enum AccountState {\n    Uninitialized = 0,\n    Initialized = 1,\n    Frozen = 2,\n  }\n\n/** Token account as stored by the program */\nexport interface RawAccount {\n    mint: PublicKey;\n    owner: PublicKey;\n    amount: bigint;\n    delegateOption: 1 | 0;\n    delegate: PublicKey;\n    state: AccountState;\n    isNativeOption: 1 | 0;\n    isNative: bigint;\n    delegatedAmount: bigint;\n    closeAuthorityOption: 1 | 0;\n    closeAuthority: PublicKey;\n  }\n\n/** Buffer layout for de/serializing a token account */\nexport const AccountLayout = struct<RawAccount>([\n  publicKey('mint'),\n  publicKey('owner'),\n  u64('amount'),\n  u32('delegateOption'),\n  publicKey('delegate'),\n  u8('state'),\n  u32('isNativeOption'),\n  u64('isNative'),\n  u64('delegatedAmount'),\n  u32('closeAuthorityOption'),\n  publicKey('closeAuthority')\n])\n\n/** Byte length of a token account */\nexport const ACCOUNT_SIZE = AccountLayout.span\n\nexport const NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112')\n\n/**\n   * Retrieve information about a token account\n   *\n   * @param connection Connection to use\n   * @param address    Token account\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Token account information\n   */\nexport async function getAccount (\n  connection: Connection,\n  address: PublicKey,\n  commitment?: Commitment,\n  programId = TOKEN_PROGRAM_ID\n): Promise<Account> {\n  const info = await connection.getAccountInfo(address, commitment)\n  return unpackAccount(address, info, programId)\n}\n\nexport const TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA')\n\n/**\n   * Retrieve information about multiple token accounts in a single RPC call\n   *\n   * @param connection Connection to use\n   * @param addresses  Token accounts\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Token account information\n   */\nexport async function getMultipleAccounts (\n  connection: Connection,\n  addresses: PublicKey[],\n  commitment?: Commitment,\n  programId = TOKEN_PROGRAM_ID\n): Promise<Account[]> {\n  const infos = await connection.getMultipleAccountsInfo(addresses, commitment)\n  return addresses.map((address, i) =>\n  // @ts-ignore\n    unpackAccount(address, infos[i], programId)\n  )\n}\n\n/** Get the minimum lamport balance for a base token account to be rent exempt\n   *\n   * @param connection Connection to use\n   * @param commitment Desired level of commitment for querying the state\n   *\n   * @return Amount of lamports required\n   */\nexport async function getMinimumBalanceForRentExemptAccount (\n  connection: Connection,\n  commitment?: Commitment\n): Promise<number> {\n  return await getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment)\n}\n\nexport enum ExtensionType {\n    Uninitialized,\n    TransferFeeConfig,\n    TransferFeeAmount,\n    MintCloseAuthority,\n    ConfidentialTransferMint,\n    ConfidentialTransferAccount,\n    DefaultAccountState,\n    ImmutableOwner,\n    MemoTransfer,\n    NonTransferable,\n    InterestBearingMint,\n  }\n\nexport function getAccountLen (extensionTypes: ExtensionType[]): number {\n  return getLen(extensionTypes, ACCOUNT_SIZE)\n}\n\nexport const TYPE_SIZE = 2\nexport const LENGTH_SIZE = 2\n\nfunction getLen (extensionTypes: ExtensionType[], baseSize: number): number {\n  if (extensionTypes.length === 0) {\n    return baseSize\n  } else {\n    const accountLength = ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE\n    if (accountLength === MULTISIG_SIZE) {\n      return accountLength + TYPE_SIZE\n    } else {\n      return accountLength\n    }\n  }\n}\n\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n   *\n   * @param connection Connection to use\n   * @param extensions\n   * @param commitment Desired level of commitment for querying the state\n   *\n   * @return Amount of lamports required\n   */\nexport async function getMinimumBalanceForRentExemptAccountWithExtensions (\n  connection: Connection,\n  extensions: ExtensionType[],\n  commitment?: Commitment\n): Promise<number> {\n  const accountLen = getAccountLen(extensions)\n  return await connection.getMinimumBalanceForRentExemption(accountLen, commitment)\n}\n\n/**\n   * Unpack a token account\n   *\n   * @param address   Token account\n   * @param info      Token account data\n   * @param programId SPL Token program account\n   *\n   * @return Unpacked token account\n   */\nexport function unpackAccount (\n  address: PublicKey,\n  info: AccountInfo<Buffer> | null,\n  programId = TOKEN_PROGRAM_ID\n): Account {\n  if (!info) throw new TokenAccountNotFoundError()\n  if (!info.owner.equals(programId)) throw new TokenInvalidAccountOwnerError()\n  if (info.data.length < ACCOUNT_SIZE) throw new TokenInvalidAccountSizeError()\n\n  const rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE))\n  let tlvData = Buffer.alloc(0)\n  if (info.data.length > ACCOUNT_SIZE) {\n    if (info.data.length === MULTISIG_SIZE) throw new TokenInvalidAccountSizeError()\n    if (info.data[ACCOUNT_SIZE] != SplAccountType.Account) throw new TokenInvalidAccountError()\n    tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE)\n  }\n\n  return {\n    address,\n    mint: rawAccount.mint,\n    owner: rawAccount.owner,\n    amount: rawAccount.amount,\n    delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n    delegatedAmount: rawAccount.delegatedAmount,\n    isInitialized: rawAccount.state !== AccountState.Uninitialized,\n    isFrozen: rawAccount.state === AccountState.Frozen,\n    isNative: !!rawAccount.isNativeOption,\n    rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n    closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n    tlvData\n  }\n}\n\n/** Address of the SPL Associated Token Account program */\nexport const ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL')\n\n/**\n   * Get the address of the associated token account for a given mint and owner\n   *\n   * @param mint                     Token mint account\n   * @param owner                    Owner of the new account\n   * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Address of the associated token account\n   */\nexport function getAssociatedTokenAddressSync (\n  mint: PublicKey,\n  owner: PublicKey,\n  allowOwnerOffCurve = false,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID\n): PublicKey {\n  if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer())) throw new TokenOwnerOffCurveError()\n\n  const [address] = PublicKey.findProgramAddressSync(\n    [owner.toBuffer(), programId.toBuffer(), mint.toBuffer()],\n    associatedTokenProgramId\n  )\n\n  return address\n}\n\n/**\n   * Construct an AssociatedTokenAccount instruction\n   *\n   * @param payer                    Payer of the initialization fees\n   * @param associatedToken          New associated token account\n   * @param owner                    Owner of the new account\n   * @param mint                     Token mint account\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createAssociatedTokenAccountInstruction (\n  payer: PublicKey,\n  associatedToken: PublicKey,\n  owner: PublicKey,\n  mint: PublicKey,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedToken, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n    { pubkey: programId, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false }\n  ]\n\n  return new TransactionInstruction({\n    keys,\n    programId: associatedTokenProgramId,\n    data: Buffer.alloc(0)\n  })\n}\n\n/**\n   * Construct a CreateAssociatedTokenAccountIdempotent instruction\n   *\n   * @param payer                    Payer of the initialization fees\n   * @param associatedToken          New associated token account\n   * @param owner                    Owner of the new account\n   * @param mint                     Token mint account\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createAssociatedTokenAccountIdempotentInstruction (\n  payer: PublicKey,\n  associatedToken: PublicKey,\n  owner: PublicKey,\n  mint: PublicKey,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  return buildAssociatedTokenAccountInstruction(\n    payer,\n    associatedToken,\n    owner,\n    mint,\n    Buffer.from([1]),\n    programId,\n    associatedTokenProgramId\n  )\n}\n\n/** TODO: docs */\nexport interface SyncNativeInstructionData {\n    instruction: TokenInstruction.SyncNative;\n  }\n\n/** TODO: docs */\nexport const syncNativeInstructionData = struct<SyncNativeInstructionData>([u8('instruction')])\n\n/**\n   * Construct a SyncNative instruction\n   *\n   * @param account   Native account to sync lamports from\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createSyncNativeInstruction (account: PublicKey, programId = TOKEN_PROGRAM_ID): TransactionInstruction {\n  const keys = [{ pubkey: account, isSigner: false, isWritable: true }]\n\n  const data = Buffer.alloc(syncNativeInstructionData.span)\n  syncNativeInstructionData.encode({ instruction: TokenInstruction.SyncNative }, data)\n\n  return new TransactionInstruction({ keys, programId, data })\n}\n\n/** TODO: docs */\nexport interface CloseAccountInstructionData {\n    instruction: TokenInstruction.CloseAccount;\n  }\n\n/** TODO: docs */\nexport const closeAccountInstructionData = struct<CloseAccountInstructionData>([u8('instruction')])\n\n/**\n   * Construct a CloseAccount instruction\n   *\n   * @param account      Account to close\n   * @param destination  Account to receive the remaining balance of the closed account\n   * @param authority    Account close authority\n   * @param multiSigners Signing accounts if `authority` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createCloseAccountInstruction (\n  account: PublicKey,\n  destination: PublicKey,\n  authority: PublicKey,\n  multiSigners: Signer[] = [],\n  programId = TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  const keys = addSigners(\n    [\n      { pubkey: account, isSigner: false, isWritable: true },\n      { pubkey: destination, isSigner: false, isWritable: true }\n    ],\n    authority,\n    multiSigners\n  )\n\n  const data = Buffer.alloc(closeAccountInstructionData.span)\n  closeAccountInstructionData.encode({ instruction: TokenInstruction.CloseAccount }, data)\n\n  return new TransactionInstruction({ keys, programId, data })\n}\n\nfunction buildAssociatedTokenAccountInstruction (\n  payer: PublicKey,\n  associatedToken: PublicKey,\n  owner: PublicKey,\n  mint: PublicKey,\n  instructionData: Buffer,\n  programId = TOKEN_PROGRAM_ID,\n  associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedToken, isSigner: false, isWritable: true },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n    { pubkey: programId, isSigner: false, isWritable: false }\n  ]\n\n  return new TransactionInstruction({\n    keys,\n    programId: associatedTokenProgramId,\n    data: instructionData\n  })\n}\n\n/** TODO: docs */\nexport interface TransferCheckedInstructionData {\n    instruction: TokenInstruction.TransferChecked;\n    amount: bigint;\n    decimals: number;\n  }\n\n/** TODO: docs */\nexport const transferCheckedInstructionData = struct<TransferCheckedInstructionData>([\n  u8('instruction'),\n  u64('amount'),\n  u8('decimals')\n])\n\n/**\n   * Construct a TransferChecked instruction\n   *\n   * @param source       Source account\n   * @param mint         Mint account\n   * @param destination  Destination account\n   * @param owner        Owner of the source account\n   * @param amount       Number of tokens to transfer\n   * @param decimals     Number of decimals in transfer amount\n   * @param multiSigners Signing accounts if `owner` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createTransferCheckedInstruction (\n  source: PublicKey,\n  mint: PublicKey,\n  destination: PublicKey,\n  owner: PublicKey,\n  amount: number | bigint,\n  decimals: number,\n  multiSigners: Signer[] = [],\n  programId = TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  const keys = addSigners(\n    [\n      { pubkey: source, isSigner: false, isWritable: true },\n      { pubkey: mint, isSigner: false, isWritable: false },\n      { pubkey: destination, isSigner: false, isWritable: true }\n    ],\n    owner,\n    multiSigners\n  )\n\n  const data = Buffer.alloc(transferCheckedInstructionData.span)\n  transferCheckedInstructionData.encode(\n    {\n      instruction: TokenInstruction.TransferChecked,\n      amount: BigInt(amount),\n      decimals\n    },\n    data\n  )\n\n  return new TransactionInstruction({ keys, programId, data })\n}\n\n/** Instructions defined by the program */\nexport enum TokenInstruction {\n    InitializeAccount = 1,\n    TransferChecked = 12,\n    CloseAccount = 9,\n    SyncNative = 17,\n  }\n\n/** TODO: docs */\nexport interface InitializeAccountInstructionData {\n    instruction: TokenInstruction.InitializeAccount;\n  }\n\nexport const initializeAccountInstructionData = struct<InitializeAccountInstructionData>([u8('instruction')])\n\n/**\n   * Construct an InitializeAccount instruction\n   *\n   * @param account   New token account\n   * @param mint      Mint account\n   * @param owner     Owner of the new account\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createInitializeAccountInstruction (\n  account: PublicKey,\n  mint: PublicKey,\n  owner: PublicKey,\n  programId = TOKEN_PROGRAM_ID\n): TransactionInstruction {\n  const keys = [\n    { pubkey: account, isSigner: false, isWritable: true },\n    { pubkey: mint, isSigner: false, isWritable: false },\n    { pubkey: owner, isSigner: false, isWritable: false },\n    { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false }\n  ]\n\n  const data = Buffer.alloc(initializeAccountInstructionData.span)\n  initializeAccountInstructionData.encode({ instruction: TokenInstruction.InitializeAccount }, data)\n\n  return new TransactionInstruction({ keys, programId, data })\n}\n\n/** @internal */\nexport function addSigners (keys: AccountMeta[], ownerOrAuthority: PublicKey, multiSigners: Signer[]): AccountMeta[] {\n  if (multiSigners.length) {\n    keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false })\n    for (const signer of multiSigners) {\n      keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      })\n    }\n  } else {\n    keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false })\n  }\n  return keys\n}\n\nexport interface Mint {\n    /** Address of the mint */\n    address: PublicKey;\n    /**\n     * Optional authority used to mint new tokens. The mint authority may only be provided during mint creation.\n     * If no mint authority is present then the mint has a fixed supply and no further tokens may be minted.\n     */\n    mintAuthority: PublicKey | null;\n    /** Total supply of tokens */\n    supply: bigint;\n    /** Number of base 10 digits to the right of the decimal place */\n    decimals: number;\n    /** Is this mint initialized */\n    isInitialized: boolean;\n    /** Optional authority to freeze token accounts */\n    freezeAuthority: PublicKey | null;\n  }\n\n/** Mint as stored by the program */\nexport interface RawMint {\n    mintAuthorityOption: 1 | 0;\n    mintAuthority: PublicKey;\n    supply: bigint;\n    decimals: number;\n    isInitialized: boolean;\n    freezeAuthorityOption: 1 | 0;\n    freezeAuthority: PublicKey;\n  }\n\n/** Buffer layout for de/serializing a mint */\nexport const MintLayout = struct<RawMint>([\n  u32('mintAuthorityOption'),\n  publicKey('mintAuthority'),\n  u64('supply'),\n  u8('decimals'),\n  bool('isInitialized'),\n  u32('freezeAuthorityOption'),\n  publicKey('freezeAuthority')\n])\n\n/** Byte length of a mint */\nexport const MINT_SIZE = MintLayout.span\n\n/**\n   * Retrieve information about a mint\n   *\n   * @param connection Connection to use\n   * @param address    Mint account\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Mint information\n   */\nexport async function getMint (\n  connection: Connection,\n  address: PublicKey,\n  commitment?: Commitment,\n  programId = TOKEN_PROGRAM_ID\n): Promise<Mint> {\n  const info = await connection.getAccountInfo(address, commitment)\n  if (!info) throw new TokenAccountNotFoundError()\n  if (!info.owner.equals(programId)) throw new TokenInvalidAccountOwnerError()\n  if (info.data.length != MINT_SIZE) throw new TokenInvalidAccountSizeError()\n\n  const rawMint = MintLayout.decode(info.data)\n\n  return {\n    address,\n    mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n    supply: rawMint.supply,\n    decimals: rawMint.decimals,\n    isInitialized: rawMint.isInitialized,\n    freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null\n  }\n}\n\nexport const MEMO_PROGRAM_ID: PublicKey = new PublicKey('MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr')\n\n/**\n   * Creates and returns an instruction which validates a string of UTF-8\n   * encoded characters and verifies that any accounts provided are signers of\n   * the transaction.  The program also logs the memo, as well as any verified\n   * signer addresses, to the transaction log, so that anyone can easily observe\n   * memos and know they were approved by zero or more addresses by inspecting\n   * the transaction log from a trusted provider.\n   *\n   * Public keys passed in via the signerPubkeys will identify Signers which\n   * must subsequently sign the Transaction including the returned\n   * TransactionInstruction in order for the transaction to be valid.\n   *\n   * @param memo The UTF-8 encoded memo string to validate\n   * @param signerPubkeys An array of public keys which must sign the\n   *        Transaction including the returned TransactionInstruction in order\n   *        for the transaction to be valid and the memo verification to\n   *        succeed.  null is allowed if there are no signers for the memo\n   *        verification.\n   **/\nexport function createMemoInstruction (memo: string, signerPubkeys?: Array<PublicKey>): TransactionInstruction {\n  const keys =\n      signerPubkeys == null\n        ? []\n        : signerPubkeys.map(function (key) {\n          return { pubkey: key, isSigner: true, isWritable: false }\n        })\n\n  return new TransactionInstruction({\n    keys: keys,\n    programId: MEMO_PROGRAM_ID,\n    data: Buffer.from(memo, 'utf8')\n  })\n}\nexport function formatP(number:any) {\n  if(!number){\n    return '0'\n  }\n  if(Math.abs(number) > 1000000000) {\n    return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n  } else if(Math.abs(number) >= 1000000) {\n    return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n  } else if(Math.abs(number) >= 1000) {\n    return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n  } else if(Math.abs(number) >= 0.01) {\n    let nf = new Intl.NumberFormat('en-US');\n    return nf.format(number); // \"1,234,567,890\"\n  } else {\n    return '< 0.01'\n  }\n}\nexport function formatPU(number:any) {\n  if(Math.abs(number) > 1000000000) {\n    return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n  } else if(Math.abs(number) >= 1000000) {\n    return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n  } else if(Math.abs(number) >= 1000) {\n    return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n  } else if( Math.abs(number) >= 0.1 ) {\n    return Number(number).toFixed(2)\n  } else if( Math.abs(number) > 0 ) {\n    return '< 0.1'\n  } else {\n    return '0'\n  }\n}\nexport function format(number:any,price:any) {\n  if(Math.abs(number) > 1000000000) {\n    return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n  } else if(Math.abs(number) >= 1000000) {\n    return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n  } else if(Math.abs(number) >= 1000) {\n    return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n  } else if(Math.abs(number) >= 0.01) {\n    let nf = new Intl.NumberFormat('en-US');\n    return nf.format(number); // \"1,234,567,890\"\n  } else {\n    if(!price) {\n      let nf = new Intl.NumberFormat('en-US');\n      return nf.format(number); // \"1,234,567,890\"\n    } else {\n      if (Math.abs(number) === 0) {\n        let nf = new Intl.NumberFormat('en-US');\n        return nf.format(number); // \"1,234,567,890\"\n      } else {\n        if (Math.abs(price) > 100000) {\n          return Number(Number(number).toFixed(7))\n        } else if(Math.abs(price) >= 10000) {\n          return Number(Number(number).toFixed(6))\n        } else if(Math.abs(price) >= 1000) {\n          return Number(Number(number).toFixed(5))\n        } else if(Math.abs(price) >= 100) {\n          return Number(Number(number).toFixed(4))\n        } else if(Math.abs(price) >= 10) {\n          return Number(Number(number).toFixed(3))\n        } else if(Math.abs(price) >= 1) {\n          return Number(Number(number).toFixed(2))\n        } else {\n          return '<0.01'\n        }\n      }\n    }\n  }\n}\nexport function formatK(number:any) {\n  let nf = new Intl.NumberFormat('en-US');\n  return nf.format(number); // \"1,234,567,890\"\n}","import { __awaiter, __extends, __generator } from \"tslib\";\n/* eslint-disable */\nimport { struct, u32, u8 } from '@solana/buffer-layout';\nimport { bool, publicKey, u64 } from '@solana/buffer-layout-utils';\nimport { PublicKey, SystemProgram, SYSVAR_RENT_PUBKEY, TransactionInstruction } from '@solana/web3.js';\nimport { Buffer } from 'buffer';\nimport { BN } from '@coral-xyz/anchor';\nimport BigNumber from 'bignumber.js';\nimport { Decimal } from 'decimal.js';\nexport function wrappedI80F48toBigNumber(_a, scaleDecimal) {\n    var value = _a.value;\n    if (scaleDecimal === void 0) { scaleDecimal = 0; }\n    if (!value)\n        return new BigNumber(0);\n    var numbers = new Decimal(\"\".concat(value.isNeg() ? '-' : '', \"0b\").concat(value.abs().toString(2), \"p-48\")).dividedBy(Math.pow(10, scaleDecimal));\n    return new BigNumber(numbers.toString());\n}\n/**\n   * Converts a ui representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function toNumber(amount) {\n    var amt;\n    if (typeof amount === 'number') {\n        amt = amount;\n    }\n    else if (typeof amount === 'string') {\n        amt = Number(amount);\n    }\n    else {\n        amt = amount.toNumber();\n    }\n    return amt;\n}\n/**\n   * Converts a ui representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function toBigNumber(amount) {\n    var amt;\n    if (amount instanceof BigNumber) {\n        amt = amount;\n    }\n    else {\n        amt = new BigNumber(amount.toString());\n    }\n    return amt;\n}\n/**\n   * Converts a UI representation of a token amount into its native value as `BN`, given the specified mint decimal amount (default to 6 for USDC).\n   */\nexport function uiToNative(amount, decimals) {\n    var amt = toBigNumber(amount);\n    return new BN(amt.times(Math.pow(10, decimals)).toFixed(0, BigNumber.ROUND_FLOOR));\n}\nexport function uiToNativeBigNumber(amount, decimals) {\n    var amt = toBigNumber(amount);\n    return amt.times(Math.pow(10, decimals));\n}\n/**\n   * Converts a native representation of a token amount into its UI value as `number`, given the specified mint decimal amount.\n   */\nexport function nativeToUi(amount, decimals) {\n    var amt = toBigNumber(amount);\n    return amt.div(Math.pow(10, decimals)).toNumber();\n}\n// shorten the checksummed version of the input address to have 4 characters at start and end\nexport function shortenAddress(pubkey, chars) {\n    if (chars === void 0) { chars = 4; }\n    var pubkeyStr = pubkey.toString();\n    return \"\".concat(pubkeyStr.slice(0, chars), \"...\").concat(pubkeyStr.slice(-chars));\n}\n/** Buffer layout for de/serializing a multisig */\nexport var MultisigLayout = struct([\n    u8('m'),\n    u8('n'),\n    bool('isInitialized'),\n    publicKey('signer1'),\n    publicKey('signer2'),\n    publicKey('signer3'),\n    publicKey('signer4'),\n    publicKey('signer5'),\n    publicKey('signer6'),\n    publicKey('signer7'),\n    publicKey('signer8'),\n    publicKey('signer9'),\n    publicKey('signer10'),\n    publicKey('signer11')\n]);\n/** Byte length of a multisig */\nexport var MULTISIG_SIZE = MultisigLayout.span;\nexport var SplAccountType;\n(function (SplAccountType) {\n    SplAccountType[SplAccountType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    SplAccountType[SplAccountType[\"Mint\"] = 1] = \"Mint\";\n    SplAccountType[SplAccountType[\"Account\"] = 2] = \"Account\";\n})(SplAccountType || (SplAccountType = {}));\nexport var ACCOUNT_TYPE_SIZE = 1;\n/** Base class for errors */\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(message) {\n        return _super.call(this, message) || this;\n    }\n    return TokenError;\n}(Error));\nexport { TokenError };\n/** Thrown if an account is not found at the expected address */\nvar TokenAccountNotFoundError = /** @class */ (function (_super) {\n    __extends(TokenAccountNotFoundError, _super);\n    function TokenAccountNotFoundError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenAccountNotFoundError'\n        });\n        return _this;\n    }\n    return TokenAccountNotFoundError;\n}(TokenError));\nexport { TokenAccountNotFoundError };\n/** Thrown if a program state account is not a valid Account */\nvar TokenInvalidAccountError = /** @class */ (function (_super) {\n    __extends(TokenInvalidAccountError, _super);\n    function TokenInvalidAccountError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidAccountError'\n        });\n        return _this;\n    }\n    return TokenInvalidAccountError;\n}(TokenError));\nexport { TokenInvalidAccountError };\n/** Thrown if a program state account is not owned by the expected token program */\nvar TokenInvalidAccountOwnerError = /** @class */ (function (_super) {\n    __extends(TokenInvalidAccountOwnerError, _super);\n    function TokenInvalidAccountOwnerError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidAccountOwnerError'\n        });\n        return _this;\n    }\n    return TokenInvalidAccountOwnerError;\n}(TokenError));\nexport { TokenInvalidAccountOwnerError };\n/** Thrown if the byte length of an program state account doesn't match the expected size */\nvar TokenInvalidAccountSizeError = /** @class */ (function (_super) {\n    __extends(TokenInvalidAccountSizeError, _super);\n    function TokenInvalidAccountSizeError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidAccountSizeError'\n        });\n        return _this;\n    }\n    return TokenInvalidAccountSizeError;\n}(TokenError));\nexport { TokenInvalidAccountSizeError };\n/** Thrown if the mint of a token account doesn't match the expected mint */\nvar TokenInvalidMintError = /** @class */ (function (_super) {\n    __extends(TokenInvalidMintError, _super);\n    function TokenInvalidMintError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidMintError'\n        });\n        return _this;\n    }\n    return TokenInvalidMintError;\n}(TokenError));\nexport { TokenInvalidMintError };\n/** Thrown if the owner of a token account doesn't match the expected owner */\nvar TokenInvalidOwnerError = /** @class */ (function (_super) {\n    __extends(TokenInvalidOwnerError, _super);\n    function TokenInvalidOwnerError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidOwnerError'\n        });\n        return _this;\n    }\n    return TokenInvalidOwnerError;\n}(TokenError));\nexport { TokenInvalidOwnerError };\n/** Thrown if the owner of a token account is a PDA (Program Derived Address) */\nvar TokenOwnerOffCurveError = /** @class */ (function (_super) {\n    __extends(TokenOwnerOffCurveError, _super);\n    function TokenOwnerOffCurveError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenOwnerOffCurveError'\n        });\n        return _this;\n    }\n    return TokenOwnerOffCurveError;\n}(TokenError));\nexport { TokenOwnerOffCurveError };\n/** Thrown if an instruction's program is invalid */\nvar TokenInvalidInstructionProgramError = /** @class */ (function (_super) {\n    __extends(TokenInvalidInstructionProgramError, _super);\n    function TokenInvalidInstructionProgramError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidInstructionProgramError'\n        });\n        return _this;\n    }\n    return TokenInvalidInstructionProgramError;\n}(TokenError));\nexport { TokenInvalidInstructionProgramError };\n/** Thrown if an instruction's keys are invalid */\nvar TokenInvalidInstructionKeysError = /** @class */ (function (_super) {\n    __extends(TokenInvalidInstructionKeysError, _super);\n    function TokenInvalidInstructionKeysError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidInstructionKeysError'\n        });\n        return _this;\n    }\n    return TokenInvalidInstructionKeysError;\n}(TokenError));\nexport { TokenInvalidInstructionKeysError };\n/** Thrown if an instruction's data is invalid */\nvar TokenInvalidInstructionDataError = /** @class */ (function (_super) {\n    __extends(TokenInvalidInstructionDataError, _super);\n    function TokenInvalidInstructionDataError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidInstructionDataError'\n        });\n        return _this;\n    }\n    return TokenInvalidInstructionDataError;\n}(TokenError));\nexport { TokenInvalidInstructionDataError };\n/** Thrown if an instruction's type is invalid */\nvar TokenInvalidInstructionTypeError = /** @class */ (function (_super) {\n    __extends(TokenInvalidInstructionTypeError, _super);\n    function TokenInvalidInstructionTypeError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenInvalidInstructionTypeError'\n        });\n        return _this;\n    }\n    return TokenInvalidInstructionTypeError;\n}(TokenError));\nexport { TokenInvalidInstructionTypeError };\n/** Thrown if the program does not support the desired instruction */\nvar TokenUnsupportedInstructionError = /** @class */ (function (_super) {\n    __extends(TokenUnsupportedInstructionError, _super);\n    function TokenUnsupportedInstructionError() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        Object.defineProperty(_this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TokenUnsupportedInstructionError'\n        });\n        return _this;\n    }\n    return TokenUnsupportedInstructionError;\n}(TokenError));\nexport { TokenUnsupportedInstructionError };\n/** Token account state as stored by the program */\nexport var AccountState;\n(function (AccountState) {\n    AccountState[AccountState[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    AccountState[AccountState[\"Initialized\"] = 1] = \"Initialized\";\n    AccountState[AccountState[\"Frozen\"] = 2] = \"Frozen\";\n})(AccountState || (AccountState = {}));\n/** Buffer layout for de/serializing a token account */\nexport var AccountLayout = struct([\n    publicKey('mint'),\n    publicKey('owner'),\n    u64('amount'),\n    u32('delegateOption'),\n    publicKey('delegate'),\n    u8('state'),\n    u32('isNativeOption'),\n    u64('isNative'),\n    u64('delegatedAmount'),\n    u32('closeAuthorityOption'),\n    publicKey('closeAuthority')\n]);\n/** Byte length of a token account */\nexport var ACCOUNT_SIZE = AccountLayout.span;\nexport var NATIVE_MINT = new PublicKey('So11111111111111111111111111111111111111112');\n/**\n   * Retrieve information about a token account\n   *\n   * @param connection Connection to use\n   * @param address    Token account\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Token account information\n   */\nexport function getAccount(connection, address, commitment, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    return __awaiter(this, void 0, Promise, function () {\n        var info;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connection.getAccountInfo(address, commitment)];\n                case 1:\n                    info = _a.sent();\n                    return [2 /*return*/, unpackAccount(address, info, programId)];\n            }\n        });\n    });\n}\nexport var TOKEN_PROGRAM_ID = new PublicKey('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA');\n/**\n   * Retrieve information about multiple token accounts in a single RPC call\n   *\n   * @param connection Connection to use\n   * @param addresses  Token accounts\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Token account information\n   */\nexport function getMultipleAccounts(connection, addresses, commitment, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    return __awaiter(this, void 0, Promise, function () {\n        var infos;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connection.getMultipleAccountsInfo(addresses, commitment)];\n                case 1:\n                    infos = _a.sent();\n                    return [2 /*return*/, addresses.map(function (address, i) {\n                            // @ts-ignore\n                            return unpackAccount(address, infos[i], programId);\n                        })];\n            }\n        });\n    });\n}\n/** Get the minimum lamport balance for a base token account to be rent exempt\n   *\n   * @param connection Connection to use\n   * @param commitment Desired level of commitment for querying the state\n   *\n   * @return Amount of lamports required\n   */\nexport function getMinimumBalanceForRentExemptAccount(connection, commitment) {\n    return __awaiter(this, void 0, Promise, function () {\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, getMinimumBalanceForRentExemptAccountWithExtensions(connection, [], commitment)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\nexport var ExtensionType;\n(function (ExtensionType) {\n    ExtensionType[ExtensionType[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    ExtensionType[ExtensionType[\"TransferFeeConfig\"] = 1] = \"TransferFeeConfig\";\n    ExtensionType[ExtensionType[\"TransferFeeAmount\"] = 2] = \"TransferFeeAmount\";\n    ExtensionType[ExtensionType[\"MintCloseAuthority\"] = 3] = \"MintCloseAuthority\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferMint\"] = 4] = \"ConfidentialTransferMint\";\n    ExtensionType[ExtensionType[\"ConfidentialTransferAccount\"] = 5] = \"ConfidentialTransferAccount\";\n    ExtensionType[ExtensionType[\"DefaultAccountState\"] = 6] = \"DefaultAccountState\";\n    ExtensionType[ExtensionType[\"ImmutableOwner\"] = 7] = \"ImmutableOwner\";\n    ExtensionType[ExtensionType[\"MemoTransfer\"] = 8] = \"MemoTransfer\";\n    ExtensionType[ExtensionType[\"NonTransferable\"] = 9] = \"NonTransferable\";\n    ExtensionType[ExtensionType[\"InterestBearingMint\"] = 10] = \"InterestBearingMint\";\n})(ExtensionType || (ExtensionType = {}));\nexport function getAccountLen(extensionTypes) {\n    return getLen(extensionTypes, ACCOUNT_SIZE);\n}\nexport var TYPE_SIZE = 2;\nexport var LENGTH_SIZE = 2;\nfunction getLen(extensionTypes, baseSize) {\n    if (extensionTypes.length === 0) {\n        return baseSize;\n    }\n    else {\n        var accountLength = ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE;\n        if (accountLength === MULTISIG_SIZE) {\n            return accountLength + TYPE_SIZE;\n        }\n        else {\n            return accountLength;\n        }\n    }\n}\n/** Get the minimum lamport balance for a rent-exempt token account with extensions\n   *\n   * @param connection Connection to use\n   * @param extensions\n   * @param commitment Desired level of commitment for querying the state\n   *\n   * @return Amount of lamports required\n   */\nexport function getMinimumBalanceForRentExemptAccountWithExtensions(connection, extensions, commitment) {\n    return __awaiter(this, void 0, Promise, function () {\n        var accountLen;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    accountLen = getAccountLen(extensions);\n                    return [4 /*yield*/, connection.getMinimumBalanceForRentExemption(accountLen, commitment)];\n                case 1: return [2 /*return*/, _a.sent()];\n            }\n        });\n    });\n}\n/**\n   * Unpack a token account\n   *\n   * @param address   Token account\n   * @param info      Token account data\n   * @param programId SPL Token program account\n   *\n   * @return Unpacked token account\n   */\nexport function unpackAccount(address, info, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    if (!info)\n        throw new TokenAccountNotFoundError();\n    if (!info.owner.equals(programId))\n        throw new TokenInvalidAccountOwnerError();\n    if (info.data.length < ACCOUNT_SIZE)\n        throw new TokenInvalidAccountSizeError();\n    var rawAccount = AccountLayout.decode(info.data.slice(0, ACCOUNT_SIZE));\n    var tlvData = Buffer.alloc(0);\n    if (info.data.length > ACCOUNT_SIZE) {\n        if (info.data.length === MULTISIG_SIZE)\n            throw new TokenInvalidAccountSizeError();\n        if (info.data[ACCOUNT_SIZE] != SplAccountType.Account)\n            throw new TokenInvalidAccountError();\n        tlvData = info.data.slice(ACCOUNT_SIZE + ACCOUNT_TYPE_SIZE);\n    }\n    return {\n        address: address,\n        mint: rawAccount.mint,\n        owner: rawAccount.owner,\n        amount: rawAccount.amount,\n        delegate: rawAccount.delegateOption ? rawAccount.delegate : null,\n        delegatedAmount: rawAccount.delegatedAmount,\n        isInitialized: rawAccount.state !== AccountState.Uninitialized,\n        isFrozen: rawAccount.state === AccountState.Frozen,\n        isNative: !!rawAccount.isNativeOption,\n        rentExemptReserve: rawAccount.isNativeOption ? rawAccount.isNative : null,\n        closeAuthority: rawAccount.closeAuthorityOption ? rawAccount.closeAuthority : null,\n        tlvData: tlvData\n    };\n}\n/** Address of the SPL Associated Token Account program */\nexport var ASSOCIATED_TOKEN_PROGRAM_ID = new PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n/**\n   * Get the address of the associated token account for a given mint and owner\n   *\n   * @param mint                     Token mint account\n   * @param owner                    Owner of the new account\n   * @param allowOwnerOffCurve       Allow the owner account to be a PDA (Program Derived Address)\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Address of the associated token account\n   */\nexport function getAssociatedTokenAddressSync(mint, owner, allowOwnerOffCurve, programId, associatedTokenProgramId) {\n    if (allowOwnerOffCurve === void 0) { allowOwnerOffCurve = false; }\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    if (associatedTokenProgramId === void 0) { associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID; }\n    if (!allowOwnerOffCurve && !PublicKey.isOnCurve(owner.toBuffer()))\n        throw new TokenOwnerOffCurveError();\n    var address = PublicKey.findProgramAddressSync([owner.toBuffer(), programId.toBuffer(), mint.toBuffer()], associatedTokenProgramId)[0];\n    return address;\n}\n/**\n   * Construct an AssociatedTokenAccount instruction\n   *\n   * @param payer                    Payer of the initialization fees\n   * @param associatedToken          New associated token account\n   * @param owner                    Owner of the new account\n   * @param mint                     Token mint account\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, programId, associatedTokenProgramId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    if (associatedTokenProgramId === void 0) { associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID; }\n    var keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false }\n    ];\n    return new TransactionInstruction({\n        keys: keys,\n        programId: associatedTokenProgramId,\n        data: Buffer.alloc(0)\n    });\n}\n/**\n   * Construct a CreateAssociatedTokenAccountIdempotent instruction\n   *\n   * @param payer                    Payer of the initialization fees\n   * @param associatedToken          New associated token account\n   * @param owner                    Owner of the new account\n   * @param mint                     Token mint account\n   * @param programId                SPL Token program account\n   * @param associatedTokenProgramId SPL Associated Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createAssociatedTokenAccountIdempotentInstruction(payer, associatedToken, owner, mint, programId, associatedTokenProgramId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    if (associatedTokenProgramId === void 0) { associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID; }\n    return buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, Buffer.from([1]), programId, associatedTokenProgramId);\n}\n/** TODO: docs */\nexport var syncNativeInstructionData = struct([u8('instruction')]);\n/**\n   * Construct a SyncNative instruction\n   *\n   * @param account   Native account to sync lamports from\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createSyncNativeInstruction(account, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    var keys = [{ pubkey: account, isSigner: false, isWritable: true }];\n    var data = Buffer.alloc(syncNativeInstructionData.span);\n    syncNativeInstructionData.encode({ instruction: TokenInstruction.SyncNative }, data);\n    return new TransactionInstruction({ keys: keys, programId: programId, data: data });\n}\n/** TODO: docs */\nexport var closeAccountInstructionData = struct([u8('instruction')]);\n/**\n   * Construct a CloseAccount instruction\n   *\n   * @param account      Account to close\n   * @param destination  Account to receive the remaining balance of the closed account\n   * @param authority    Account close authority\n   * @param multiSigners Signing accounts if `authority` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createCloseAccountInstruction(account, destination, authority, multiSigners, programId) {\n    if (multiSigners === void 0) { multiSigners = []; }\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    var keys = addSigners([\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: destination, isSigner: false, isWritable: true }\n    ], authority, multiSigners);\n    var data = Buffer.alloc(closeAccountInstructionData.span);\n    closeAccountInstructionData.encode({ instruction: TokenInstruction.CloseAccount }, data);\n    return new TransactionInstruction({ keys: keys, programId: programId, data: data });\n}\nfunction buildAssociatedTokenAccountInstruction(payer, associatedToken, owner, mint, instructionData, programId, associatedTokenProgramId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    if (associatedTokenProgramId === void 0) { associatedTokenProgramId = ASSOCIATED_TOKEN_PROGRAM_ID; }\n    var keys = [\n        { pubkey: payer, isSigner: true, isWritable: true },\n        { pubkey: associatedToken, isSigner: false, isWritable: true },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: SystemProgram.programId, isSigner: false, isWritable: false },\n        { pubkey: programId, isSigner: false, isWritable: false }\n    ];\n    return new TransactionInstruction({\n        keys: keys,\n        programId: associatedTokenProgramId,\n        data: instructionData\n    });\n}\n/** TODO: docs */\nexport var transferCheckedInstructionData = struct([\n    u8('instruction'),\n    u64('amount'),\n    u8('decimals')\n]);\n/**\n   * Construct a TransferChecked instruction\n   *\n   * @param source       Source account\n   * @param mint         Mint account\n   * @param destination  Destination account\n   * @param owner        Owner of the source account\n   * @param amount       Number of tokens to transfer\n   * @param decimals     Number of decimals in transfer amount\n   * @param multiSigners Signing accounts if `owner` is a multisig\n   * @param programId    SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createTransferCheckedInstruction(source, mint, destination, owner, amount, decimals, multiSigners, programId) {\n    if (multiSigners === void 0) { multiSigners = []; }\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    var keys = addSigners([\n        { pubkey: source, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: destination, isSigner: false, isWritable: true }\n    ], owner, multiSigners);\n    var data = Buffer.alloc(transferCheckedInstructionData.span);\n    transferCheckedInstructionData.encode({\n        instruction: TokenInstruction.TransferChecked,\n        amount: BigInt(amount),\n        decimals: decimals\n    }, data);\n    return new TransactionInstruction({ keys: keys, programId: programId, data: data });\n}\n/** Instructions defined by the program */\nexport var TokenInstruction;\n(function (TokenInstruction) {\n    TokenInstruction[TokenInstruction[\"InitializeAccount\"] = 1] = \"InitializeAccount\";\n    TokenInstruction[TokenInstruction[\"TransferChecked\"] = 12] = \"TransferChecked\";\n    TokenInstruction[TokenInstruction[\"CloseAccount\"] = 9] = \"CloseAccount\";\n    TokenInstruction[TokenInstruction[\"SyncNative\"] = 17] = \"SyncNative\";\n})(TokenInstruction || (TokenInstruction = {}));\nexport var initializeAccountInstructionData = struct([u8('instruction')]);\n/**\n   * Construct an InitializeAccount instruction\n   *\n   * @param account   New token account\n   * @param mint      Mint account\n   * @param owner     Owner of the new account\n   * @param programId SPL Token program account\n   *\n   * @return Instruction to add to a transaction\n   */\nexport function createInitializeAccountInstruction(account, mint, owner, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    var keys = [\n        { pubkey: account, isSigner: false, isWritable: true },\n        { pubkey: mint, isSigner: false, isWritable: false },\n        { pubkey: owner, isSigner: false, isWritable: false },\n        { pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false }\n    ];\n    var data = Buffer.alloc(initializeAccountInstructionData.span);\n    initializeAccountInstructionData.encode({ instruction: TokenInstruction.InitializeAccount }, data);\n    return new TransactionInstruction({ keys: keys, programId: programId, data: data });\n}\n/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (var _i = 0, multiSigners_1 = multiSigners; _i < multiSigners_1.length; _i++) {\n            var signer = multiSigners_1[_i];\n            keys.push({\n                pubkey: signer.publicKey,\n                isSigner: true,\n                isWritable: false\n            });\n        }\n    }\n    else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n/** Buffer layout for de/serializing a mint */\nexport var MintLayout = struct([\n    u32('mintAuthorityOption'),\n    publicKey('mintAuthority'),\n    u64('supply'),\n    u8('decimals'),\n    bool('isInitialized'),\n    u32('freezeAuthorityOption'),\n    publicKey('freezeAuthority')\n]);\n/** Byte length of a mint */\nexport var MINT_SIZE = MintLayout.span;\n/**\n   * Retrieve information about a mint\n   *\n   * @param connection Connection to use\n   * @param address    Mint account\n   * @param commitment Desired level of commitment for querying the state\n   * @param programId  SPL Token program account\n   *\n   * @return Mint information\n   */\nexport function getMint(connection, address, commitment, programId) {\n    if (programId === void 0) { programId = TOKEN_PROGRAM_ID; }\n    return __awaiter(this, void 0, Promise, function () {\n        var info, rawMint;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4 /*yield*/, connection.getAccountInfo(address, commitment)];\n                case 1:\n                    info = _a.sent();\n                    if (!info)\n                        throw new TokenAccountNotFoundError();\n                    if (!info.owner.equals(programId))\n                        throw new TokenInvalidAccountOwnerError();\n                    if (info.data.length != MINT_SIZE)\n                        throw new TokenInvalidAccountSizeError();\n                    rawMint = MintLayout.decode(info.data);\n                    return [2 /*return*/, {\n                            address: address,\n                            mintAuthority: rawMint.mintAuthorityOption ? rawMint.mintAuthority : null,\n                            supply: rawMint.supply,\n                            decimals: rawMint.decimals,\n                            isInitialized: rawMint.isInitialized,\n                            freezeAuthority: rawMint.freezeAuthorityOption ? rawMint.freezeAuthority : null\n                        }];\n            }\n        });\n    });\n}\nexport var MEMO_PROGRAM_ID = new PublicKey('MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr');\n/**\n   * Creates and returns an instruction which validates a string of UTF-8\n   * encoded characters and verifies that any accounts provided are signers of\n   * the transaction.  The program also logs the memo, as well as any verified\n   * signer addresses, to the transaction log, so that anyone can easily observe\n   * memos and know they were approved by zero or more addresses by inspecting\n   * the transaction log from a trusted provider.\n   *\n   * Public keys passed in via the signerPubkeys will identify Signers which\n   * must subsequently sign the Transaction including the returned\n   * TransactionInstruction in order for the transaction to be valid.\n   *\n   * @param memo The UTF-8 encoded memo string to validate\n   * @param signerPubkeys An array of public keys which must sign the\n   *        Transaction including the returned TransactionInstruction in order\n   *        for the transaction to be valid and the memo verification to\n   *        succeed.  null is allowed if there are no signers for the memo\n   *        verification.\n   **/\nexport function createMemoInstruction(memo, signerPubkeys) {\n    var keys = signerPubkeys == null\n        ? []\n        : signerPubkeys.map(function (key) {\n            return { pubkey: key, isSigner: true, isWritable: false };\n        });\n    return new TransactionInstruction({\n        keys: keys,\n        programId: MEMO_PROGRAM_ID,\n        data: Buffer.from(memo, 'utf8')\n    });\n}\nexport function formatP(number) {\n    if (!number) {\n        return '0';\n    }\n    if (Math.abs(number) > 1000000000) {\n        return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n    }\n    else if (Math.abs(number) >= 1000000) {\n        return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n    }\n    else if (Math.abs(number) >= 1000) {\n        return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n    }\n    else if (Math.abs(number) >= 0.01) {\n        var nf = new Intl.NumberFormat('en-US');\n        return nf.format(number); // \"1,234,567,890\"\n    }\n    else {\n        return '< 0.01';\n    }\n}\nexport function formatPU(number) {\n    if (Math.abs(number) > 1000000000) {\n        return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n    }\n    else if (Math.abs(number) >= 1000000) {\n        return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n    }\n    else if (Math.abs(number) >= 1000) {\n        return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n    }\n    else if (Math.abs(number) >= 0.1) {\n        return Number(number).toFixed(2);\n    }\n    else if (Math.abs(number) > 0) {\n        return '< 0.1';\n    }\n    else {\n        return '0';\n    }\n}\nexport function format(number, price) {\n    if (Math.abs(number) > 1000000000) {\n        return (number / 1000000000).toFixed(2).replace(/\\.00$/, '') + 'b';\n    }\n    else if (Math.abs(number) >= 1000000) {\n        return (number / 1000000).toFixed(2).replace(/\\.00$/, '') + 'm';\n    }\n    else if (Math.abs(number) >= 1000) {\n        return (number / 1000).toFixed(2).replace(/\\.00$/, '') + 'k';\n    }\n    else if (Math.abs(number) >= 0.01) {\n        var nf = new Intl.NumberFormat('en-US');\n        return nf.format(number); // \"1,234,567,890\"\n    }\n    else {\n        if (!price) {\n            var nf = new Intl.NumberFormat('en-US');\n            return nf.format(number); // \"1,234,567,890\"\n        }\n        else {\n            if (Math.abs(number) === 0) {\n                var nf = new Intl.NumberFormat('en-US');\n                return nf.format(number); // \"1,234,567,890\"\n            }\n            else {\n                if (Math.abs(price) > 100000) {\n                    return Number(Number(number).toFixed(7));\n                }\n                else if (Math.abs(price) >= 10000) {\n                    return Number(Number(number).toFixed(6));\n                }\n                else if (Math.abs(price) >= 1000) {\n                    return Number(Number(number).toFixed(5));\n                }\n                else if (Math.abs(price) >= 100) {\n                    return Number(Number(number).toFixed(4));\n                }\n                else if (Math.abs(price) >= 10) {\n                    return Number(Number(number).toFixed(3));\n                }\n                else if (Math.abs(price) >= 1) {\n                    return Number(Number(number).toFixed(2));\n                }\n                else {\n                    return '<0.01';\n                }\n            }\n        }\n    }\n}\nexport function formatK(number) {\n    var nf = new Intl.NumberFormat('en-US');\n    return nf.format(number); // \"1,234,567,890\"\n}\n","/* eslint-disable */\nimport { Base64 } from 'js-base64';\nimport BigNumber from 'bignumber.js';\nimport Bn from 'bn.js';\nimport numberToBN from 'number-to-bn';\nimport { BN } from \"@project-serum/anchor\";\nimport { Decimal } from \"decimal.js\";\n\nexport function wrappedI80F48toBigNumber(value,scaleDecimal) {\n  debugger\n  if (!value) return new BigNumber(0);\n\n  let numbers = new Decimal(`${value.isNeg() ? \"-\" : \"\"}0b${value.abs().toString(2)}p-48`).dividedBy(\n    10 ** scaleDecimal\n  );\n  return new BigNumber(numbers.toString());\n}\n\n\n\nexport function isValidHex(hex) {\n  return typeof hex === 'string' && /^(0[xX])?([0-9A-Fa-f]{2})*((::[_0-9A-Za-z]+){2})?$/.test(hex);\n}\n\nexport function toStandardHex(hex) {\n  if (!isValidHex(hex)) {\n    throw new Error('input param is not a valid hex string');\n  }\n  // Starcoin hex should not be changed\n  return /^(0[xX])?([0-9A-Fa-f]{2})*((::[_0-9A-Za-z]+){2})$/.test(hex)\n    ? hex\n    : hex.replace(/0[xX]/, '').toLowerCase();\n}\n\nexport function bytesToHex(bytes) {\n  return Buffer.from(bytes).toString('hex');\n}\n\nexport function hexToBytes(hex) {\n  return Buffer.from(hex, 'hex');\n}\n\nexport function reverseHex(hex) {\n  return bytesToHex(hexToBytes(hex).reverse());\n}\n\nexport function integerToHex(integer) {\n  const bn = numberToBN(new BigNumber(integer));\n  if (bn.isZero()) {\n    return '';\n  }\n  const bytes = bn.toTwos(bn.byteLength() * 8).toArray();\n  if (bn.isNeg()) {\n    if (bytes[0] < 128) {\n      bytes.unshift(255);\n    }\n  } else if (bytes[0] >= 128) {\n    bytes.unshift(0);\n  }\n  return bytesToHex(bytes.reverse());\n}\n\nexport function hexToInteger(hex) {\n  const bytes = hexToBytes(hex).reverse();\n  if (bytes.length === 0) {\n    return '0';\n  }\n  const bn = new Bn(bytes).fromTwos(bytes.length * 8);\n  return bn.toString();\n}\n\nexport function stringToHex(string) {\n  return Buffer.from(string).toString('hex');\n}\n\nexport function hexToString(hex) {\n  return Buffer.from(hex, 'hex').toString();\n}\n\nexport function integerToDecimal(integer, unit) {\n  if (new BigNumber(integer).isNaN()) {\n    return null;\n  }\n  return new BigNumber(integer).shiftedBy(-unit).toString(10);\n}\n\nexport function decimalToInteger(decimal, unit) {\n  if (new BigNumber(decimal).isNaN()) {\n    return null;\n  }\n  return new BigNumber(decimal)\n    .shiftedBy(unit)\n    .dp(0)\n    .toFixed();\n}\n\nexport function objectToBase64(object) {\n  return Base64.encodeURI(JSON.stringify(object));\n}\n\nexport function base64ToObject(base64, defaultValue) {\n  try {\n    return JSON.parse(Base64.decode(base64));\n  } catch (error) {\n    if (defaultValue === undefined) {\n      throw error;\n    }\n    return defaultValue;\n  }\n}\n","/* eslint-disable */\n// import { readBigInt64LE, readBigUInt64LE } from \"./readBig\";\nimport { PublicKey } from '@solana/web3.js'\nimport { Buffer } from 'buffer'\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/errors.js#L758\nconst ERR_BUFFER_OUT_OF_BOUNDS = () => new Error('Attempt to access memory outside buffer bounds')\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/errors.js#L968\nconst ERR_INVALID_ARG_TYPE = (name: string, expected: string, actual: any) =>\n  new Error(`The \"${name}\" argument must be of type ${expected}. Received ${actual}`)\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/errors.js#L1262\nconst ERR_OUT_OF_RANGE = (str: string, range: string, received: number) =>\n  new Error(`The value of \"${str} is out of range. It must be ${range}. Received ${received}`)\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/validators.js#L127-L130\nfunction validateNumber (value: any, name: string) {\n  if (typeof value !== 'number') throw ERR_INVALID_ARG_TYPE(name, 'number', value)\n}\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/buffer.js#L68-L80\nfunction boundsError (value: number, length: number) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, 'offset')\n    throw ERR_OUT_OF_RANGE('offset', 'an integer', value)\n  }\n\n  if (length < 0) throw ERR_BUFFER_OUT_OF_BOUNDS()\n\n  throw ERR_OUT_OF_RANGE('offset', `>= 0 and <= ${length}`, value)\n}\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/buffer.js#L129-L145\nexport function readBigInt64LE (buffer: Buffer, offset = 0): bigint {\n  validateNumber(offset, 'offset')\n  const first = buffer[offset]\n  const last = buffer[offset + 7]\n  if (first === undefined || last === undefined) boundsError(offset, buffer.length - 8)\n  // tslint:disable-next-line:no-bitwise\n  const val = buffer[offset + 4] + buffer[offset + 5] * 2 ** 8 + buffer[offset + 6] * 2 ** 16 + (last << 24) // Overflow\n  return (\n    (BigInt(val) << BigInt(32)) + // tslint:disable-line:no-bitwise\n    BigInt(first + buffer[++offset] * 2 ** 8 + buffer[++offset] * 2 ** 16 + buffer[++offset] * 2 ** 24)\n  )\n}\n\n// https://github.com/nodejs/node/blob/v14.17.0/lib/internal/buffer.js#L89-L107\nexport function readBigUInt64LE (buffer: Buffer, offset = 0): bigint {\n  validateNumber(offset, 'offset')\n  const first = buffer[offset]\n  const last = buffer[offset + 7]\n  if (first === undefined || last === undefined) boundsError(offset, buffer.length - 8)\n\n  const lo = first + buffer[++offset] * 2 ** 8 + buffer[++offset] * 2 ** 16 + buffer[++offset] * 2 ** 24\n\n  const hi = buffer[++offset] + buffer[++offset] * 2 ** 8 + buffer[++offset] * 2 ** 16 + last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32)) // tslint:disable-line:no-bitwise\n}\n\n/** Number of slots that can pass before a publisher's price is no longer included in the aggregate. */\nexport const MAX_SLOT_DIFFERENCE = 25\nconst empty32Buffer = Buffer.alloc(32)\nconst PKorNull = (data: Buffer) => (data.equals(empty32Buffer) ? null : new PublicKey(data))\n\nexport interface Price {\n  priceComponent: bigint;\n  price: number;\n  confidenceComponent: bigint;\n  confidence: number;\n  status: PriceStatus;\n  corporateAction: CorpAction;\n  publishSlot: number;\n}\n\nexport enum PriceStatus {\n  Unknown,\n  Trading,\n  Halted,\n  Auction,\n  Ignored,\n}\n\nexport enum CorpAction {\n  NoCorpAct,\n}\n\nconst parsePriceInfo = (data: Buffer, exponent: number): Price => {\n  // aggregate price\n  const priceComponent = readBigInt64LE(data, 0)\n  const price = Number(priceComponent) * 10 ** exponent\n  // aggregate confidence\n  const confidenceComponent = readBigUInt64LE(data, 8)\n  const confidence = Number(confidenceComponent) * 10 ** exponent\n  // aggregate status\n  const status: PriceStatus = data.readUInt32LE(16)\n  // aggregate corporate action\n  const corporateAction: CorpAction = data.readUInt32LE(20)\n  // aggregate publish slot. It is converted to number to be consistent with Solana's library interface (Slot there is number)\n  const publishSlot = Number(readBigUInt64LE(data, 24))\n  return {\n    priceComponent,\n    price,\n    confidenceComponent,\n    confidence,\n    status,\n    corporateAction,\n    publishSlot\n  }\n}\n\nexport interface PriceData extends Base {\n  priceType: PriceType;\n  exponent: number;\n  numComponentPrices: number;\n  numQuoters: number;\n  lastSlot: bigint;\n  validSlot: bigint;\n  emaPrice: Ema;\n  emaConfidence: Ema;\n  timestamp: bigint;\n  minPublishers: number;\n  drv2: number;\n  drv3: number;\n  drv4: number;\n  productAccountKey: PublicKey;\n  nextPriceAccountKey: PublicKey | null;\n  previousSlot: bigint;\n  previousPriceComponent: bigint;\n  previousPrice: number;\n  previousConfidenceComponent: bigint;\n  previousConfidence: number;\n  previousTimestamp: bigint;\n  priceComponents: PriceComponent[];\n  aggregate: Price;\n  // The current price and confidence and status. The typical use of this interface is to consume these three fields.\n  // If undefined, Pyth does not currently have price information for this product. This condition can\n  // happen for various reasons (e.g., US equity market is closed, or insufficient publishers), and your\n  // application should handle it gracefully. Note that other raw price information fields (such as\n  // aggregate.price) may be defined even if this is undefined; you most likely should not use those fields,\n  // as their value can be arbitrary when this is undefined.\n  price: number | undefined;\n  confidence: number | undefined;\n  status: PriceStatus;\n}\n\nexport interface Base {\n  magic: number;\n  version: number;\n  type: AccountType;\n  size: number;\n}\n\nexport enum AccountType {\n  Unknown,\n  Mapping,\n  Product,\n  Price,\n  Test,\n  Permission,\n}\n\nexport enum PriceType {\n  Unknown,\n  Price,\n}\n\n/**\n * valueComponent = numerator / denominator\n * value = valueComponent * 10 ^ exponent (from PriceData)\n */\nexport interface Ema {\n  valueComponent: bigint;\n  value: number;\n  numerator: bigint;\n  denominator: bigint;\n}\n\nexport interface PriceComponent {\n  publisher: PublicKey;\n  aggregate: Price;\n  latest: Price;\n}\n\n// Provide currentSlot when available to allow status to consider the case when price goes stale. It is optional because\n// it requires an extra request to get it when it is not available which is not always efficient.\nexport const parsePriceData = (data: Buffer, currentSlot?: number): PriceData => {\n  // pyth magic number\n  const magic = data.readUInt32LE(0)\n  // program version\n  const version = data.readUInt32LE(4)\n  // account type\n  const type = data.readUInt32LE(8)\n  // price account size\n  const size = data.readUInt32LE(12)\n  // price or calculation type\n  const priceType: PriceType = data.readUInt32LE(16)\n  // price exponent\n  const exponent = data.readInt32LE(20)\n  // number of component prices\n  const numComponentPrices = data.readUInt32LE(24)\n  // number of quoters that make up aggregate\n  const numQuoters = data.readUInt32LE(28)\n  // slot of last valid (not unknown) aggregate price\n  const lastSlot = readBigUInt64LE(data, 32)\n  // valid on-chain slot of aggregate price\n  const validSlot = readBigUInt64LE(data, 40)\n  // exponential moving average price\n  const emaPrice = parseEma(data.slice(48, 72), exponent)\n  // exponential moving average confidence interval\n  const emaConfidence = parseEma(data.slice(72, 96), exponent)\n  // timestamp of the current price\n  const timestamp = readBigInt64LE(data, 96)\n  // minimum number of publishers for status to be TRADING\n  const minPublishers = data.readUInt8(104)\n  // space for future derived values\n  const drv2 = data.readInt8(105)\n  // space for future derived values\n  const drv3 = data.readInt16LE(106)\n  // space for future derived values\n  const drv4 = data.readInt32LE(108)\n  // product id / reference account\n  const productAccountKey = new PublicKey(data.slice(112, 144))\n  // next price account in list\n  const nextPriceAccountKey = PKorNull(data.slice(144, 176))\n  // valid slot of previous update\n  const previousSlot = readBigUInt64LE(data, 176)\n  // aggregate price of previous update\n  const previousPriceComponent = readBigInt64LE(data, 184)\n  const previousPrice = Number(previousPriceComponent) * 10 ** exponent\n  // confidence interval of previous update\n  const previousConfidenceComponent = readBigUInt64LE(data, 192)\n  const previousConfidence = Number(previousConfidenceComponent) * 10 ** exponent\n  // space for future derived values\n  const previousTimestamp = readBigInt64LE(data, 200)\n  const aggregate = parsePriceInfo(data.slice(208, 240), exponent)\n\n  let status = aggregate.status\n\n  if (currentSlot && status === PriceStatus.Trading) {\n    if (currentSlot - aggregate.publishSlot > MAX_SLOT_DIFFERENCE) {\n      status = PriceStatus.Unknown\n    }\n  }\n\n  let price\n  let confidence\n  if (status === PriceStatus.Trading) {\n    price = aggregate.price\n    confidence = aggregate.confidence\n  }\n\n  // price components - up to 32\n  const priceComponents: PriceComponent[] = []\n  let offset = 240\n  while (priceComponents.length < numComponentPrices) {\n    const publisher = new PublicKey(data.slice(offset, offset + 32))\n    offset += 32\n    const componentAggregate = parsePriceInfo(data.slice(offset, offset + 32), exponent)\n    offset += 32\n    const latest = parsePriceInfo(data.slice(offset, offset + 32), exponent)\n    offset += 32\n    priceComponents.push({ publisher, aggregate: componentAggregate, latest })\n  }\n\n  return {\n    magic,\n    version,\n    type,\n    size,\n    priceType,\n    exponent,\n    numComponentPrices,\n    numQuoters,\n    lastSlot,\n    validSlot,\n    emaPrice,\n    emaConfidence,\n    timestamp,\n    minPublishers,\n    drv2,\n    drv3,\n    drv4,\n    productAccountKey,\n    nextPriceAccountKey,\n    previousSlot,\n    previousPriceComponent,\n    previousPrice,\n    previousConfidenceComponent,\n    previousConfidence,\n    previousTimestamp,\n    aggregate,\n    priceComponents,\n    price,\n    confidence,\n    status\n  }\n}\n\nconst parseEma = (data: Buffer, exponent: number): Ema => {\n  // current value of ema\n  const valueComponent = readBigInt64LE(data, 0)\n  const value = Number(valueComponent) * 10 ** exponent\n  // numerator state for next update\n  const numerator = readBigInt64LE(data, 8)\n  // denominator state for next update\n  const denominator = readBigInt64LE(data, 16)\n  return { valueComponent, value, numerator, denominator }\n}\n","<template>\n  <HeadView />\n  <div v-if=\"msgFlag\" class=\"msg\"><div class=\"text\">NxFi Protocol has been renamed to Nebu Assets.</div><el-icon class=\"close\" @click=\"closeMsg()\"><CloseBold /></el-icon>\n  </div>\n  <router-view/>\n  <FootView />\n  <MobileView />\n</template>\n<script setup>\n/* eslint-disable */\nimport HeadView from '@/components/HeadView.vue'\nimport FootView from '@/components/FootView.vue'\nimport MobileView from '@/components/MobileView.vue'\nimport { ref, watch, onMounted,computed } from 'vue'\nimport { useRoute, useRouter, RouteRecordRaw } from 'vue-router'\nimport { useWallet } from 'solana-wallets-vue'\nimport { registe } from '@/lib/online'\nimport { delay } from '@/lib'\nconst route = useRoute()\nconst { publicKey } = useWallet()\nconst msgFlag = ref(true)\nonMounted(async() => {\n  // const wallet = window.phantom?.solana\n  // const res = await wallet.connect()\n  // console.log('connect',res)\n  if(window.location.href.indexOf('nxfi.io') > -1) {\n    const url = 'https://nebu.ac'+ window.location.pathname\n    window.open(url,'_self')\n  }\n  const msgLocal = window.localStorage.getItem('renameMsgLocalClose')\n  if(msgLocal) {\n    msgFlag.value = false\n  }\n  if(route.query.channel) {\n    window.localStorage.setItem('og_channel',route.query.channel)\n  }\n  if(route.query.referrercode) {\n    window.localStorage.setItem('og_referrercode',route.query.referrercode)\n  }\n  if(window.solana?.isONTO && window.onto) {\n    window.localStorage.setItem('og_channel',21)\n    const connectedWallet = window.localStorage.getItem('walletName')\n    if(!(connectedWallet === 'Phantom' || connectedWallet === 'ONTO')) {\n      window.localStorage.removeItem('walletName')\n    }\n  }\n})\nwatch(() => publicKey.value, async () => {\n  console.log('connect wallet')\n  await delay(2000)\n  const og_channel = window.localStorage.getItem('og_channel')\n  const og_referrercode = window.localStorage.getItem('og_referrercode')\n  if(publicKey.value && (og_channel || og_referrercode)){\n    await registe(publicKey.value.toBase58(),og_referrercode,og_channel)\n  }\n}, {\n  deep: true\n})\n// export default {\n//     name: 'aPPView',\n//     components: {\n//       HeadView,\n//       FootView,\n//       MobileView\n//     }\n//   }\nconst closeMsg =() =>{\n  window.localStorage.setItem('renameMsgLocalClose',true)\n  msgFlag.value = false\n}\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  background-color: #0F1112;\n}\n.msg {\n    cursor: pointer;\n    position: relative;\n    display: flex;\n    align-items:center;\n    justify-content: center;\n    z-index: 1;\n  .text {\n    margin-top:2px;\n    width: 100%;\n    height:60px;\n    background-color: #a177b5;\n    color: #FFF;\n    font-family: 'Poppins', sans-serif;\n    font-size: 20px;\n    font-style: normal;\n    font-weight: 500;\n    display: flex;\n    align-items:center;\n    justify-content: center;\n    padding: 0 10px;\n    box-sizing: border-box;\n    word-wrap: break-word;\n  }\n  .close {\n    font-size: 20px;\n    color: #fff;\n    cursor: pointer;\n    position: absolute;\n    right: 0;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n.up{\n  color:#6AFFFF !important;\n}\n.down{\n  color:#FF6A6A !important;\n}\ninput::-webkit-inner-spin-button,\ninput::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\ninput[type=\"number\"] {\n    -moz-appearance: textfield;\n}\n\n@font-face {\n  font-family: 'ibm1';\n  src: url('@/assets/font/ibm_light.woff2') format('woff2');\n}\n@font-face {\n  font-family: 'ibm2';\n  src: url('@/assets/font/ibm_regular.woff2') format('woff2');\n}\n@font-face {\n  font-family: 'ibm3';\n  src: url('@/assets/font/ibm_blod.woff2') format('woff2');\n}\n@font-face {\n  font-family: 'ibm4';\n  src: url('@/assets/font/ibm_extraBlod.woff2') format('woff2');\n}\n@font-face {\n  font-family: 'Poppins'; //字体名字\n  src: url('@/assets/font/poppins/Poppins-Regular.ttf'); //引入字体位置\n}\n@font-face {\n  font-family: 'Poppins Blod'; //字体名字\n  src: url('@/assets/font/poppins/Poppins-Bold.ttf'); //引入字体位置\n}\n@font-face {\n  font-family: 'Poppins Medium'; //字体名字\n  src: url('@/assets/font/poppins/Poppins-Medium.ttf'); //引入字体位置\n}\nbody{\n  margin: 0;\n}\nnav {\n  padding: 30px;\n\n  a {\n    font-weight: bold;\n    color: #2c3e50;\n\n    &.router-link-exact-active {\n      color: #42b983;\n    }\n  }\n}\n/* 修改整体轨道的宽度 */\n::-webkit-scrollbar {\n    width: 0px; /* 根据需要调整大小 */\n}\n \n/* 修改滑块的样式 */\n::-webkit-scrollbar-thumb {\n    background-color: #3A3A3A; /* 根据需要调整颜色 */\n    border-radius: 0px; /* 根据需要调整边角形状 */\n}\n \n/* 当滑块处于活动状态时的样式 */\n::-webkit-scrollbar-thumb:hover {\n    background-color: #666; /* 根据需要调整颜色 */\n}\n \n/* 添加按钮（向左/向右）的样式 */\n::-webkit-scrollbar-button {\n    display: none; /* 不显示按钮 */\n}\n</style>\n<style>\n.el-drawer__body {\n  padding: 0 !important;\n}\n.el-scrollbar {\n    --el-scrollbar-opacity: 0 !important;\n    --el-scrollbar-bg-color: #151617 !important;\n    --el-scrollbar-hover-opacity: 0 !important;\n    --el-scrollbar-hover-bg-color: #4f3776 !important;\n}\n.el-notification {\n  border-radius: 11px !important;\n  background: #151617 !important;\n  border: 1px solid #151617 !important;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.50);\n}\n.el-notification__title{\n  color: #fff !important;\n  background-color: #151617 !important;\n  font-family: 'Poppins',sans-serif !important;\n  font-size: 20px !important;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n}\n.el-notification__content {\n  color: #fff !important;\n  background-color: #151617 !important;\n  color: #A1A1A1!important;\n  font-family: 'Poppins',sans-serif !important;\n  font-size: 14px !important;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n}\n.el-switch__core {\n  background-color: #3F3E40 !important;\n  border: 1px solid #3F3E40 !important;\n}\n.el-switch.is-checked .el-switch__core {\n  background-color: #7340C9 !important;\n}\n.el-popper__arrow {\n  display: none !important;\n}\n.el-popper {\n  padding: 15px !important;\n  border-radius: 11px !important;\n  background-color: #151617 !important;\n  box-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.50) !important;\n  border: none !important;\n}\n.el-dropdown-menu {\n  background-color: #151617 !important;\n}\n.el-dropdown-menu__item {\n  color: #FFF !important;\n  text-align: center !important;\n  font-family: \"Poppins\",sans-serif !important;\n  font-size: 14px !important;\n  font-style: normal !important;\n  font-weight: 400 !important;\n  line-height: normal !important;\n  border-radius: 11px !important;\n}\n.el-dropdown-menu__item:hover {\n  color: #FFF !important;\n  text-align: center !important;\n  font-family: \"Poppins\",sans-serif !important;\n  font-size: 14px !important;\n  font-style: normal !important;\n  font-weight: 400 !important;\n  line-height: normal !important;\n  border-radius: 11px !important;\n  background: #4F3776 !important;\n}\n.el-popper.is-light {\n  background-color: #151617 !important;\n}\n.head .wallet div .swv-dropdown {\n  display: flex;\n  width: 138px;\n  height: 38px;\n  padding: 10px 15px;\n  justify-content: center;\n  align-items: center;\n  border-radius:10px;\n}\n.head .wallet div .swv-dropdown .swv-button {\n  display: flex;\n  width: 145px;\n  height: 38px;\n  padding: 10px 15px;\n  justify-content: center;\n  align-items: center;\n  border-radius:10px;\n}\n.head .wallet div .swv-dropdown .swv-button p {\n  color: #FFF;\n  text-align: center;\n  font-family: \"Poppins\",sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  text-transform: capitalize;\n}\n.head .wallet div .swv-dropdown .swv-button-trigger {\n  background-color: #212121;\n}\n.head .wallet div .swv-button-trigger {\n  background-color: #212121;\n  font-family: \"Poppins\",sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  width: 138px;\n  height: 38px;\n  padding: 10px 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.swv-button > p {\n  margin-left: 10px !important;\n  overflow: hidden !important;\n  white-space: nowrap !important;\n}\n.head .wallet div .swv-dropdown .swv-button > * + * {\n    margin-left: 10px;\n    overflow: hidden;\n    white-space: nowrap;\n}\n.head .wallet div .swv-dropdown .swv-dropdown-list {\n  background-color: #212121;\n}\n.head .wallet div .swv-dropdown .swv-dropdown-list .swv-dropdown-list-item {\n  font-size: 14px;\n  color: #fff;\n  font-family: \"Poppins\",sans-serif;\n}\n.head .wallet div .swv-dropdown .swv-dropdown-list .swv-dropdown-list-item:not([disabled]):hover {\n  font-size: 14px;\n  color: #fff;\n  font-family: \"Poppins\",sans-serif;\n  background-color: #353535;\n}\n.swv-modal-wrapper {\n  background-color: #151617 !important;\n}\n.swv-modal-title {\n  color: #FFF;\n  text-align: center !important;\n  font-family: \"Poppins\",sans-serif !important;\n  font-size: 24px !important;\n  font-style: normal !important;\n  font-weight: 500 !important;\n  line-height: normal !important;\n}\n.swv-button {\n  color: #FFF !important;\n  text-align: center !important;\n  font-family: \"Poppins\",sans-serif !important;\n  font-size: 14px !important;\n  font-style: normal !important;\n  font-weight: 500;\n  line-height: normal;\n  text-transform: capitalize;\n}\n.swv-modal-wrapper .swv-button:not([disabled]):hover {\n  background-color: #212125 !important;\n}\n.swv-modal-button-close {\n  background-color: #151617 !important;\n  color: #fff !important;\n}\n.swv-modal-button-close:hover {\n  color: #fff !important;\n}\n.swv-modal-overlay {\n  background-color: rgba(0,0,0,0.7) !important;\n}\n.el-dialog__headerbtn {\n  width:  34px !important;\n  height: 34px !important;\n  border-radius:17px;\n  background-color: #151617 !important;\n  top: 34px !important;\n  right: 17px !important;\n}\n.el-dialog {\n  background-color: transparent !important;\n  max-width: 100%;\n  box-sizing: border-box;\n}\n::v-deep .el-form-item {\n  margin: 0 5px !important;\n}\n::v-deep .el-table,\n.el-table__expanded-cell {\n  padding: 20px !important;\n  background-color: #0F1112 !important;\n}\n.el-table th {\n  background-color: transparent !important;\n  border-bottom-color: rgba(255,255,255,0) !important;\n  color: #747474;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n.profit .el-table th {\n  background-color: #0F1112 !important;\n  border-bottom-color: rgba(255,255,255,0) !important;\n  color: #747474;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n.market .el-table th {\n  background-color: #0F1112 !important;\n  border-bottom-color: rgba(255,255,255,0) !important;\n  color: #747474;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n.el-table th:hover {\n  /* background-color: #0F1112 !important; */\n  border-bottom-color: rgba(255,255,255,0) !important;\n  color: #747474;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n::v-deep .el-table tr {\n  font-family: 'Poppins', sans-serif;\n  background-color: transparent !important;\n}\n.el-table tr {\n  font-family: 'Poppins', sans-serif;\n  background-color: transparent !important;\n}\n.el-table tr:hover {\n  background-color: transparent !important;\n}\n.el-table--enable-row-hover .el-table__body tr:hover>td.el-table__cell {\n    background-color: #0F1112 !important;\n}\n::v-deep .el-table--enable-row-transition .el-table__body td,\n::v-deep .el-table .cell {\n  font-family: 'Poppins', sans-serif;\n  background-color: transparent !important;\n  color: rgba(255, 255, 255, 0.7) !important;\n  border: none !important;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n}\n::v-deep .el-table th > .cell {\n  font-family: 'Poppins', sans-serif;\n  color: rgba(254, 254, 254, 1) !important;\n  font-weight: 700 !important;\n}\n.el-table::before {\n  font-family: 'Poppins', sans-serif;\n  left: 0 !important;\n  bottom: 0 !important;\n  width: 100%!important;\n  height: 0px !important;\n}\n \n::v-deep .el-form-item__label {\n  color: white !important;\n}\n.el-table td.el-table__cell {\n    border-bottom: none !important; \n    box-shadow: 0px -1px 0px 0px rgba(255, 255, 255, 0) inset;\n}\n.el-table .cell {\n  padding-right: 0 !important;\n}\n.el-table th.el-table__cell {\n  text-align: right;\n  padding-right: 0 !important;\n}\n.market .el-table__body tr.hover-row>td.el-table__cell {\n  background-color: #0F1112 !important;\n}\n.profit .el-table__body tr.hover-row>td.el-table__cell {\n  background-color: #0F1112 !important;\n}\n.dashboard .el-table__body tr.hover-row>td.el-table__cell {\n  background-color: transparent !important;\n}\n.el-table th.el-table__cell:first-child {\n  text-align: left;\n}\n.el-table td.el-table__cell {\n  text-align: right;\n}\n.profit .el-table th.el-table__cell:first-child {\n  text-align: left !important;\n}\n.profit .el-table th.el-table__cell:last-child {\n  text-align: right !important;\n}\n.profit .el-table th.el-table__cell {\n  text-align: center ;\n}\n.profit .el-table td.el-table__cell {\n  text-align: center !important;\n}\n.profit .el-table td.el-table__cell:first-child {\n  text-align: left !important;\n}\n.profit .el-table td.el-table__cell:last-child {\n  text-align: right !important;\n}\n.el-table td.el-table__cell:first-child {\n  text-align: left;\n}\n.el-table td.el-table__cell div {\n  color: #FFF;\n  text-align: center;\n  font-family: 'Poppins', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  text-align: right;\n  padding-right: 0 !important;\n}\n.dashboard .el-table--enable-row-transition .el-table__body td.el-table__cell {\n  height: 78px;\n  box-sizing: border-box;\n  background-color: transparent !important;\n}\n.market .el-table--enable-row-transition .el-table__body td.el-table__cell {\n  height: 78px;\n  box-sizing: border-box;\n  background-color: #0F1112 !important;\n}\n.market .el-table--enable-row-transition .el-table__body th.el-table__cell {\n  background-color: #0F1112 !important;\n}\n.profit .el-table--enable-row-transition .el-table__body td.el-table__cell {\n  height: 78px;\n  box-sizing: border-box;\n  background-color: #0F1112 !important;\n}\n.profit .el-table--enable-row-transition .el-table__body th.el-table__cell {\n  background-color: #0F1112 !important;\n}\n.el-table {\n  border-bottom: none !important;\n  border-bottom-color: #0F1112 !important;\n}\ndiv ::v-deep .el-table--border::after,\ndiv ::v-deep .el-table--group::after,\ndiv ::v-deep .el-table::before {\n    background-color: transparent;\n}\n.el-loading-mask {\n  background-color: rgba(0,0,0,0.5) !important;\n}\n.el-loading-spinner .path {\n  stroke: #c958ff  !important;\n}\n.el-slider__bar {\n  background-color: #7340C9 !important;\n}\n.el-slider__button {\n  border: solid 2px #7340C9 !important;\n}\n.el-checkbox__inner:hover {\n    border-color: #7340C9 !important;\n}\n.el-checkbox__input.is-checked .el-checkbox__inner {\n  background-color: #7340C9 !important;\n  border-color: #7340C9 !important;\n}\n.el-checkbox__input.is-checked+.el-checkbox__label {\n  color: #FFF !important;\n  font-family: 'Poppins',sans-serif;\n  font-size: 14px !important;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n.el-checkbox__inner {\n  background-color: rgba(0,0,0,0) !important;\n  border: 2px solid #717171 !important;\n}\n.el-checkbox__label {\n  color: rgba(255,255,255,0.6) !important;\n  font-family: 'Poppins',sans-serif;\n  font-size: 14px !important;\n  font-style: normal;\n  font-weight: 400 !important;\n  line-height: normal;\n}\n.el-radio-button .el-radio-button__inner {\n    background-color: #2f2f2f;\n  }\n  .el-radio-button__inner {\n    background-color: #2f2f2f;\n    color: #fff;\n    border: none !important;\n  }\n  .el-radio-button--large .el-radio-button__inner {\n    background-color: #2f2f2f;\n    color: #fff;\n    border: rgba(0,0,0,0.8);\n  }\n  .act  .el-progress-bar__outer {\n            background-color: #000 !important;\n          }\n@media (max-width: 800px) {\n  .set .el-checkbox__label{\n    font-size: 12px;\n  }\n}\n</style>\n","<template>\n    <div class=\"head\">\n        <div class=\"title\" @click=\"goPage('')\">\n          <img class=\"logo\" src=\"@/assets/img/logo.png\"/>\n          <span style=\"margin-left:5px;\">Ne</span><span style=\"color: white;\">bu</span>\n          <!-- <img class=\"name\" src=\"@/assets/img/logo.svg\"/> -->\n        </div>\n        <div class=\"menu\" v-if=\"route.name !== 'home'\">\n          <div @click=\"goPage('app')\" :class=\"route.name==='app'?'active item':'item'\">Lend</div>\n          <div @click=\"goPage('rwa')\" :class=\"route.name==='rwa'?'active item':'item'\">RWA</div>\n          <div @click=\"goPage('swap')\" :class=\"route.name==='swap'?'active item':'item'\">Swap</div>\n          <div class=\"item disable\">Points</div>\n          <div :class=\"route.name==='profit'?'active item disable':'item disable'\">Profit</div>\n          <div @click=\"goPage('activity')\" :class=\"route.name==='activity'?'active item':'item'\">OG Role Event<img src=\"@/assets/img/fire.svg\"/></div>\n        </div>\n        <div class=\"lv\" v-if=\"route.name !== 'home'\" @click=\"goPage('activity')\">\n          <img v-if=\"ogScoreLv === 1\" src=\"@/assets/img/001.png\"/>\n          <img v-if=\"ogScoreLv === 2\" src=\"@/assets/img/002.png\"/>\n          <img v-if=\"ogScoreLv === 3\" src=\"@/assets/img/003.png\"/>\n        </div>\n        <div class=\"wallet\" v-if=\"route.name !== 'home'\"><wallet-multi-button :featured=\"4\"></wallet-multi-button></div>\n        <div class=\"app\" v-if=\"route.name === 'home'\" @click=\"goPage('app')\">Launch App</div>\n    </div>\n    <LoadingView v-if=\"isLoadingFlag\" />\n</template>\n<script setup>\n/* eslint-disable */\nimport { WalletMultiButton, useWallet, useAnchorWallet } from 'solana-wallets-vue'\nimport { useRoute, useRouter, RouteRecordRaw } from 'vue-router'\nimport { ref,computed,watch,onMounted,onUnmounted } from 'vue'\nimport { reserve_list,OG_LV2_SCORE,OG_LV3_SCORE,OG_LV1_SCORE } from '../lib/value'\nimport LoadingView from './LoadingView.vue'\nimport * as nxlendfunc from '../lib/index.ts'\nimport {getOgscore} from '@/lib/online'\nimport appStore from '@/store'\nconst route = useRoute()\nconst router = useRouter()\nconst isLoadingFlag = ref(false)\nconst { publicKey,wallet } = useWallet()\nconst timeOut = ref(null)\nconst loginDrawer = ref(false)\nconst getBalanceCounts = ref(0)\nwatch(() => publicKey, () => {\n  if(publicKey.value) {\n    getOgscore(publicKey.value)\n  } else {\n    appStore.ogscore.state.ogscore = 0\n  }\n  getBalanceCounts.value = 0\n  console.log('wallet.value?.adapter',wallet.value?.adapter)\n  init(true)\n}, {\n  deep: true\n})\nwatch(() => route.path, () => {\n  console.log('watch route',route)\n  if(route.path.indexOf('rwa') > -1 || route.name.indexOf('home') > -1 || route.name.indexOf('swap') > -1 ) {\n    isLoadingFlag.value = false\n  } else {\n    isLoadingFlag.value = true\n    init()  \n  }\n}, {\n  deep: true\n})\nwatch(() => appStore.account.state.reserveChange, () => {\n  isLoadingFlag.value = false\n}, {\n  deep: true\n})\nconst ogScoreLv = computed(()=> {\n  const score = appStore.ogscore.state.ogscore\n  let lv = 0\n  if(score >= OG_LV1_SCORE) {\n    lv = 1\n  }\n  if(score >= OG_LV2_SCORE) {\n    lv = 2\n  }\n  if(score >= OG_LV3_SCORE) {\n    lv = 3\n  }\n  return lv\n})\nconst toApp=() => {\n  window.open(\"https://alpha.nxfi.io/\")\n}\nconst init = ($clear = false) => {\n  console.log('route',route.name)\n  const pageName = route.name\n  if (pageName === 'home' || pageName === 'rwa' || pageName === 'swap') {\n    return\n  }\n  if (timeOut.value) clearTimeout(timeOut.value);\n  timeOut.value = setTimeout(() => {\n    timeOut.value = null;\n    if(getBalanceCounts.value < 1) {\n      getBalanceCounts.value = getBalanceCounts.value + 1\n      nxlendfunc.getReserveListOwner(true,$clear)\n    } else {\n      getBalanceCounts.value = 0\n      nxlendfunc.getReserveListOwner(false,$clear)\n    }\n  }, 500);\n}\nconst setTime = ref(0)\nconst start = () => {\n  setTime.value = setInterval(()=>{\n    init()\n  },30000)\n}\n\nconst stop = () => {\n  clearInterval(setTime.value);\n}\nonMounted(async() => {\n  console.log('route.path',route.path)\n  if(route.path.indexOf('rwa') > -1 || route.name.indexOf('home') > -1 || route.name.indexOf('swap') > -1 ) {\n    isLoadingFlag.value = false\n  } else {\n    isLoadingFlag.value = true\n  }\n  init()\n  if(publicKey.value) {\n    getOgscore(publicKey.value)\n  }\n  setTimeout(() => {\n    start()\n  }, 30000);\n})\nonUnmounted(() => {\n    stop();\n});\nconst goPage = ($path) => {\n  router.push({\n    path: `/${$path}`\n  })\n}\n</script>\n  \n  <!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n.head{\n  height: 64px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background-color: #0F1112;\n  //border-bottom:1px solid #212121;\n  align-items: center;\n  z-index:2;\n  .title {\n    cursor: pointer;\n    width: 264px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    .logo {\n      height:55px;\n      margin:7px 0 8px 10px;\n    }\n    .name {\n      height:28px;\n      margin:7px 0 8px 10px;\n    }\n    span {\n      color: #C958FF;\n      font-family: Orbitron, sans-serif;\n      font-size: 32px;\n      font-style: normal;\n      font-weight: 900;\n      line-height: 100%; /* 26px */\n      text-transform: capitalize;\n    }\n  }\n  .menu {\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    color: #fff;\n    .disable {\n      opacity: 0.4;\n    }\n    .item{\n      cursor: pointer;\n      font-size: 18px;\n      font-weight: 600;\n      margin: 0 28px;\n      border-bottom: 3px solid rgba(0,0,0,0);\n      padding: 23px 0 20px;\n      display: flex;\n      align-items: center;\n      img {\n        margin-left: 5px;\n      }\n    }\n    .active{\n      border-bottom: 3px solid #C958FF;\n      transition: all ease 0.3s;\n    }\n  }\n  .lv {\n    width: 40px;\n    display: flex;\n    align-items:center;\n    justify-content:center;\n    img{\n      width:30px;\n    }\n  }\n  .wallet{\n    width: 194px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding-right: 20px;\n    box-sizing: border-box;\n    div {\n      .swv-dropdown {\n        display: flex;\n        width: 138px;\n        height: 38px;\n        padding: 10px 15px;\n        justify-content: center;\n        align-items: center;\n        .swv-button-trigger{\n          background-color: none !important;\n        }\n      }\n    }\n  }\n  .app {\n    margin-right: 40px;\n    cursor: pointer;\n    display: flex;\n    width: 131px;\n    height: 32px;\n    padding: 5px;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    flex-shrink: 0;\n    border-radius: 6px;\n    background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    box-sizing: border-box;\n    z-index: 1;\n  }\n}\n@media (min-width:800px) and (max-width: 1050px) {\n.head{\n  height: 64px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  background-color: #0F1112;\n  //border-bottom:1px solid #212121;\n  align-items: center;\n  position: relative;\n  z-index:2;\n  .title {\n    cursor: pointer;\n    width: 174px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    .logo {\n      height:55px;\n      margin:7px 0 8px 10px;\n    }\n    .name {\n      height:28px;\n      margin:7px 0 8px 10px;\n    }\n    span {\n      color: #C958FF;\n      font-family: Orbitron, sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 900;\n      line-height: 100%; /* 26px */\n      text-transform: capitalize;\n      transform: translate(-6px, 10px);\n    }\n  }\n  .menu {\n    flex: 1;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    color: #fff;\n    .disable {\n      opacity: 0.4;\n    }\n    .item{\n      cursor: pointer;\n      font-size: 16px;\n      font-weight: 600;\n      margin: 0 12px;\n      border-bottom: 3px solid rgba(0,0,0,0);\n      padding: 23px 0 20px;\n    }\n    .active{\n      border-bottom: 3px solid #C958FF;\n      transition: all ease 0.3s;\n    }\n  }\n  .lv {\n    width: 40px;\n    display: flex;\n    align-items:center;\n    justify-content:center;\n    img{\n      width:30px;\n    }\n  }\n  .wallet{\n    width: 174px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    padding-right: 20px;\n    box-sizing: border-box;\n    div {\n      .swv-dropdown {\n        display: flex;\n        width: 138px;\n        height: 38px;\n        padding: 10px 15px;\n        justify-content: center;\n        align-items: center;\n        .swv-button-trigger{\n          background-color: none !important;\n        }\n      }\n    }\n  }\n  .app {\n    margin-right: 40px;\n    cursor: pointer;\n    display: flex;\n    width: 131px;\n    height: 32px;\n    padding: 5px;\n    justify-content: center;\n    align-items: center;\n    gap: 5px;\n    flex-shrink: 0;\n    border-radius: 6px;\n    background: linear-gradient(90deg, #C958FF 0%, #7E57EF 100%);\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    box-sizing: border-box;\n    z-index: 1;\n  }\n}\n}\n@media (max-width:800px) {\n  .head {\n    .title {\n      .logo {\n        height:44px;\n      }\n      .name {\n        height: 23px;\n        margin-left: 6px;\n      }\n    }\n    .menu {\n      display: none !important;\n    }\n    .app {\n      margin-right: 20px !important;\n    }\n    .lv {\n      flex:1;\n      justify-content: end;\n    }\n  }\n}\n</style>\n  ","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=2aa8ddbc&lang=scss\"\nimport \"./App.vue?vue&type=style&index=1&id=2aa8ddbc&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div v-if=\"route.name === 'home' || route.name === 'activity'  \" class=\"foot\">\n      <div class=\"logo\">\n        <div class=\"name\"><img src=\"@/assets/img/logo.png\"/><span>Nebu</span></div>\n        <div class=\"copyright\">@2024 Nebu Assets. All rights reserved</div>\n      </div>\n      <div class=\"menu\">\n        <div class=\"sub-menu\">\n          <div class=\"title\">Connect</div>\n          <div class=\"item-wrapper\">\n            <div class=\"item\" @click=\"open('https://x.com/Nebu_Assets')\">X</div>\n            <div class=\"item\" @click=\"open('https://discord.com/invite/XJYuQYQzFK')\" >Discord</div>\n            <div class=\"item\" @click=\"open('mailto:team@nxfi.io?')\" >Contact</div>\n          </div>\n        </div>\n        <div class=\"sub-menu\">\n          <div class=\"title\">Products</div>\n          <div class=\"item-wrapper\">\n            <div class=\"item\" @click=\"goPage('app')\">Lending</div>\n            <div class=\"item\" @click=\"goPage('rwa')\">RWA</div>\n            <div class=\"item disable\">Points</div>\n            <div class=\"item disable\">Profit</div>\n          </div>\n        </div>\n        <div class=\"sub-menu\">\n          <div class=\"title\">About</div>\n          <div class=\"item-wrapper\">\n            <div class=\"item\" @click=\"open('https://mirror.xyz/0xF09b01132A3f6FcF89e435fA4830719813650bf2')\">Blog</div>\n            <div class=\"item\" @click=\"open('https://docs.nebu.ac')\">Documentation</div>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script setup>\nimport { useRoute, useRouter } from 'vue-router'\nconst route = useRoute()\nconst router = useRouter()\nconst goPage = ($path) => {\n  router.push({\n    path: `/${$path}`\n  })\n}\nconst open = ($url) => {\n  window.open($url)\n}\n</script>\n<style scoped lang=\"scss\">\n.foot {\n  max-width: 1280px;\n  margin: 0px auto 0px;\n  padding: 0 20px 150px;\ndisplay: flex;\n.logo {\n  text-align: left;\n  width: 50%;\n  .name{\n    color: #FFF;\n    font-family: Inter,sans-serif;\n    font-size: 30px;\n    font-style: normal;\n    font-weight: 500;\n    line-height: normal;\n    margin-bottom: 10px;\n    display: flex;\n    align-items: center;\n    img {\n      height: 55px;\n      margin-right: 10px;\n    }\n  }\n  .copyright {\n    color: #FFF;\n    text-align: left;\n    font-family: Inter,sans-serif;\n    font-size: 14px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n  }\n}\n.menu {\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  .sub-menu {\n    text-align: left;\n    width: 25%;\n    min-width:80px;\n    .title {\n      color: rgba(255,255,255,0.5);\n      text-align: left;\n      font-family: Inter,sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n    .item-wrapper {\n      .disable {\n        opacity: 0.6;\n      }\n      .item {\n        cursor: pointer;\n        text-align: left;\n        color: #FFF;\n        font-family: Inter,sans-serif;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n        margin-top:10px;\n      }\n    }\n  }\n}\n}\n@media (max-width: 800px){\n.foot {\n  padding: 20px 20px 60px;\n  display: flex;\n  flex-direction: column-reverse;\n  .logo {\n    text-align: left;\n    margin-right: 0px;\n    .name{\n      color: #FFF;\n      font-family: Inter,sans-serif;\n      font-size: 30px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      margin-bottom: 10px;\n    }\n    .copyright {\n      color: #FFF;\n      text-align: left;\n      font-family: Inter,sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: normal;\n    }\n  }\n  .menu {\n    margin-bottom:20px;\n    flex-wrap:wrap;\n    .sub-menu {\n      width:33%;\n      text-align: left;\n      .title {\n        color: rgba(255,255,255,0.5);\n        text-align: left;\n        font-family: Inter,sans-serif;\n        font-size: 14px;\n        font-style: normal;\n        font-weight: 400;\n        line-height: normal;\n      }\n      .item-wrapper {\n        .item {\n          cursor: pointer;\n          text-align: left;\n          color: #FFF;\n          font-family: Inter,sans-serif;\n          font-size: 14px;\n          font-style: normal;\n          font-weight: 400;\n          line-height: normal;\n          margin-top:5px;\n        }\n      }\n    }\n  }\n}\n}\n</style>\n","import script from \"./FootView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./FootView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./FootView.vue?vue&type=style&index=0&id=9ef859f2&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9ef859f2\"]])\n\nexport default __exports__","import script from \"./HeadView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HeadView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HeadView.vue?vue&type=style&index=0&id=6b8b76ca&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b8b76ca\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@/assets/img/logo.png'\n\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-1e8d1d43\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"loading\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  class: \"logo\",\n  src: _imports_0\n}, null, -1))\nconst _hoisted_3 = [\n  _hoisted_2\n]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3))\n}","<template>\n  <div class=\"loading\">\n    <img class=\"logo\" src=\"@/assets/img/logo.png\">\n  </div>\n</template>\n<script lang=\"ts\">\n/* eslint-disable */\n</script>\n<style scoped lang=\"scss\">\n.loading {\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background-color: rgba(0,0,0,0.99);\n    display: flex;\n    justify-content: center;\n    align-items:center;\n    z-index: 10;\n  .logo {\n    opacity: 1;\n    width: 100px;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    align-items:center;\n    animation: change 2s ease infinite;\n  }\n}\n\n@keyframes change {\n  0% {\n      opacity: 1;\n      transform: translate(0,-10%);\n  }\n  50% {\n      opacity: 0.6;\n    transform: translate(0,10%);\n  }\n  100% {\n      opacity: 1;\n    transform: translate(0,-10%);\n  }\n}\n// @media (max-width: 800px) {\n//   .loading {\n//     display: none;\n//   }\n// }\n</style>","import { render } from \"./LoadingView.vue?vue&type=template&id=1e8d1d43&scoped=true&ts=true\"\nimport script from \"./LoadingView.vue?vue&type=script&lang=ts\"\nexport * from \"./LoadingView.vue?vue&type=script&lang=ts\"\n\nimport \"./LoadingView.vue?vue&type=style&index=0&id=1e8d1d43&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1e8d1d43\"]])\n\nexport default __exports__","<template>\n  <div class=\"mobile\" v-if=\"route.name !== 'home'\">\n    <div :class=\"route.name==='app'?'active item':'item'\" @click=\"goPage('app')\">\n      <img v-if=\"route.name==='app'\" src=\"@/assets/img/m_lend.svg\"/>\n      <img v-else src=\"@/assets/img/m_lend_d.svg\"/>\n      <div class=\"text\">Lend</div>\n    </div>\n    <div :class=\"route.name==='rwa'?'active item':'item'\" @click=\"goPage('rwa')\">\n      <img v-if=\"route.name==='rwa'\" src=\"@/assets/img/m_rwa.svg\"/>\n      <img v-else src=\"@/assets/img/m_rwa_d.svg\"/>\n      <div class=\"text\">RWA</div>\n    </div>\n    <div class=\"item\">\n      <el-tooltip\n            class=\"box-item\"\n            effect=\"dark\"\n            content=\"Coming soon\"\n            placement=\"top\"\n          >\n        <img v-if=\"route.name==='point'\" src=\"@/assets/img/m_point.svg\"/>\n        <img v-else src=\"@/assets/img/m_point_d.svg\"/>\n      </el-tooltip>\n      <div class=\"text\">Point</div>\n    </div>\n    <!-- <div :class=\"route.name==='profit'?'active item':'item'\" @click=\"goPage('profit')\"> -->\n    <div :class=\"route.name==='profit'?'active item':'item'\">\n      <el-tooltip\n            class=\"box-item\"\n            effect=\"dark\"\n            content=\"Coming soon\"\n            placement=\"top\"\n          >\n        <img v-if=\"route.name==='profit'\" src=\"@/assets/img/m_profit.svg\"/>\n        <img v-else src=\"@/assets/img/m_profit_d.svg\"/>\n      </el-tooltip>\n      <div class=\"text\">Profit</div>\n    </div>\n    <div :class=\"route.name==='activity'?'active item':'item'\" @click=\"goPage('activity')\">\n      <img v-if=\"route.name==='activity'\" src=\"@/assets/img/m_event.svg\" />\n      <img v-else src=\"@/assets/img/m_event_d.svg\" />\n      <img class=\"fire\" src=\"@/assets/img/fire.svg\"/>\n      <div class=\"text\">Event</div>\n    </div>\n  </div>\n</template>\n<script setup>\n/* eslint-disable */\nimport { useRoute, useRouter, RouteRecordRaw } from 'vue-router'\nconst route = useRoute()\nconst router = useRouter()\nconst goPage = ($path) => {\n  router.push({\n    path: `/${$path}`\n  })\n}\n</script>\n<style scoped lang=\"scss\">\n@media (min-width:801px) {\n  .mobile {\n    display: none !important;\n  }\n}\n@media (max-width:800px) {\n  .mobile {\n    z-index: 10;\n    width: 100vw;\n    position: fixed;\n    bottom: 0px;\n    height: 80px;\n    background: #141617;\n    box-shadow: 0px -1px 0px 0px rgba(255, 255, 255, 0.10);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    .item {\n      width: 20%;\n      height: 100%;\n      cursor:pointer;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      color: #FFF;\n      text-align: center;\n      font-family: 'Poppins',sans-serif;\n      font-size: 12px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: normal;\n      text-transform: capitalize;\n      justify-content: center;\n      position: relative;\n      img {\n        width: 23px;\n      }\n      .fire {\n        width: 19px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(8px, -33px);\n      }\n      .text {\n        margin-top: 8px;\n        color: #898A8B;\n        text-align: center;\n        font-family: \"Poppins\",sans-serif;\n        font-size: 12px;\n        font-style: normal;\n        font-weight: 500;\n        line-height: normal;\n        text-transform: capitalize;\n      }\n    }\n    .active {\n      .text {\n        color: #A55FFF !important;\n      }\n    }\n  }\n}\n</style>","import script from \"./MobileView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MobileView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MobileView.vue?vue&type=style&index=0&id=60fbd8c6&scoped=true&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-60fbd8c6\"]])\n\nexport default __exports__","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = function(queue) {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach(function(fn) { fn.r--; });\n\t\tqueue.forEach(function(fn) { fn.r-- ? fn.r++ : fn(); });\n\t}\n}\nvar wrapDeps = function(deps) { return deps.map(function(dep) {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then(function(r) {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, function(e) {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = function(fn) { fn(queue); };\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = function() {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}); };\n__webpack_require__.a = function(module, body, hasAwait) {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise(function(resolve, rej) {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = function(fn) { queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](function() {}); };\n\tmodule.exports = promise;\n\tbody(function(deps) {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = function() { return currentDeps.map(function(d) {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}); }\n\t\tvar promise = new Promise(function(resolve) {\n\t\t\tfn = function() { resolve(getResult); };\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = function(q) { q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))); };\n\t\t\tcurrentDeps.map(function(dep) { dep[webpackQueues](fnQueue); });\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, function(err) { (err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue); });\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + ({\"33\":\"@cloudpss/zstd/worker\",\"594\":\"about\"}[chunkId] || chunkId) + \".\" + {\"33\":\"a4098b62\",\"415\":\"cc0249e8\",\"500\":\"a2545589\",\"594\":\"5e68c289\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + \"about\" + \".\" + \"92bfa8f9\" + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"Nebu:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/nebutool/\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"594\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkNebu\"] = self[\"webpackChunkNebu\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(74383); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initWallet","autoConnect","PYTH_PRICE_CONF_INTERVALS","BigNumber","_a","useWallet","sendTransaction","signTransaction","signAllTransactions","wallet","wallets","select","Dotenv","programLendingId","web3","programLendingIdStr","marketAcc","marketAccKey","connection","node_rpc","lookUpTable","look_up_address","delay","ms","Promise","resolve","setTimeout","createNxlendAccount","needNew","noWallet","__awaiter","this","publicKey","userAccSeed","userAcc","program","nxlendAccData","error_1","ix","__generator","_b","label","value","sent","anchor","findProgramAddressSync","toBuffer","toArrayLike","Buffer","useAnchorWallet","idl","trys","push","account","nxlendAccount","fetch","isExist","key","toBase58","data","createAccountIx","console","log","methods","createUserAccount","accounts","nxlendMarket","owner","feePayer","systemProgram","programId","signers","instruction","getNativeBalance","address","pbk","amount","error_2","getBalance","integerToDecimal","getReserveListOwner","getBalanceFlag","clearBalanceFlag","onLineReserveList","sliderList","reserveList","autoRepay","reserves","nxlendReserveDatas","i","_loop_1","pythOracleList","price_data","risk_level","nxlend_acc","error_3","self_risk","mybalance","balanceActive_1","_loop_2","j","r","balance","appStore","reserve","state","onlineReserveList","length","JSON","parse","stringify","getReserveList","map","e","reserve_mint_key","tokenMint","reserve_key","reserveAddress","slider","profit","sliderChange","token_img","logoURI","token_name","tokenSymbol","priceFeedID","reserveAta","total_supply","total_borrow","supply_apr","borrow_apr","supply_apy","borrow_apy","ltv","asset_ntoken_ratio","debit_ntoken_ratio","my_supply","my_borrow","capacity","maxBorrow","usd_price","usd_price_low","usd_price_high","usd_price_weighted","usd_price_weighted_low","usd_price_weighted_high","decimals","asset_ratio","asset_liq_ratio","debit_set_ratio","debit_high_ratio","debit_mid_ratio","debit_low_ratio","debit_liq_ratio","type","interestSetting","getOnchainReserveData","nxlendReserveData","forEach","equals","setting","reserveType","indexOf","ElMessage","message","oracleType","pythOracle","oracleKeys","tokenDecimals","maxBorrowable","tokenInfo","tokenAccount","wrappedI80F48toBigNumber","assetValueRatio","toNumber","assetValueLiqRatio","debtValueRatioLowRisk","debtValueRatioMidRisk","debtValueRatioHighRisk","debtValueLiqRatio","totalAssetQuantity","getTotalAssetQuantity","creditDebit","reserveAssetNtokenAmount","assetNtokenRatio","totalLiabilityQuantity","getTotalLiabilityQuantity","reserveDebtNtokenAmount","debtNtokenRatio","rateChangeUr1","toString","rateChangeUr2","irUr1","irUr2","maxIr","treasuryBaseApr","treasuryAdditionRatio","marketFeeBase","marketAdditionRatio","toFixed","apy","getApyNew","Number","isNaN","supplyAPR","multipliedBy","supplyAPY","borrowAPR","borrowAPY","priceFeed","getOnchainPriceData","p","priceRes","priceData","priceRealtime","price","lowestPrice","highestPrice","priceWeighted","repayLtv","riskPreference","userMarketInfo","userReserves","active","reservePk","assetNtokenAmount","debtNtokenAmount","div","times","riskLevel","autoRepayLtv","reserveChange","user_token_acc_key","NATIVE_MINT","createTokenAccount","mintKey","balanceList","change","priceList","v1list","v2list","priceAccount","res","priceDataList","priceData1","priceData_1","priceAccountList","v2PriceData","priceData_2","item","time_1","error_5","getMultipleAccountsInfo","pythTool","getPrice","time","getPriceV2FromAccount","Date","getTime","cut","minus","reserveListData","error_6","fetchMultiple","$priceAccountList","pythSolanaReceiver","PythSolanaReceiver","fetchPriceUpdateAccount","priceMessage","pythPriceRealtime","shiftedBy","exponent","pythConfidenceRealtime","conf","pythLowestPriceRealtime","pythHighestPriceRealtime","plus","pythPrice","emaPrice","pythConfInterval","emaConf","pythLowestPrice","pythHighestPrice","publishTime","confidence","pythPriceData","undefined","previousPrice","confidenceData","previousConfidence","timestamp","emaConfidence","supply","borrow","ONE","supplyBN","borrowBN","use","dividedBy","borrowBaseAPY","lte","gt","aprToApy","lendSetAccountRiskPreference","nxlend_acc_pbk","riskParams","Ixs","risk","signature","low","middle","high","setAccountRiskPreference","text","concat","typed","textd","nxSendTransaction","lendingAccountDeposit","reserve_str","reserve_mint_str","reserveData","reserve_mint","liquidity_vault","reserve_l_v_g","user_token_data","amountInt","deposit_amount","priceFeeds","from","bytes","utf8","encode","makeTokenAccountIx","decimalToInteger","depositIntoReserve","signer","signerTokenAccount","AssociatedTokenAddress","reserveAssetTokenAccount","tokenProgram","token","wrapInstructionForWSol","getBorrowRemindingAccountList","nxlend_acc_data","reserve_list","activeBalanceList","newBorrow","newBorrowAdded","arr","isSigner","isWritable","pubkey","pythOracleReserve","borrowRemindingAccountList","lendingAccountBorrow","liquidity_vault_authority","reserve_l_v_a_g","borrow_amount","_c","_d","borrowFromReserve","destinationTokenAccount","tokenAccountAuthority","reserveTokenAccount","remainingAccounts","lendingAccountRepay","all","repay_amount","repayToReserve","i80f48FromNumber","x","MULTIPLIER_NUMBER","Math","pow","int_part","trunc","v","iushln","iadd","setRepayLTV","numberAmount","i80f48Amount","setAccountRepayLtv","getWithdrawRemindingAccountList","withdrawRemindingAccountList","lendingAccountWithdraw","withdraw_amount","withdrawFromReserve","payer","mint","allowOwnerOffCurve","isExit","error_8","transaction","sendTransaction_1","add","totalAssetShares","assetShareValue","totalLiabilityShares","liabilityShareValue","makeWrapSolIxs","walletAddress","getAssociatedTokenAddressSync","ixs","createAssociatedTokenAccountIdempotentInstruction","nativeAmount","SOL_WRAP_FACTOR","transfer","fromPubkey","toPubkey","lamports","createSyncNativeInstruction","makeUnwrapSolIx","createCloseAccountInstruction","__spreadArray","confirmTransaction","tx","getPriceUpdateData","$priceFeeds","priceServiceConnection","PriceServiceConnection","priceFeedRequestConfig","binary","getLatestVaas","$ixs","$data","feeSetJson","feeSet","feeAmount","feeInt","computePriceIx","setComputeUnitLimitInstruction","getLatestBlockhashAndContext","blockhash","lookupTableAccount","messageV0","transactionV0","queryString","urlParams","paramValue","updateSelf","wallet_1","priceUpdateData","_e","postInstructions","closeInstructions","ConsumerInstructions","transactions","error_9","_f","wallet_2","sendTransaction_2","txRes","error_10","_g","connected","window","localStorage","getItem","setComputeUnitPrice","microLamports","setComputeUnitLimit","units","getAddressLookupTable","payerKey","recentBlockhash","instructions","compileToV0Message","location","search","URLSearchParams","get","buildUpdatePriceFeedInstructions","priceFeedIdToPriceUpdateAccount","priceix","batchIntoVersionedTransactions","computeUnitPriceMicroLamports","provider","sendAll","skipPreflight","preflightCommitment","pendingtx","txList","err","firework1","adapter","name","connect","updateReserve","reserveKey","setFlag","operationalState","oracle","maxExposure","maxPriceAge","manager","rpc","apr","compoundingFrequency","HOURS_PER_YEAR","getFee","fee_1","feeNumber","getRecentPrioritizationFees","prioritizationFee","end","now","colors","frame","confetti","shapes","particleCount","angle","spread","origin","requestAnimationFrame","BorshCoder","response","axios","RESERVE_ONLINE_DATA","error","localOnlineReserveList","getOgscore","$publickey","url","og","bullScore","MaxBullAddScore","bullAddScore","getBullscore","ogscore","lend_points","nxscore","code","bullscore","bullUnlockscore","bullLockscore","registe","$referenceCode","$channel","error_4","BORROW_MAX_DISCOUNT","usdc_mint_key","process","INTERSEST_MIN_DISCOUNT","MAX_BALANCES_AMOUNT","OG_END_DATE","OG_LV1_SCORE","OG_LV2_SCORE","OG_LV3_SCORE","require","pinia","createPinia","walletOptions","PhantomWalletAdapter","Coin98WalletAdapter","SolflareWalletAdapter","network","WalletAdapterNetwork","Mainnet","TokenPocketWalletAdapter","app","createApp","App","_i","Object","entries","ElementPlusIconsVue","component","ElementPlus","router","registerStore","isReady","then","mount","register","ready","registered","cached","updatefound","updated","offline","class","_createElementBlock","_hoisted_1","_createVNode","_component_banner","_component_rwa","_component_lending","_component_profit","_component_power","useRouter","goPage","$path","path","open","$url","__exports__","_createStaticVNode","_imports_0","_imports_1","_imports_2","_hoisted_2","_hoisted_5","props","msg","String","_hoisted_6","_imports_3","_imports_4","_imports_5","_hoisted_4","components","banner","lending","rwa","power","render","routes","HomeView","children","redirect","createRouter","history","createWebHistory","defineStore","reactive","getList","allaccounts","Map","scaleDecimal","numbers","Decimal","isNeg","abs","SplAccountType","MultisigLayout","struct","u8","bool","span","AccountState","TokenError","_super","call","__extends","Error","TokenOwnerOffCurveError","TokenAccountNotFoundError","_this","apply","arguments","defineProperty","enumerable","configurable","writable","TokenInvalidAccountError","TokenInvalidAccountOwnerError","TokenInvalidAccountSizeError","TokenInvalidMintError","TokenInvalidOwnerError","TokenInvalidInstructionProgramError","TokenInvalidInstructionKeysError","TokenInvalidInstructionDataError","TokenInvalidInstructionTypeError","TokenUnsupportedInstructionError","AccountLayout","u64","u32","PublicKey","ExtensionType","TOKEN_PROGRAM_ID","ASSOCIATED_TOKEN_PROGRAM_ID","associatedTokenProgramId","isOnCurve","associatedToken","buildAssociatedTokenAccountInstruction","syncNativeInstructionData","keys","alloc","TokenInstruction","SyncNative","TransactionInstruction","closeAccountInstructionData","destination","authority","multiSigners","addSigners","CloseAccount","instructionData","SystemProgram","ownerOrAuthority","multiSigners_1","MintLayout","formatP","number","replace","nf","Intl","NumberFormat","format","formatPU","formatK","integer","unit","decimal","dp","ERR_BUFFER_OUT_OF_BOUNDS","ERR_INVALID_ARG_TYPE","expected","actual","ERR_OUT_OF_RANGE","str","range","received","validateNumber","boundsError","floor","readBigInt64LE","buffer","offset","first","last","val","BigInt","readBigUInt64LE","lo","hi","PriceStatus","CorpAction","MAX_SLOT_DIFFERENCE","empty32Buffer","PKorNull","AccountType","PriceType","parsePriceInfo","priceComponent","confidenceComponent","status","readUInt32LE","corporateAction","publishSlot","parsePriceData","currentSlot","magic","version","size","priceType","readInt32LE","numComponentPrices","numQuoters","lastSlot","validSlot","parseEma","slice","minPublishers","readUInt8","drv2","readInt8","drv3","readInt16LE","drv4","productAccountKey","nextPriceAccountKey","previousSlot","previousPriceComponent","previousConfidenceComponent","previousTimestamp","aggregate","Trading","Unknown","priceComponents","publisher","componentAggregate","latest","valueComponent","numerator","denominator","route","useRoute","msgFlag","ref","onMounted","async","href","pathname","msgLocal","query","channel","setItem","referrercode","solana","isONTO","onto","connectedWallet","removeItem","watch","og_channel","og_referrercode","deep","closeMsg","isLoadingFlag","timeOut","getBalanceCounts","init","ogScoreLv","computed","score","lv","$clear","pageName","clearTimeout","nxlendfunc","setTime","start","setInterval","stop","clearInterval","onUnmounted","_withScopeId","n","_pushScopeId","_popScopeId","_createElementVNode","src","_hoisted_3","_ctx","_cache","$props","$setup","$options","_openBlock","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","amdO","webpackQueues","Symbol","webpackExports","webpackError","resolveQueue","queue","d","fn","wrapDeps","deps","dep","obj","ret","a","body","hasAwait","currentDeps","outerResolve","reject","depQueues","Set","promise","rej","getResult","fnQueue","q","has","deferred","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","splice","getter","__esModule","definition","o","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","event","onerror","onload","doneFns","parentNode","removeChild","bind","target","head","appendChild","toStringTag","nmd","paths","createStylesheet","fullhref","oldTag","linkTag","rel","nonce","onLinkComplete","errorType","realHref","request","insertBefore","nextSibling","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","b","baseURI","self","installedChunks","installedChunkData","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}